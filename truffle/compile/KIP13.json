{
  "contractName": "KIP13",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IKIP13} interface. Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IKIP13-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interface/KIP13.sol\":\"KIP13\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"project:/contracts/interface/KIP13.sol\":{\"keccak256\":\"0x0ab042081054803f0848b52d602744d622bfa1d28d1715e89f5bc3953fb92e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://606d759baafec4da07cf4d3bdffc60cb3d3a1d56e2541b19a2a65ea5981d224f\",\"dweb:/ipfs/QmW6kHhMCrE3eXUuE3iDgWB4Bwe2CiTJs9c24Z6DcNt2Eq\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/KIP13.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/ERC165.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\nimport \"./IKIP13.sol\";\n\n/**\n * @dev Implementation of the {IKIP13} interface.\n *\n * Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract KIP13 is IKIP13 {\n    /**\n     * @dev See {IKIP13-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return interfaceId == type(IKIP13).interfaceId;\n    }\n}\n",
  "sourcePath": "/Users/yuhojin/Desktop/NFT-lendProject/Truffle/contracts/interface/KIP13.sol",
  "ast": {
    "absolutePath": "project:/contracts/interface/KIP13.sol",
    "exportedSymbols": {
      "IKIP13": [
        3487
      ],
      "KIP13": [
        7182
      ]
    },
    "id": 7183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7160,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "256:22:131"
      },
      {
        "absolutePath": "project:/contracts/interface/IKIP13.sol",
        "file": "./IKIP13.sol",
        "id": 7161,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7183,
        "sourceUnit": 3488,
        "src": "280:22:131",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7163,
              "name": "IKIP13",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3487,
              "src": "905:6:131"
            },
            "id": 7164,
            "nodeType": "InheritanceSpecifier",
            "src": "905:6:131"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7162,
          "nodeType": "StructuredDocumentation",
          "src": "304:573:131",
          "text": " @dev Implementation of the {IKIP13} interface.\n Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 7182,
        "linearizedBaseContracts": [
          7182,
          3487
        ],
        "name": "KIP13",
        "nameLocation": "896:5:131",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3486
            ],
            "body": {
              "id": 7180,
              "nodeType": "Block",
              "src": "1113:63:131",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 7178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7173,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7167,
                      "src": "1130:11:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 7175,
                            "name": "IKIP13",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3487,
                            "src": "1150:6:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IKIP13_$3487_$",
                              "typeString": "type(contract IKIP13)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IKIP13_$3487_$",
                              "typeString": "type(contract IKIP13)"
                            }
                          ],
                          "id": 7174,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "1145:4:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 7176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1145:12:131",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IKIP13_$3487",
                          "typeString": "type(contract IKIP13)"
                        }
                      },
                      "id": 7177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "1145:24:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1130:39:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7172,
                  "id": 7179,
                  "nodeType": "Return",
                  "src": "1123:46:131"
                }
              ]
            },
            "documentation": {
              "id": 7165,
              "nodeType": "StructuredDocumentation",
              "src": "918:55:131",
              "text": " @dev See {IKIP13-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 7181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "987:17:131",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7169,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1077:8:131"
            },
            "parameters": {
              "id": 7168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7167,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1012:11:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 7181,
                  "src": "1005:18:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7166,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:6:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1004:20:131"
            },
            "returnParameters": {
              "id": 7172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7181,
                  "src": "1103:4:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7170,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:4:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1102:6:131"
            },
            "scope": 7182,
            "src": "978:198:131",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 7183,
        "src": "878:300:131",
        "usedErrors": []
      }
    ],
    "src": "256:923:131"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/interface/KIP13.sol",
    "exportedSymbols": {
      "IKIP13": [
        3487
      ],
      "KIP13": [
        7182
      ]
    },
    "id": 7183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7160,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "256:22:131"
      },
      {
        "absolutePath": "project:/contracts/interface/IKIP13.sol",
        "file": "./IKIP13.sol",
        "id": 7161,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7183,
        "sourceUnit": 3488,
        "src": "280:22:131",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7163,
              "name": "IKIP13",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3487,
              "src": "905:6:131"
            },
            "id": 7164,
            "nodeType": "InheritanceSpecifier",
            "src": "905:6:131"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7162,
          "nodeType": "StructuredDocumentation",
          "src": "304:573:131",
          "text": " @dev Implementation of the {IKIP13} interface.\n Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 7182,
        "linearizedBaseContracts": [
          7182,
          3487
        ],
        "name": "KIP13",
        "nameLocation": "896:5:131",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3486
            ],
            "body": {
              "id": 7180,
              "nodeType": "Block",
              "src": "1113:63:131",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 7178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7173,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7167,
                      "src": "1130:11:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 7175,
                            "name": "IKIP13",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3487,
                            "src": "1150:6:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IKIP13_$3487_$",
                              "typeString": "type(contract IKIP13)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IKIP13_$3487_$",
                              "typeString": "type(contract IKIP13)"
                            }
                          ],
                          "id": 7174,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "1145:4:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 7176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1145:12:131",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IKIP13_$3487",
                          "typeString": "type(contract IKIP13)"
                        }
                      },
                      "id": 7177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "1145:24:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1130:39:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7172,
                  "id": 7179,
                  "nodeType": "Return",
                  "src": "1123:46:131"
                }
              ]
            },
            "documentation": {
              "id": 7165,
              "nodeType": "StructuredDocumentation",
              "src": "918:55:131",
              "text": " @dev See {IKIP13-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 7181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "987:17:131",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7169,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1077:8:131"
            },
            "parameters": {
              "id": 7168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7167,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1012:11:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 7181,
                  "src": "1005:18:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7166,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:6:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1004:20:131"
            },
            "returnParameters": {
              "id": 7172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7181,
                  "src": "1103:4:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7170,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:4:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1102:6:131"
            },
            "scope": 7182,
            "src": "978:198:131",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 7183,
        "src": "878:300:131",
        "usedErrors": []
      }
    ],
    "src": "256:923:131"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-08-08T11:59:53.782Z",
  "devdoc": {
    "details": "Implementation of the {IKIP13} interface. Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation.",
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IKIP13-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}