{
	"id": "6657f41a7a0b6860421b50b164c557f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Hero/utils/LevelDiagram.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./HeroController.sol\";\n\ncontract LevelDiagram is HeroController {\n    bytes32 private constant MYTHOLOGY = keccak256(\"Mythology\");\n    bytes32 private constant LEGENDARY = keccak256(\"Legendary\");\n    bytes32 private constant EPIC = keccak256(\"Epic\");\n    bytes32 private constant ADMINISTRATOR = keccak256(\"Administrator\");\n    bytes32 private constant NORMAL = keccak256(\"Normal\");\n\n    function calculateTokenAmount(string memory grade, uint256 level)\n        public\n        pure\n        returns (uint256)\n    {\n        uint256 gradeAmount = calculateBasicGradeAmount(grade);\n        uint256 levelAmount = calculateBasicLevelAmount(level);\n\n        return ((gradeAmount * levelAmount) / 10) * 1e18;\n    }\n\n    function calculateBasicLevelAmount(uint256 level)\n        internal\n        pure\n        returns (uint256)\n    {\n        return (\n            level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4\n                ? 80\n                : 0\n        );\n    }\n\n    function calculateBasicGradeAmount(string memory grade)\n        internal\n        pure\n        returns (uint256)\n    {\n        bytes32 gradeCheck = keccak256(bytes(grade));\n\n        return (\n            gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY\n                ? 450\n                : gradeCheck == EPIC\n                ? 300\n                : gradeCheck == ADMINISTRATOR\n                ? 225\n                : gradeCheck == NORMAL\n                ? 200\n                : 0\n        );\n    }\n\n    function calculateItemIndex(uint256 _power)\n        internal\n        view\n        returns (uint256)\n    {\n        for (uint256 i = 1; i <= 5; i++) {\n            uint256 randomNumber = makeRandomNumberForItem(i);\n\n            if (_power >= randomNumber) {\n                _power -= randomNumber;\n            } else {\n                return i;\n            }\n        }\n\n        return 0;\n    }\n\n    function calculatePower(string memory grade, uint256 level)\n        internal\n        view\n        returns (uint256)\n    {\n        bytes32 gradeCheck = keccak256(bytes(grade));\n\n        uint256 basicPower = (\n            gradeCheck == MYTHOLOGY ? 450 : gradeCheck == LEGENDARY\n                ? 300\n                : gradeCheck == EPIC\n                ? 200\n                : gradeCheck == ADMINISTRATOR\n                ? 150\n                : gradeCheck == NORMAL\n                ? 100\n                : 0\n        );\n\n        uint256 levelCheck = (\n            level == 1 ? 10 : level == 2 ? 15 : level == 3 ? 25 : level == 4\n                ? 40\n                : level == 5\n                ? 70\n                : 0\n        );\n\n        uint256 itemPower = 0;\n\n        for (uint256 i = 1; i <= 5; i++) {\n            uint256 balanceOf = getItem().balanceOf(msg.sender, i);\n            uint256 basicItemPower = i + 1;\n            itemPower = itemPower + (basicItemPower * balanceOf);\n        }\n\n        return ((basicPower + itemPower) * levelCheck) / 10;\n    }\n\n    function makeRandomNumberForItem(uint256 _tokenIndex)\n        internal\n        view\n        returns (uint256)\n    {\n        return\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        block.timestamp,\n                        block.difficulty,\n                        _tokenIndex\n                    )\n                )\n            ) % 1000;\n    }\n}\n"
			},
			"Hero/utils/HeroController.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../utils/SafeMath.sol\";\n\nimport \"../interface/IHeroNFT.sol\";\n\nimport \"../../interface/IKIP7/IKIP7.sol\";\nimport \"../../interface/IKIP37/IKIP37Full.sol\";\n\ncontract HeroController {\n    using SafeMath for *;\n\n    IHeroNFT private heroNFT;\n    IKIP7 private token;\n    IKIP37Full private item;\n\n    address payable private coreOwner;\n    address depositAddress;\n    address miningAddress;\n\n    bool private paused;\n    bool private miningPaused;\n\n    uint256 public priceOfKlay;\n    uint256 public priceOfToken;\n    uint256 private constant DECIMALS = 1e18;\n\n    modifier notPaused() {\n        require(!paused, \"Paused State\");\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\");\n        _;\n    }\n\n    constructor() {\n        paused = true;\n        miningPaused = true;\n        coreOwner = payable(msg.sender);\n    }\n\n    function initialize(\n        address _heroNFT,\n        address _token,\n        address _item,\n        address _depositAddress,\n        address _miningAddress,\n        uint256 _klay,\n        uint256 _tokenPrice\n    ) external onlyOwner {\n        priceOfKlay = _klay.mul(DECIMALS);\n        priceOfToken = _tokenPrice.mul(DECIMALS);\n\n        heroNFT = IHeroNFT(_heroNFT);\n        token = IKIP7(_token);\n        item = IKIP37Full(_item);\n\n        depositAddress = _depositAddress;\n        miningAddress = _miningAddress;\n    }\n\n    function changePaused() external onlyOwner {\n        paused = !paused;\n    }\n\n    function changeMiningPaused() external onlyOwner {\n        miningPaused = !miningPaused;\n    }\n\n    // **** view Function ****\n\n    function getOwner() public view returns (address payable) {\n        return coreOwner;\n    }\n\n    function getPaused() public view returns (bool) {\n        return paused;\n    }\n\n    function getMiningPaused() public view returns (bool) {\n        return miningPaused;\n    }\n\n    function getItem() public view returns (IKIP37Full) {\n        return item;\n    }\n\n    function getToken() public view returns (IKIP7) {\n        return token;\n    }\n\n    function getHeroNFT() public view returns (IHeroNFT) {\n        return heroNFT;\n    }\n\n    function _currentTime() internal view returns (uint256) {\n        return block.timestamp;\n    }\n}\n"
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37MetadataURI.sol\";\n\ninterface IKIP37Full is IKIP37MetadataURI {\n    function mint(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n\n    function burn(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n}\n"
			},
			"interface/IKIP7/IKIP7.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP7 standard as defined in the KIP.\n * See http://kips.klaytn.com/KIPs/kip-7-fungible_token\n */\ninterface IKIP7 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev  Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(address recipient, uint256 amount) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external;\n}\n"
			},
			"Hero/interface/IHeroNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../interface/IKIP17/IKIP17.sol\";\n\ninterface IHeroNFT is IKIP17 {\n    function mint(address _to) external;\n\n    function burn(uint256 _tokenId) external;\n\n    function setContract(address _heroCore) external;\n\n    function getHeroCore() external view returns (address);\n\n    function getTokenIndex() external view returns (uint256);\n}\n"
			},
			"utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37.sol\";\n\ninterface IKIP37MetadataURI is IKIP37 {\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"interface/IKIP17/IKIP17.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/IKIP17.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/IERC721.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IKIP17 is IKIP13 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed approved,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId)\n        external\n        view\n        returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator)\n        external\n        view\n        returns (bool);\n}\n"
			},
			"interface/IKIP37/IKIP37.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\ninterface IKIP37 is IKIP13 {\n    event TransferSingle(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256 _id,\n        uint256 _value\n    );\n    event TransferBatch(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256[] _ids,\n        uint256[] _values\n    );\n    event ApprovalForAll(\n        address indexed _owner,\n        address indexed _operator,\n        bool _approved\n    );\n    event URI(string _value, uint256 indexed _id);\n\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _id,\n        uint256 _value,\n        bytes calldata _data\n    ) external;\n\n    function safeBatchTransferFrom(\n        address _from,\n        address _to,\n        uint256[] calldata _ids,\n        uint256[] calldata _values,\n        bytes calldata _data\n    ) external;\n\n    function balanceOf(address _owner, uint256 _id)\n        external\n        view\n        returns (uint256);\n\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    function isApprovedForAll(address _owner, address _operator)\n        external\n        view\n        returns (bool);\n\n    function totalSupply(uint256 _id) external view returns (uint256);\n}\n"
			},
			"interface/IKIP13.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP13 standard as defined in the KIP.\n *\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\n */\ninterface IKIP13 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`.\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n     * to learn more about how these ids are created.\n     *\n     * Requirements:\n     *\n     * - implementation of this function call must use less than 30 000 gas\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Hero/interface/IHeroNFT.sol": {
				"IHeroNFT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHeroCore",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_heroCore",
									"type": "address"
								}
							],
							"name": "setContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"getHeroCore()": "bcbb72c8",
							"getTokenIndex()": "295d3ee8",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address)": "6a627842",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setContract(address)": "75f890ab",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHeroCore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heroCore\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/interface/IHeroNFT.sol\":\"IHeroNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/IHeroNFT.sol\":{\"keccak256\":\"0x28719918b6bcd5da2fc05c963dd0c407c3d256a41ba787fd7dd05cfb8e0eefbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922cc5d0a7c86837ac8697ee76295642fb8ca35453f7e2b20392dc4d3403e651\",\"dweb:/ipfs/QmPYwhoSmrcTJDR8HgQKH4nTfauncjRUMBDWJTAY99ygX5\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/utils/HeroController.sol": {
				"HeroController": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "changeMiningPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "changePaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHeroNFT",
							"outputs": [
								{
									"internalType": "contract IHeroNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getItem",
							"outputs": [
								{
									"internalType": "contract IKIP37Full",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMiningPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getToken",
							"outputs": [
								{
									"internalType": "contract IKIP7",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_heroNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_item",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_depositAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_miningAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_klay",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfKlay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Hero/utils/HeroController.sol\":220:2325  contract HeroController {... */\n  mstore(0x40, 0x80)\n    /* \"Hero/utils/HeroController.sol\":830:944  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Hero/utils/HeroController.sol\":863:867  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":854:860  paused */\n  0x05\n  0x14\n    /* \"Hero/utils/HeroController.sol\":854:867  paused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":892:896  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":877:889  miningPaused */\n  0x05\n  0x15\n    /* \"Hero/utils/HeroController.sol\":877:896  miningPaused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":926:936  msg.sender */\n  caller\n    /* \"Hero/utils/HeroController.sol\":906:915  coreOwner */\n  0x03\n  0x00\n    /* \"Hero/utils/HeroController.sol\":906:937  coreOwner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":220:2325  contract HeroController {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Hero/utils/HeroController.sol\":220:2325  contract HeroController {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7cac00ee\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x7cac00ee\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9eb4eae5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb33f9527\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc412eaba\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xee72b8cc\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x1b9cbdfb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21df0da7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x28919df6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a1a8080\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6805b84b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Hero/utils/HeroController.sol\":546:573  uint256 public priceOfToken */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2055:2132  function getToken() public view returns (IKIP7) {... */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1873:1963  function getMiningPaused() public view returns (bool) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":514:540  uint256 public priceOfKlay */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1789:1867  function getPaused() public view returns (bool) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2138:2222  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1692:1783  function getOwner() public view returns (address payable) {... */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1478:1554  function changePaused() external onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"Hero/utils/HeroController.sol\":950:1472  function initialize(... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Hero/utils/HeroController.sol\":1969:2049  function getItem() public view returns (IKIP37Full) {... */\n    tag_12:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1560:1654  function changeMiningPaused() external onlyOwner {... */\n    tag_13:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Hero/utils/HeroController.sol\":546:573  uint256 public priceOfToken */\n    tag_16:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2055:2132  function getToken() public view returns (IKIP7) {... */\n    tag_20:\n        /* \"Hero/utils/HeroController.sol\":2096:2101  IKIP7 */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2120:2125  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2113:2125  return token */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2055:2132  function getToken() public view returns (IKIP7) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1873:1963  function getMiningPaused() public view returns (bool) {... */\n    tag_24:\n        /* \"Hero/utils/HeroController.sol\":1921:1925  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1944:1956  miningPaused */\n      0x05\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1937:1956  return miningPaused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1873:1963  function getMiningPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":514:540  uint256 public priceOfKlay */\n    tag_28:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1789:1867  function getPaused() public view returns (bool) {... */\n    tag_31:\n        /* \"Hero/utils/HeroController.sol\":1831:1835  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1854:1860  paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1847:1860  return paused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1789:1867  function getPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2138:2222  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_34:\n        /* \"Hero/utils/HeroController.sol\":2181:2189  IHeroNFT */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2208:2215  heroNFT */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2201:2215  return heroNFT */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2138:2222  function getHeroNFT() public view returns (IHeroNFT) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1692:1783  function getOwner() public view returns (address payable) {... */\n    tag_38:\n        /* \"Hero/utils/HeroController.sol\":1733:1748  address payable */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1767:1776  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":1760:1776  return coreOwner */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1692:1783  function getOwner() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1478:1554  function changePaused() external onlyOwner {... */\n    tag_42:\n        /* \"Hero/utils/HeroController.sol\":766:775  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:762  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":744:806  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"Hero/utils/HeroController.sol\":1541:1547  paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1540:1547  !paused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1531:1537  paused */\n      0x05\n      0x14\n        /* \"Hero/utils/HeroController.sol\":1531:1547  paused = !paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1478:1554  function changePaused() external onlyOwner {... */\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":950:1472  function initialize(... */\n    tag_46:\n        /* \"Hero/utils/HeroController.sol\":766:775  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:762  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":744:806  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_61\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"Hero/utils/HeroController.sol\":1209:1228  _klay.mul(DECIMALS) */\n      tag_67\n        /* \"Hero/utils/HeroController.sol\":615:619  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1209:1214  _klay */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1209:1218  _klay.mul */\n      tag_68\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1209:1228  _klay.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"Hero/utils/HeroController.sol\":1195:1206  priceOfKlay */\n      0x06\n        /* \"Hero/utils/HeroController.sol\":1195:1228  priceOfKlay = _klay.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1253:1278  _tokenPrice.mul(DECIMALS) */\n      tag_69\n        /* \"Hero/utils/HeroController.sol\":615:619  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1253:1264  _tokenPrice */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1253:1268  _tokenPrice.mul */\n      tag_68\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1253:1278  _tokenPrice.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"Hero/utils/HeroController.sol\":1238:1250  priceOfToken */\n      0x07\n        /* \"Hero/utils/HeroController.sol\":1238:1278  priceOfToken = _tokenPrice.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1308:1316  _heroNFT */\n      dup7\n        /* \"Hero/utils/HeroController.sol\":1289:1296  heroNFT */\n      0x00\n      dup1\n        /* \"Hero/utils/HeroController.sol\":1289:1317  heroNFT = IHeroNFT(_heroNFT) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1341:1347  _token */\n      dup6\n        /* \"Hero/utils/HeroController.sol\":1327:1332  token */\n      0x01\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1327:1348  token = IKIP7(_token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1376:1381  _item */\n      dup5\n        /* \"Hero/utils/HeroController.sol\":1358:1362  item */\n      0x02\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1358:1382  item = IKIP37Full(_item) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1410:1425  _depositAddress */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1393:1407  depositAddress */\n      0x04\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1393:1425  depositAddress = _depositAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1451:1465  _miningAddress */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1435:1448  miningAddress */\n      0x05\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1435:1465  miningAddress = _miningAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":950:1472  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1969:2049  function getItem() public view returns (IKIP37Full) {... */\n    tag_48:\n        /* \"Hero/utils/HeroController.sol\":2009:2019  IKIP37Full */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2038:2042  item */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2031:2042  return item */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1969:2049  function getItem() public view returns (IKIP37Full) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1560:1654  function changeMiningPaused() external onlyOwner {... */\n    tag_52:\n        /* \"Hero/utils/HeroController.sol\":766:775  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:762  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":744:806  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_61\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"Hero/utils/HeroController.sol\":1635:1647  miningPaused */\n      0x05\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1634:1647  !miningPaused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1619:1631  miningPaused */\n      0x05\n      0x15\n        /* \"Hero/utils/HeroController.sol\":1619:1647  miningPaused = !miningPaused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1560:1654  function changeMiningPaused() external onlyOwner {... */\n      jump\t// out\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_68:\n        /* \"utils/SafeMath.sol\":341:348  uint256 */\n      0x00\n        /* \"utils/SafeMath.sol\":371:372  b */\n      dup2\n        /* \"utils/SafeMath.sol\":367:368  a */\n      dup4\n        /* \"utils/SafeMath.sol\":367:372  a * b */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"utils/SafeMath.sol\":360:372  return a * b */\n      swap1\n      pop\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_79:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_81\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_83:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_85\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:1433   */\n    tag_45:\n        /* \"#utility.yul\":410:416   */\n      0x00\n        /* \"#utility.yul\":418:424   */\n      dup1\n        /* \"#utility.yul\":426:432   */\n      0x00\n        /* \"#utility.yul\":434:440   */\n      dup1\n        /* \"#utility.yul\":442:448   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup1\n        /* \"#utility.yul\":458:464   */\n      0x00\n        /* \"#utility.yul\":507:510   */\n      0xe0\n        /* \"#utility.yul\":495:504   */\n      dup9\n        /* \"#utility.yul\":486:493   */\n      dup11\n        /* \"#utility.yul\":482:505   */\n      sub\n        /* \"#utility.yul\":478:511   */\n      slt\n        /* \"#utility.yul\":475:477   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":524:525   */\n      0x00\n        /* \"#utility.yul\":521:522   */\n      dup1\n        /* \"#utility.yul\":514:526   */\n      revert\n        /* \"#utility.yul\":475:477   */\n    tag_88:\n        /* \"#utility.yul\":567:568   */\n      0x00\n        /* \"#utility.yul\":592:645   */\n      tag_89\n        /* \"#utility.yul\":637:644   */\n      dup11\n        /* \"#utility.yul\":628:634   */\n      dup3\n        /* \"#utility.yul\":617:626   */\n      dup12\n        /* \"#utility.yul\":613:635   */\n      add\n        /* \"#utility.yul\":592:645   */\n      tag_79\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":582:645   */\n      swap8\n      pop\n        /* \"#utility.yul\":538:655   */\n      pop\n        /* \"#utility.yul\":694:696   */\n      0x20\n        /* \"#utility.yul\":720:773   */\n      tag_90\n        /* \"#utility.yul\":765:772   */\n      dup11\n        /* \"#utility.yul\":756:762   */\n      dup3\n        /* \"#utility.yul\":745:754   */\n      dup12\n        /* \"#utility.yul\":741:763   */\n      add\n        /* \"#utility.yul\":720:773   */\n      tag_79\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":710:773   */\n      swap7\n      pop\n        /* \"#utility.yul\":665:783   */\n      pop\n        /* \"#utility.yul\":822:824   */\n      0x40\n        /* \"#utility.yul\":848:901   */\n      tag_91\n        /* \"#utility.yul\":893:900   */\n      dup11\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup12\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_79\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":838:901   */\n      swap6\n      pop\n        /* \"#utility.yul\":793:911   */\n      pop\n        /* \"#utility.yul\":950:952   */\n      0x60\n        /* \"#utility.yul\":976:1029   */\n      tag_92\n        /* \"#utility.yul\":1021:1028   */\n      dup11\n        /* \"#utility.yul\":1012:1018   */\n      dup3\n        /* \"#utility.yul\":1001:1010   */\n      dup12\n        /* \"#utility.yul\":997:1019   */\n      add\n        /* \"#utility.yul\":976:1029   */\n      tag_79\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":966:1029   */\n      swap5\n      pop\n        /* \"#utility.yul\":921:1039   */\n      pop\n        /* \"#utility.yul\":1078:1081   */\n      0x80\n        /* \"#utility.yul\":1105:1158   */\n      tag_93\n        /* \"#utility.yul\":1150:1157   */\n      dup11\n        /* \"#utility.yul\":1141:1147   */\n      dup3\n        /* \"#utility.yul\":1130:1139   */\n      dup12\n        /* \"#utility.yul\":1126:1148   */\n      add\n        /* \"#utility.yul\":1105:1158   */\n      tag_79\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1095:1158   */\n      swap4\n      pop\n        /* \"#utility.yul\":1049:1168   */\n      pop\n        /* \"#utility.yul\":1207:1210   */\n      0xa0\n        /* \"#utility.yul\":1234:1287   */\n      tag_94\n        /* \"#utility.yul\":1279:1286   */\n      dup11\n        /* \"#utility.yul\":1270:1276   */\n      dup3\n        /* \"#utility.yul\":1259:1268   */\n      dup12\n        /* \"#utility.yul\":1255:1277   */\n      add\n        /* \"#utility.yul\":1234:1287   */\n      tag_83\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1224:1287   */\n      swap3\n      pop\n        /* \"#utility.yul\":1178:1297   */\n      pop\n        /* \"#utility.yul\":1336:1339   */\n      0xc0\n        /* \"#utility.yul\":1363:1416   */\n      tag_95\n        /* \"#utility.yul\":1408:1415   */\n      dup11\n        /* \"#utility.yul\":1399:1405   */\n      dup3\n        /* \"#utility.yul\":1388:1397   */\n      dup12\n        /* \"#utility.yul\":1384:1406   */\n      add\n        /* \"#utility.yul\":1363:1416   */\n      tag_83\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1353:1416   */\n      swap2\n      pop\n        /* \"#utility.yul\":1307:1426   */\n      pop\n        /* \"#utility.yul\":465:1433   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1581   */\n    tag_96:\n        /* \"#utility.yul\":1542:1574   */\n      tag_98\n        /* \"#utility.yul\":1568:1573   */\n      dup2\n        /* \"#utility.yul\":1542:1574   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1537:1540   */\n      dup3\n        /* \"#utility.yul\":1530:1575   */\n      mstore\n        /* \"#utility.yul\":1520:1581   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1587:1696   */\n    tag_100:\n        /* \"#utility.yul\":1668:1689   */\n      tag_102\n        /* \"#utility.yul\":1683:1688   */\n      dup2\n        /* \"#utility.yul\":1668:1689   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1663:1666   */\n      dup3\n        /* \"#utility.yul\":1656:1690   */\n      mstore\n        /* \"#utility.yul\":1646:1696   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1702:1863   */\n    tag_104:\n        /* \"#utility.yul\":1804:1856   */\n      tag_106\n        /* \"#utility.yul\":1850:1855   */\n      dup2\n        /* \"#utility.yul\":1804:1856   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1799:1802   */\n      dup3\n        /* \"#utility.yul\":1792:1857   */\n      mstore\n        /* \"#utility.yul\":1782:1863   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1869:2036   */\n    tag_108:\n        /* \"#utility.yul\":1974:2029   */\n      tag_110\n        /* \"#utility.yul\":2023:2028   */\n      dup2\n        /* \"#utility.yul\":1974:2029   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1969:1972   */\n      dup3\n        /* \"#utility.yul\":1962:2030   */\n      mstore\n        /* \"#utility.yul\":1952:2036   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2042:2199   */\n    tag_112:\n        /* \"#utility.yul\":2142:2192   */\n      tag_114\n        /* \"#utility.yul\":2186:2191   */\n      dup2\n        /* \"#utility.yul\":2142:2192   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2137:2140   */\n      dup3\n        /* \"#utility.yul\":2130:2193   */\n      mstore\n        /* \"#utility.yul\":2120:2199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2571   */\n    tag_116:\n        /* \"#utility.yul\":2347:2350   */\n      0x00\n        /* \"#utility.yul\":2368:2435   */\n      tag_118\n        /* \"#utility.yul\":2432:2434   */\n      0x1a\n        /* \"#utility.yul\":2427:2430   */\n      dup4\n        /* \"#utility.yul\":2368:2435   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2361:2435   */\n      swap2\n      pop\n        /* \"#utility.yul\":2444:2537   */\n      tag_120\n        /* \"#utility.yul\":2533:2536   */\n      dup3\n        /* \"#utility.yul\":2444:2537   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2562:2564   */\n      0x20\n        /* \"#utility.yul\":2557:2560   */\n      dup3\n        /* \"#utility.yul\":2553:2565   */\n      add\n        /* \"#utility.yul\":2546:2565   */\n      swap1\n      pop\n        /* \"#utility.yul\":2351:2571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2577:2695   */\n    tag_122:\n        /* \"#utility.yul\":2664:2688   */\n      tag_124\n        /* \"#utility.yul\":2682:2687   */\n      dup2\n        /* \"#utility.yul\":2664:2688   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2659:2662   */\n      dup3\n        /* \"#utility.yul\":2652:2689   */\n      mstore\n        /* \"#utility.yul\":2642:2695   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2701:2955   */\n    tag_40:\n        /* \"#utility.yul\":2810:2814   */\n      0x00\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"#utility.yul\":2837:2846   */\n      dup3\n        /* \"#utility.yul\":2833:2851   */\n      add\n        /* \"#utility.yul\":2825:2851   */\n      swap1\n      pop\n        /* \"#utility.yul\":2861:2948   */\n      tag_127\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2934:2943   */\n      dup4\n        /* \"#utility.yul\":2930:2947   */\n      add\n        /* \"#utility.yul\":2921:2927   */\n      dup5\n        /* \"#utility.yul\":2861:2948   */\n      tag_96\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2815:2955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2961:3171   */\n    tag_26:\n        /* \"#utility.yul\":3048:3052   */\n      0x00\n        /* \"#utility.yul\":3086:3088   */\n      0x20\n        /* \"#utility.yul\":3075:3084   */\n      dup3\n        /* \"#utility.yul\":3071:3089   */\n      add\n        /* \"#utility.yul\":3063:3089   */\n      swap1\n      pop\n        /* \"#utility.yul\":3099:3164   */\n      tag_129\n        /* \"#utility.yul\":3161:3162   */\n      0x00\n        /* \"#utility.yul\":3150:3159   */\n      dup4\n        /* \"#utility.yul\":3146:3163   */\n      add\n        /* \"#utility.yul\":3137:3143   */\n      dup5\n        /* \"#utility.yul\":3099:3164   */\n      tag_100\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3053:3171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3177:3429   */\n    tag_36:\n        /* \"#utility.yul\":3285:3289   */\n      0x00\n        /* \"#utility.yul\":3323:3325   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3308:3326   */\n      add\n        /* \"#utility.yul\":3300:3326   */\n      swap1\n      pop\n        /* \"#utility.yul\":3336:3422   */\n      tag_131\n        /* \"#utility.yul\":3419:3420   */\n      0x00\n        /* \"#utility.yul\":3408:3417   */\n      dup4\n        /* \"#utility.yul\":3404:3421   */\n      add\n        /* \"#utility.yul\":3395:3401   */\n      dup5\n        /* \"#utility.yul\":3336:3422   */\n      tag_104\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3290:3429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3435:3693   */\n    tag_50:\n        /* \"#utility.yul\":3546:3550   */\n      0x00\n        /* \"#utility.yul\":3584:3586   */\n      0x20\n        /* \"#utility.yul\":3573:3582   */\n      dup3\n        /* \"#utility.yul\":3569:3587   */\n      add\n        /* \"#utility.yul\":3561:3587   */\n      swap1\n      pop\n        /* \"#utility.yul\":3597:3686   */\n      tag_133\n        /* \"#utility.yul\":3683:3684   */\n      0x00\n        /* \"#utility.yul\":3672:3681   */\n      dup4\n        /* \"#utility.yul\":3668:3685   */\n      add\n        /* \"#utility.yul\":3659:3665   */\n      dup5\n        /* \"#utility.yul\":3597:3686   */\n      tag_108\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3551:3693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3699:3947   */\n    tag_22:\n        /* \"#utility.yul\":3805:3809   */\n      0x00\n        /* \"#utility.yul\":3843:3845   */\n      0x20\n        /* \"#utility.yul\":3832:3841   */\n      dup3\n        /* \"#utility.yul\":3828:3846   */\n      add\n        /* \"#utility.yul\":3820:3846   */\n      swap1\n      pop\n        /* \"#utility.yul\":3856:3940   */\n      tag_135\n        /* \"#utility.yul\":3937:3938   */\n      0x00\n        /* \"#utility.yul\":3926:3935   */\n      dup4\n        /* \"#utility.yul\":3922:3939   */\n      add\n        /* \"#utility.yul\":3913:3919   */\n      dup5\n        /* \"#utility.yul\":3856:3940   */\n      tag_112\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3810:3947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3953:4372   */\n    tag_61:\n        /* \"#utility.yul\":4119:4123   */\n      0x00\n        /* \"#utility.yul\":4157:4159   */\n      0x20\n        /* \"#utility.yul\":4146:4155   */\n      dup3\n        /* \"#utility.yul\":4142:4160   */\n      add\n        /* \"#utility.yul\":4134:4160   */\n      swap1\n      pop\n        /* \"#utility.yul\":4206:4215   */\n      dup2\n        /* \"#utility.yul\":4200:4204   */\n      dup2\n        /* \"#utility.yul\":4196:4216   */\n      sub\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4181:4190   */\n      dup4\n        /* \"#utility.yul\":4177:4194   */\n      add\n        /* \"#utility.yul\":4170:4217   */\n      mstore\n        /* \"#utility.yul\":4234:4365   */\n      tag_137\n        /* \"#utility.yul\":4360:4364   */\n      dup2\n        /* \"#utility.yul\":4234:4365   */\n      tag_116\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4226:4365   */\n      swap1\n      pop\n        /* \"#utility.yul\":4124:4372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4600   */\n    tag_18:\n        /* \"#utility.yul\":4471:4475   */\n      0x00\n        /* \"#utility.yul\":4509:4511   */\n      0x20\n        /* \"#utility.yul\":4498:4507   */\n      dup3\n        /* \"#utility.yul\":4494:4512   */\n      add\n        /* \"#utility.yul\":4486:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4522:4593   */\n      tag_139\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4579:4588   */\n      dup4\n        /* \"#utility.yul\":4575:4592   */\n      add\n        /* \"#utility.yul\":4566:4572   */\n      dup5\n        /* \"#utility.yul\":4522:4593   */\n      tag_122\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4476:4600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4606:4775   */\n    tag_119:\n        /* \"#utility.yul\":4690:4701   */\n      0x00\n        /* \"#utility.yul\":4724:4730   */\n      dup3\n        /* \"#utility.yul\":4719:4722   */\n      dup3\n        /* \"#utility.yul\":4712:4731   */\n      mstore\n        /* \"#utility.yul\":4764:4768   */\n      0x20\n        /* \"#utility.yul\":4759:4762   */\n      dup3\n        /* \"#utility.yul\":4755:4769   */\n      add\n        /* \"#utility.yul\":4740:4769   */\n      swap1\n      pop\n        /* \"#utility.yul\":4702:4775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4781:5129   */\n    tag_77:\n        /* \"#utility.yul\":4821:4828   */\n      0x00\n        /* \"#utility.yul\":4844:4864   */\n      tag_142\n        /* \"#utility.yul\":4862:4863   */\n      dup3\n        /* \"#utility.yul\":4844:4864   */\n      tag_125\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4839:4864   */\n      swap2\n      pop\n        /* \"#utility.yul\":4878:4898   */\n      tag_143\n        /* \"#utility.yul\":4896:4897   */\n      dup4\n        /* \"#utility.yul\":4878:4898   */\n      tag_125\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4873:4898   */\n      swap3\n      pop\n        /* \"#utility.yul\":5066:5067   */\n      dup2\n        /* \"#utility.yul\":4998:5064   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4994:5068   */\n      div\n        /* \"#utility.yul\":4991:4992   */\n      dup4\n        /* \"#utility.yul\":4988:5069   */\n      gt\n        /* \"#utility.yul\":4983:4984   */\n      dup3\n        /* \"#utility.yul\":4976:4985   */\n      iszero\n        /* \"#utility.yul\":4969:4986   */\n      iszero\n        /* \"#utility.yul\":4965:5070   */\n      and\n        /* \"#utility.yul\":4962:4964   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":5073:5091   */\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4962:4964   */\n    tag_144:\n        /* \"#utility.yul\":5121:5122   */\n      dup3\n        /* \"#utility.yul\":5118:5119   */\n      dup3\n        /* \"#utility.yul\":5114:5123   */\n      mul\n        /* \"#utility.yul\":5103:5123   */\n      swap1\n      pop\n        /* \"#utility.yul\":4829:5129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5135:5231   */\n    tag_147:\n        /* \"#utility.yul\":5172:5179   */\n      0x00\n        /* \"#utility.yul\":5201:5225   */\n      tag_149\n        /* \"#utility.yul\":5219:5224   */\n      dup3\n        /* \"#utility.yul\":5201:5225   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5190:5225   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5237:5341   */\n    tag_99:\n        /* \"#utility.yul\":5282:5289   */\n      0x00\n        /* \"#utility.yul\":5311:5335   */\n      tag_152\n        /* \"#utility.yul\":5329:5334   */\n      dup3\n        /* \"#utility.yul\":5311:5335   */\n      tag_150\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5300:5335   */\n      swap1\n      pop\n        /* \"#utility.yul\":5290:5341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5347:5437   */\n    tag_103:\n        /* \"#utility.yul\":5381:5388   */\n      0x00\n        /* \"#utility.yul\":5424:5429   */\n      dup2\n        /* \"#utility.yul\":5417:5430   */\n      iszero\n        /* \"#utility.yul\":5410:5431   */\n      iszero\n        /* \"#utility.yul\":5399:5431   */\n      swap1\n      pop\n        /* \"#utility.yul\":5389:5437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5443:5569   */\n    tag_150:\n        /* \"#utility.yul\":5480:5487   */\n      0x00\n        /* \"#utility.yul\":5520:5562   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5513:5518   */\n      dup3\n        /* \"#utility.yul\":5509:5563   */\n      and\n        /* \"#utility.yul\":5498:5563   */\n      swap1\n      pop\n        /* \"#utility.yul\":5488:5569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5575:5652   */\n    tag_125:\n        /* \"#utility.yul\":5612:5619   */\n      0x00\n        /* \"#utility.yul\":5641:5646   */\n      dup2\n        /* \"#utility.yul\":5630:5646   */\n      swap1\n      pop\n        /* \"#utility.yul\":5620:5652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5658:5814   */\n    tag_107:\n        /* \"#utility.yul\":5723:5732   */\n      0x00\n        /* \"#utility.yul\":5756:5808   */\n      tag_157\n        /* \"#utility.yul\":5802:5807   */\n      dup3\n        /* \"#utility.yul\":5756:5808   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5743:5808   */\n      swap1\n      pop\n        /* \"#utility.yul\":5733:5814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5820:5948   */\n    tag_158:\n        /* \"#utility.yul\":5885:5894   */\n      0x00\n        /* \"#utility.yul\":5918:5942   */\n      tag_160\n        /* \"#utility.yul\":5936:5941   */\n      dup3\n        /* \"#utility.yul\":5918:5942   */\n      tag_150\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5905:5942   */\n      swap1\n      pop\n        /* \"#utility.yul\":5895:5948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5954:6116   */\n    tag_111:\n        /* \"#utility.yul\":6022:6031   */\n      0x00\n        /* \"#utility.yul\":6055:6110   */\n      tag_162\n        /* \"#utility.yul\":6104:6109   */\n      dup3\n        /* \"#utility.yul\":6055:6110   */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":6042:6110   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6253   */\n    tag_163:\n        /* \"#utility.yul\":6190:6199   */\n      0x00\n        /* \"#utility.yul\":6223:6247   */\n      tag_165\n        /* \"#utility.yul\":6241:6246   */\n      dup3\n        /* \"#utility.yul\":6223:6247   */\n      tag_150\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6210:6247   */\n      swap1\n      pop\n        /* \"#utility.yul\":6200:6253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6259:6411   */\n    tag_115:\n        /* \"#utility.yul\":6322:6331   */\n      0x00\n        /* \"#utility.yul\":6355:6405   */\n      tag_167\n        /* \"#utility.yul\":6399:6404   */\n      dup3\n        /* \"#utility.yul\":6355:6405   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6342:6405   */\n      swap1\n      pop\n        /* \"#utility.yul\":6332:6411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6417:6543   */\n    tag_168:\n        /* \"#utility.yul\":6480:6489   */\n      0x00\n        /* \"#utility.yul\":6513:6537   */\n      tag_170\n        /* \"#utility.yul\":6531:6536   */\n      dup3\n        /* \"#utility.yul\":6513:6537   */\n      tag_150\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6500:6537   */\n      swap1\n      pop\n        /* \"#utility.yul\":6490:6543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6549:6729   */\n    tag_146:\n        /* \"#utility.yul\":6597:6674   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6594:6595   */\n      0x00\n        /* \"#utility.yul\":6587:6675   */\n      mstore\n        /* \"#utility.yul\":6694:6698   */\n      0x11\n        /* \"#utility.yul\":6691:6692   */\n      0x04\n        /* \"#utility.yul\":6684:6699   */\n      mstore\n        /* \"#utility.yul\":6718:6722   */\n      0x24\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6708:6723   */\n      revert\n        /* \"#utility.yul\":6735:6911   */\n    tag_121:\n        /* \"#utility.yul\":6875:6903   */\n      0x4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000\n        /* \"#utility.yul\":6871:6872   */\n      0x00\n        /* \"#utility.yul\":6863:6869   */\n      dup3\n        /* \"#utility.yul\":6859:6873   */\n      add\n        /* \"#utility.yul\":6852:6904   */\n      mstore\n        /* \"#utility.yul\":6841:6911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6917:7039   */\n    tag_82:\n        /* \"#utility.yul\":6990:7014   */\n      tag_174\n        /* \"#utility.yul\":7008:7013   */\n      dup2\n        /* \"#utility.yul\":6990:7014   */\n      tag_147\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6983:6988   */\n      dup2\n        /* \"#utility.yul\":6980:7015   */\n      eq\n        /* \"#utility.yul\":6970:6972   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":7029:7030   */\n      0x00\n        /* \"#utility.yul\":7026:7027   */\n      dup1\n        /* \"#utility.yul\":7019:7031   */\n      revert\n        /* \"#utility.yul\":6970:6972   */\n    tag_175:\n        /* \"#utility.yul\":6960:7039   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7045:7167   */\n    tag_86:\n        /* \"#utility.yul\":7118:7142   */\n      tag_177\n        /* \"#utility.yul\":7136:7141   */\n      dup2\n        /* \"#utility.yul\":7118:7142   */\n      tag_125\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7111:7116   */\n      dup2\n        /* \"#utility.yul\":7108:7143   */\n      eq\n        /* \"#utility.yul\":7098:7100   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":7157:7158   */\n      0x00\n        /* \"#utility.yul\":7154:7155   */\n      dup1\n        /* \"#utility.yul\":7147:7159   */\n      revert\n        /* \"#utility.yul\":7098:7100   */\n    tag_178:\n        /* \"#utility.yul\":7088:7167   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202dc58f6249faacd39372496e71942cfc9061f642196b6e12e7cfe2fe765af57a64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001600560146101000a81548160ff0219169083151502179055506001600560156101000a81548160ff02191690831515021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a50806100976000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637cac00ee116100715780637cac00ee14610144578063893d20e8146101625780639eb4eae514610180578063b33f95271461018a578063c412eaba146101a6578063ee72b8cc146101c4576100a9565b80631b9cbdfb146100ae57806321df0da7146100cc57806328919df6146100ea5780633a1a8080146101085780636805b84b14610126575b600080fd5b6100b66101ce565b6040516100c39190610848565b60405180910390f35b6100d46101d4565b6040516100e1919061080d565b60405180910390f35b6100f26101fe565b6040516100ff91906107bc565b60405180910390f35b610110610215565b60405161011d9190610848565b60405180910390f35b61012e61021b565b60405161013b91906107bc565b60405180910390f35b61014c610232565b60405161015991906107d7565b60405180910390f35b61016a61025b565b60405161017791906107a1565b60405180910390f35b610188610285565b005b6101a4600480360381019061019f9190610686565b610341565b005b6101ae610560565b6040516101bb91906107f2565b60405180910390f35b6101cc61058a565b005b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560159054906101000a900460ff16905090565b60065481565b6000600560149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c90610828565b60405180910390fd5b600560149054906101000a900460ff1615600560146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c890610828565b60405180910390fd5b6103ec670de0b6b3a76400008361064690919063ffffffff16565b60068190555061040d670de0b6b3a76400008261064690919063ffffffff16565b600781905550866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190610828565b60405180910390fd5b600560159054906101000a900460ff1615600560156101000a81548160ff021916908315150217905550565b600081836106549190610874565b905092915050565b60008135905061066b816109ec565b92915050565b60008135905061068081610a03565b92915050565b600080600080600080600060e0888a0312156106a157600080fd5b60006106af8a828b0161065c565b97505060206106c08a828b0161065c565b96505060406106d18a828b0161065c565b95505060606106e28a828b0161065c565b94505060806106f38a828b0161065c565b93505060a06107048a828b01610671565b92505060c06107158a828b01610671565b91505092959891949750929550565b61072d816108e0565b82525050565b61073c816108f2565b82525050565b61074b81610928565b82525050565b61075a8161094c565b82525050565b61076981610970565b82525050565b600061077c601a83610863565b9150610787826109c3565b602082019050919050565b61079b8161091e565b82525050565b60006020820190506107b66000830184610724565b92915050565b60006020820190506107d16000830184610733565b92915050565b60006020820190506107ec6000830184610742565b92915050565b60006020820190506108076000830184610751565b92915050565b60006020820190506108226000830184610760565b92915050565b600060208201905081810360008301526108418161076f565b9050919050565b600060208201905061085d6000830184610792565b92915050565b600082825260208201905092915050565b600061087f8261091e565b915061088a8361091e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108c3576108c2610994565b5b828202905092915050565b60006108d9826108fe565b9050919050565b60006108eb826108fe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109338261093a565b9050919050565b6000610945826108fe565b9050919050565b60006109578261095e565b9050919050565b6000610969826108fe565b9050919050565b600061097b82610982565b9050919050565b600061098d826108fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b6109f5816108ce565b8114610a0057600080fd5b50565b610a0c8161091e565b8114610a1757600080fd5b5056fea26469706673582212202dc58f6249faacd39372496e71942cfc9061f642196b6e12e7cfe2fe765af57a64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xA50 DUP1 PUSH2 0x97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CAC00EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xB33F9527 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1C4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C8 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3EC PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x40D PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66B DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x680 DUP2 PUSH2 0xA03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6AF DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x6C0 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x6D1 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x6E2 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x6F3 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x704 DUP11 DUP3 DUP12 ADD PUSH2 0x671 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x715 DUP11 DUP3 DUP12 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x72D DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x73C DUP2 PUSH2 0x8F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x74B DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x94C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH2 0x970 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C PUSH1 0x1A DUP4 PUSH2 0x863 JUMP JUMPDEST SWAP2 POP PUSH2 0x787 DUP3 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79B DUP2 PUSH2 0x91E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x724 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x733 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x807 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x751 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x822 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x841 DUP2 PUSH2 0x76F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x792 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP3 PUSH2 0x91E JUMP JUMPDEST SWAP2 POP PUSH2 0x88A DUP4 PUSH2 0x91E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x994 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x93A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x945 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x957 DUP3 PUSH2 0x95E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x969 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97B DUP3 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9F5 DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP2 EQ PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA0C DUP2 PUSH2 0x91E JUMP JUMPDEST DUP2 EQ PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xC5 DUP16 PUSH3 0x49FAAC 0xD3 SWAP4 PUSH19 0x496E71942CFC9061F642196B6E12E7CFE2FE76 GAS CREATE2 PUSH27 0x64736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "220:2105:1:-:0;;;830:114;;;;;;;;;;863:4;854:6;;:13;;;;;;;;;;;;;;;;;;892:4;877:12;;:19;;;;;;;;;;;;;;;;;;926:10;906:9;;:31;;;;;;;;;;;;;;;;;;220:2105;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7170:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "7:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:10",
														"type": ""
													}
												],
												"src": "152:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "465:968:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "521:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "524:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "514:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "514:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "514:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "486:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "495:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "482:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "482:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "507:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "478:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "478:33:10"
															},
															"nodeType": "YulIf",
															"src": "475:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "538:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "553:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "567:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "557:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "582:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "617:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "628:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "613:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "613:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "637:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "592:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "592:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "582:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "665:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "680:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "694:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "684:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "710:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "745:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "756:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "741:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "741:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "765:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "720:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "710:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "793:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "808:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "822:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "812:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "921:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "936:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "950:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "940:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "966:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1001:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1012:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "997:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1021:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "976:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "976:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "966:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1049:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1064:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1078:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1068:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1095:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1130:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1141:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1126:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1126:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1150:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1105:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1105:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1178:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1193:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1207:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1197:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1224:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1259:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1270:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1255:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1255:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1279:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1234:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1234:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "1224:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1307:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1322:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1326:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1353:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1388:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1399:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1384:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1384:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1408:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1363:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1363:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "1353:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "387:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "398:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "410:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "418:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "426:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "434:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "442:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "450:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "458:6:10",
														"type": ""
													}
												],
												"src": "297:1136:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1520:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1537:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1568:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1542:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1542:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1530:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1508:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1515:3:10",
														"type": ""
													}
												],
												"src": "1439:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1646:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1663:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1683:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1668:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1668:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1656:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1634:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1641:3:10",
														"type": ""
													}
												],
												"src": "1587:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1799:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1850:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1804:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:52:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1792:65:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1770:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1777:3:10",
														"type": ""
													}
												],
												"src": "1702:161:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1952:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1969:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2023:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP37Full_$852_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1974:48:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1974:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:68:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP37Full_$852_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1940:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1947:3:10",
														"type": ""
													}
												],
												"src": "1869:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2120:79:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2137:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2186:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP7_$983_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2142:43:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2142:50:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2130:63:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP7_$983_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2108:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2115:3:10",
														"type": ""
													}
												],
												"src": "2042:157:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2427:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2432:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2368:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2533:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																	"nodeType": "YulIdentifier",
																	"src": "2444:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2444:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2546:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2557:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2562:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2553:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2553:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2546:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2339:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:10",
														"type": ""
													}
												],
												"src": "2205:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2642:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2659:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2682:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2664:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2664:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2630:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2637:3:10",
														"type": ""
													}
												],
												"src": "2577:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2815:140:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2825:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2833:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2825:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2921:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2945:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2861:59:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2861:87:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2861:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2787:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2799:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2810:4:10",
														"type": ""
													}
												],
												"src": "2701:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3053:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3063:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3075:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3086:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3071:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3063:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3137:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3161:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3146:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3099:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3099:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3025:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3037:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3048:4:10",
														"type": ""
													}
												],
												"src": "2961:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3290:139:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3300:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3312:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3308:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3308:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3300:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3395:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3408:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3404:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3404:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3336:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3336:86:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3336:86:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3262:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3274:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3285:4:10",
														"type": ""
													}
												],
												"src": "3177:252:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3551:142:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3561:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3573:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3561:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3659:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3672:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3683:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP37Full_$852_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3597:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3597:89:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3597:89:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP37Full_$852__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3523:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3535:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3546:4:10",
														"type": ""
													}
												],
												"src": "3435:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3810:137:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3820:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3828:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3820:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3913:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3926:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3937:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3922:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3922:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP7_$983_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3856:56:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:84:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:84:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP7_$983__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3782:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3794:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3805:4:10",
														"type": ""
													}
												],
												"src": "3699:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4124:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4134:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4146:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4142:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4142:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4134:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4181:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4192:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4177:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4177:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4200:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4206:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4196:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4226:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4360:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4234:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4234:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4226:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4104:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4119:4:10",
														"type": ""
													}
												],
												"src": "3953:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4476:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4486:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4498:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4486:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4566:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4579:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4590:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4575:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4575:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4522:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4522:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4522:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4448:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4460:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4471:4:10",
														"type": ""
													}
												],
												"src": "4378:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4702:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4719:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4724:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4712:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4740:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4759:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4740:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4674:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4679:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4690:11:10",
														"type": ""
													}
												],
												"src": "4606:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4829:300:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4839:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4862:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4844:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4839:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4896:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4878:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4873:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5071:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5073:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5073:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5073:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4983:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4976:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4976:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4969:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4969:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4991:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4998:66:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5066:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4994:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4994:74:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4988:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:81:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4965:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:105:10"
															},
															"nodeType": "YulIf",
															"src": "4962:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5103:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5118:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5121:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5114:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5103:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4812:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4815:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4821:7:10",
														"type": ""
													}
												],
												"src": "4781:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5180:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5190:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5219:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5201:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5190:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5162:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5172:7:10",
														"type": ""
													}
												],
												"src": "5135:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5300:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5329:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5311:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5300:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5272:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5282:7:10",
														"type": ""
													}
												],
												"src": "5237:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5389:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5399:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5424:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5417:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5417:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5399:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5371:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5381:7:10",
														"type": ""
													}
												],
												"src": "5347:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5488:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5498:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5513:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5520:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5509:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5509:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5498:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5470:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5480:7:10",
														"type": ""
													}
												],
												"src": "5443:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5620:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5630:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5641:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5630:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5602:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5612:7:10",
														"type": ""
													}
												],
												"src": "5575:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5733:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5743:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5802:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5756:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:52:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5743:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5713:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5723:9:10",
														"type": ""
													}
												],
												"src": "5658:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5895:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5905:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5936:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5918:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5918:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5905:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5875:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5885:9:10",
														"type": ""
													}
												],
												"src": "5820:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6032:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6042:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6104:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP37Full_$852_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6055:48:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6055:55:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6042:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$852_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6012:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6022:9:10",
														"type": ""
													}
												],
												"src": "5954:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6200:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6210:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6241:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6223:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6223:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6210:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$852_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6180:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6190:9:10",
														"type": ""
													}
												],
												"src": "6122:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6332:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6342:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6399:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP7_$983_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6355:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6355:50:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6342:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$983_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6312:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6322:9:10",
														"type": ""
													}
												],
												"src": "6259:152:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6490:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6531:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6513:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6513:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6500:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$983_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6470:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6480:9:10",
														"type": ""
													}
												],
												"src": "6417:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6577:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6594:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6597:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6587:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6587:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6691:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6694:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6684:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6684:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6718:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6549:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6841:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6863:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6871:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6859:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6859:14:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6875:28:10",
																		"type": "",
																		"value": "HeroCore Error : onlyOwner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6852:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6852:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6852:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6833:6:10",
														"type": ""
													}
												],
												"src": "6735:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6960:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7017:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7026:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7029:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7019:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7019:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7019:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6983:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7008:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6990:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6990:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6980:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6980:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6973:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6973:43:10"
															},
															"nodeType": "YulIf",
															"src": "6970:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6953:5:10",
														"type": ""
													}
												],
												"src": "6917:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7088:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7145:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7154:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7157:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7147:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7147:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7147:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7111:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7136:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7118:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7118:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7108:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7108:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7101:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:43:10"
															},
															"nodeType": "YulIf",
															"src": "7098:2:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7081:5:10",
														"type": ""
													}
												],
												"src": "7045:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IHeroNFT_$30_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP37Full_$852_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP37Full_$852_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP7_$983_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP7_$983_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP37Full_$852__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP37Full_$852_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP7_$983__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP7_$983_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IHeroNFT_$30_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$852_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP37Full_$852_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$852_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$983_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP7_$983_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$983_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"HeroCore Error : onlyOwner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80637cac00ee116100715780637cac00ee14610144578063893d20e8146101625780639eb4eae514610180578063b33f95271461018a578063c412eaba146101a6578063ee72b8cc146101c4576100a9565b80631b9cbdfb146100ae57806321df0da7146100cc57806328919df6146100ea5780633a1a8080146101085780636805b84b14610126575b600080fd5b6100b66101ce565b6040516100c39190610848565b60405180910390f35b6100d46101d4565b6040516100e1919061080d565b60405180910390f35b6100f26101fe565b6040516100ff91906107bc565b60405180910390f35b610110610215565b60405161011d9190610848565b60405180910390f35b61012e61021b565b60405161013b91906107bc565b60405180910390f35b61014c610232565b60405161015991906107d7565b60405180910390f35b61016a61025b565b60405161017791906107a1565b60405180910390f35b610188610285565b005b6101a4600480360381019061019f9190610686565b610341565b005b6101ae610560565b6040516101bb91906107f2565b60405180910390f35b6101cc61058a565b005b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560159054906101000a900460ff16905090565b60065481565b6000600560149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c90610828565b60405180910390fd5b600560149054906101000a900460ff1615600560146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c890610828565b60405180910390fd5b6103ec670de0b6b3a76400008361064690919063ffffffff16565b60068190555061040d670de0b6b3a76400008261064690919063ffffffff16565b600781905550866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190610828565b60405180910390fd5b600560159054906101000a900460ff1615600560156101000a81548160ff021916908315150217905550565b600081836106549190610874565b905092915050565b60008135905061066b816109ec565b92915050565b60008135905061068081610a03565b92915050565b600080600080600080600060e0888a0312156106a157600080fd5b60006106af8a828b0161065c565b97505060206106c08a828b0161065c565b96505060406106d18a828b0161065c565b95505060606106e28a828b0161065c565b94505060806106f38a828b0161065c565b93505060a06107048a828b01610671565b92505060c06107158a828b01610671565b91505092959891949750929550565b61072d816108e0565b82525050565b61073c816108f2565b82525050565b61074b81610928565b82525050565b61075a8161094c565b82525050565b61076981610970565b82525050565b600061077c601a83610863565b9150610787826109c3565b602082019050919050565b61079b8161091e565b82525050565b60006020820190506107b66000830184610724565b92915050565b60006020820190506107d16000830184610733565b92915050565b60006020820190506107ec6000830184610742565b92915050565b60006020820190506108076000830184610751565b92915050565b60006020820190506108226000830184610760565b92915050565b600060208201905081810360008301526108418161076f565b9050919050565b600060208201905061085d6000830184610792565b92915050565b600082825260208201905092915050565b600061087f8261091e565b915061088a8361091e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108c3576108c2610994565b5b828202905092915050565b60006108d9826108fe565b9050919050565b60006108eb826108fe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109338261093a565b9050919050565b6000610945826108fe565b9050919050565b60006109578261095e565b9050919050565b6000610969826108fe565b9050919050565b600061097b82610982565b9050919050565b600061098d826108fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b6109f5816108ce565b8114610a0057600080fd5b50565b610a0c8161091e565b8114610a1757600080fd5b5056fea26469706673582212202dc58f6249faacd39372496e71942cfc9061f642196b6e12e7cfe2fe765af57a64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CAC00EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xB33F9527 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1C4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C8 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3EC PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x40D PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66B DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x680 DUP2 PUSH2 0xA03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6AF DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x6C0 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x6D1 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x6E2 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x6F3 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x704 DUP11 DUP3 DUP12 ADD PUSH2 0x671 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x715 DUP11 DUP3 DUP12 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x72D DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x73C DUP2 PUSH2 0x8F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x74B DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x94C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH2 0x970 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C PUSH1 0x1A DUP4 PUSH2 0x863 JUMP JUMPDEST SWAP2 POP PUSH2 0x787 DUP3 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79B DUP2 PUSH2 0x91E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x724 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x733 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x807 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x751 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x822 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x841 DUP2 PUSH2 0x76F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x792 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP3 PUSH2 0x91E JUMP JUMPDEST SWAP2 POP PUSH2 0x88A DUP4 PUSH2 0x91E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x994 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x93A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x945 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x957 DUP3 PUSH2 0x95E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x969 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97B DUP3 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9F5 DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP2 EQ PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA0C DUP2 PUSH2 0x91E JUMP JUMPDEST DUP2 EQ PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xC5 DUP16 PUSH3 0x49FAAC 0xD3 SWAP4 PUSH19 0x496E71942CFC9061F642196B6E12E7CFE2FE76 GAS CREATE2 PUSH27 0x64736F6C6343000804003300000000000000000000000000000000 ",
							"sourceMap": "220:2105:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;546:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1873:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;514:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1789:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2138:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1692:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1478:76;;;:::i;:::-;;950:522;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1969:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1560:94;;;:::i;:::-;;546:27;;;;:::o;2055:77::-;2096:5;2120;;;;;;;;;;;2113:12;;2055:77;:::o;1873:90::-;1921:4;1944:12;;;;;;;;;;;1937:19;;1873:90;:::o;514:26::-;;;;:::o;1789:78::-;1831:4;1854:6;;;;;;;;;;;1847:13;;1789:78;:::o;2138:84::-;2181:8;2208:7;;;;;;;;;;;2201:14;;2138:84;:::o;1692:91::-;1733:15;1767:9;;;;;;;;;;;1760:16;;1692:91;:::o;1478:76::-;766:9;;;;;;;;;;;752:23;;:10;:23;;;744:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1541:6:::1;;;;;;;;;;;1540:7;1531:6;;:16;;;;;;;;;;;;;;;;;;1478:76::o:0;950:522::-;766:9;;;;;;;;;;;752:23;;:10;:23;;;744:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1209:19:::1;615:4;1209:5;:9;;:19;;;;:::i;:::-;1195:11;:33;;;;1253:25;615:4;1253:11;:15;;:25;;;;:::i;:::-;1238:12;:40;;;;1308:8;1289:7;::::0;:28:::1;;;;;;;;;;;;;;;;;;1341:6;1327:5;;:21;;;;;;;;;;;;;;;;;;1376:5;1358:4;;:24;;;;;;;;;;;;;;;;;;1410:15;1393:14;;:32;;;;;;;;;;;;;;;;;;1451:14;1435:13;;:30;;;;;;;;;;;;;;;;;;950:522:::0;;;;;;;:::o;1969:80::-;2009:10;2038:4;;;;;;;;;;;2031:11;;1969:80;:::o;1560:94::-;766:9;;;;;;;;;;;752:23;;:10;:23;;;744:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1635:12:::1;;;;;;;;;;;1634:13;1619:12;;:28;;;;;;;;;;;;;;;;;;1560:94::o:0;283:96:9:-;341:7;371:1;367;:5;;;;:::i;:::-;360:12;;283:96;;;;:::o;7:139:10:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:1136::-;410:6;418;426;434;442;450;458;507:3;495:9;486:7;482:23;478:33;475:2;;;524:1;521;514:12;475:2;567:1;592:53;637:7;628:6;617:9;613:22;592:53;:::i;:::-;582:63;;538:117;694:2;720:53;765:7;756:6;745:9;741:22;720:53;:::i;:::-;710:63;;665:118;822:2;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;793:118;950:2;976:53;1021:7;1012:6;1001:9;997:22;976:53;:::i;:::-;966:63;;921:118;1078:3;1105:53;1150:7;1141:6;1130:9;1126:22;1105:53;:::i;:::-;1095:63;;1049:119;1207:3;1234:53;1279:7;1270:6;1259:9;1255:22;1234:53;:::i;:::-;1224:63;;1178:119;1336:3;1363:53;1408:7;1399:6;1388:9;1384:22;1363:53;:::i;:::-;1353:63;;1307:119;465:968;;;;;;;;;;:::o;1439:142::-;1542:32;1568:5;1542:32;:::i;:::-;1537:3;1530:45;1520:61;;:::o;1587:109::-;1668:21;1683:5;1668:21;:::i;:::-;1663:3;1656:34;1646:50;;:::o;1702:161::-;1804:52;1850:5;1804:52;:::i;:::-;1799:3;1792:65;1782:81;;:::o;1869:167::-;1974:55;2023:5;1974:55;:::i;:::-;1969:3;1962:68;1952:84;;:::o;2042:157::-;2142:50;2186:5;2142:50;:::i;:::-;2137:3;2130:63;2120:79;;:::o;2205:366::-;2347:3;2368:67;2432:2;2427:3;2368:67;:::i;:::-;2361:74;;2444:93;2533:3;2444:93;:::i;:::-;2562:2;2557:3;2553:12;2546:19;;2351:220;;;:::o;2577:118::-;2664:24;2682:5;2664:24;:::i;:::-;2659:3;2652:37;2642:53;;:::o;2701:254::-;2810:4;2848:2;2837:9;2833:18;2825:26;;2861:87;2945:1;2934:9;2930:17;2921:6;2861:87;:::i;:::-;2815:140;;;;:::o;2961:210::-;3048:4;3086:2;3075:9;3071:18;3063:26;;3099:65;3161:1;3150:9;3146:17;3137:6;3099:65;:::i;:::-;3053:118;;;;:::o;3177:252::-;3285:4;3323:2;3312:9;3308:18;3300:26;;3336:86;3419:1;3408:9;3404:17;3395:6;3336:86;:::i;:::-;3290:139;;;;:::o;3435:258::-;3546:4;3584:2;3573:9;3569:18;3561:26;;3597:89;3683:1;3672:9;3668:17;3659:6;3597:89;:::i;:::-;3551:142;;;;:::o;3699:248::-;3805:4;3843:2;3832:9;3828:18;3820:26;;3856:84;3937:1;3926:9;3922:17;3913:6;3856:84;:::i;:::-;3810:137;;;;:::o;3953:419::-;4119:4;4157:2;4146:9;4142:18;4134:26;;4206:9;4200:4;4196:20;4192:1;4181:9;4177:17;4170:47;4234:131;4360:4;4234:131;:::i;:::-;4226:139;;4124:248;;;:::o;4378:222::-;4471:4;4509:2;4498:9;4494:18;4486:26;;4522:71;4590:1;4579:9;4575:17;4566:6;4522:71;:::i;:::-;4476:124;;;;:::o;4606:169::-;4690:11;4724:6;4719:3;4712:19;4764:4;4759:3;4755:14;4740:29;;4702:73;;;;:::o;4781:348::-;4821:7;4844:20;4862:1;4844:20;:::i;:::-;4839:25;;4878:20;4896:1;4878:20;:::i;:::-;4873:25;;5066:1;4998:66;4994:74;4991:1;4988:81;4983:1;4976:9;4969:17;4965:105;4962:2;;;5073:18;;:::i;:::-;4962:2;5121:1;5118;5114:9;5103:20;;4829:300;;;;:::o;5135:96::-;5172:7;5201:24;5219:5;5201:24;:::i;:::-;5190:35;;5180:51;;;:::o;5237:104::-;5282:7;5311:24;5329:5;5311:24;:::i;:::-;5300:35;;5290:51;;;:::o;5347:90::-;5381:7;5424:5;5417:13;5410:21;5399:32;;5389:48;;;:::o;5443:126::-;5480:7;5520:42;5513:5;5509:54;5498:65;;5488:81;;;:::o;5575:77::-;5612:7;5641:5;5630:16;;5620:32;;;:::o;5658:156::-;5723:9;5756:52;5802:5;5756:52;:::i;:::-;5743:65;;5733:81;;;:::o;5820:128::-;5885:9;5918:24;5936:5;5918:24;:::i;:::-;5905:37;;5895:53;;;:::o;5954:162::-;6022:9;6055:55;6104:5;6055:55;:::i;:::-;6042:68;;6032:84;;;:::o;6122:131::-;6190:9;6223:24;6241:5;6223:24;:::i;:::-;6210:37;;6200:53;;;:::o;6259:152::-;6322:9;6355:50;6399:5;6355:50;:::i;:::-;6342:63;;6332:79;;;:::o;6417:126::-;6480:9;6513:24;6531:5;6513:24;:::i;:::-;6500:37;;6490:53;;;:::o;6549:180::-;6597:77;6594:1;6587:88;6694:4;6691:1;6684:15;6718:4;6715:1;6708:15;6735:176;6875:28;6871:1;6863:6;6859:14;6852:52;6841:70;:::o;6917:122::-;6990:24;7008:5;6990:24;:::i;:::-;6983:5;6980:35;6970:2;;7029:1;7026;7019:12;6970:2;6960:79;:::o;7045:122::-;7118:24;7136:5;7118:24;:::i;:::-;7111:5;7108:35;7098:2;;7157:1;7154;7147:12;7098:2;7088:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "528000",
								"executionCost": "63262",
								"totalCost": "591262"
							},
							"external": {
								"changeMiningPaused()": "22930",
								"changePaused()": "22864",
								"getHeroNFT()": "1265",
								"getItem()": "1353",
								"getMiningPaused()": "1274",
								"getOwner()": "1244",
								"getPaused()": "1318",
								"getToken()": "1288",
								"initialize(address,address,address,address,address,uint256,uint256)": "infinite",
								"priceOfKlay()": "1196",
								"priceOfToken()": "1130"
							},
							"internal": {
								"_currentTime()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2325,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 220,
									"end": 2325,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 220,
									"end": 2325,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 830,
									"end": 944,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 830,
									"end": 944,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 830,
									"end": 944,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 830,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 830,
									"end": 944,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 830,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 944,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 830,
									"end": 944,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 830,
									"end": 944,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 830,
									"end": 944,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 830,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 863,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 854,
									"end": 860,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 854,
									"end": 860,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 854,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 854,
									"end": 867,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 854,
									"end": 867,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 892,
									"end": 896,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 877,
									"end": 896,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 877,
									"end": 896,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 877,
									"end": 896,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 926,
									"end": 936,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 906,
									"end": 915,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 906,
									"end": 915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 906,
									"end": 937,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 906,
									"end": 937,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 906,
									"end": 937,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2325,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2325,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2325,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2325,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2325,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2325,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2325,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202dc58f6249faacd39372496e71942cfc9061f642196b6e12e7cfe2fe765af57a64736f6c63430008040033",
									".code": [
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "7CAC00EE"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "7CAC00EE"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "893D20E8"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "9EB4EAE5"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "B33F9527"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "C412EABA"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "EE72B8CC"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "1B9CBDFB"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "21DF0DA7"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "28919DF6"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "3A1A8080"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "6805B84B"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2325,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1547,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 615,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 615,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1253,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1238,
											"end": 1278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1278,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1316,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1327,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 341,
											"end": 348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 1433,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 297,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 410,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 424,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 426,
											"end": 432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 440,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 495,
											"end": 504,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 486,
											"end": 493,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 482,
											"end": 505,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 478,
											"end": 511,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 475,
											"end": 477,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 475,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 475,
											"end": 477,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 524,
											"end": 525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 522,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 514,
											"end": 526,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 475,
											"end": 477,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 475,
											"end": 477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 567,
											"end": 568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 637,
											"end": 644,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 628,
											"end": 634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 617,
											"end": 626,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 613,
											"end": 635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 592,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 582,
											"end": 645,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 582,
											"end": 645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 694,
											"end": 696,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 765,
											"end": 772,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 741,
											"end": 763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 720,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 720,
											"end": 773,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 720,
											"end": 773,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 720,
											"end": 773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 773,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 710,
											"end": 773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 665,
											"end": 783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 966,
											"end": 1029,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 966,
											"end": 1029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 921,
											"end": 1039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1081,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1150,
											"end": 1157,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1141,
											"end": 1147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1139,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1126,
											"end": 1148,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1158,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1210,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1268,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1287,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1336,
											"end": 1339,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1408,
											"end": 1415,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1397,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1384,
											"end": 1406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1439,
											"end": 1581,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1439,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1568,
											"end": 1573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1581,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1587,
											"end": 1696,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1587,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1683,
											"end": 1688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1696,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1702,
											"end": 1863,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1702,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1799,
											"end": 1802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1863,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1869,
											"end": 2036,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1869,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 1972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 2030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 2036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 2036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 2036,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2042,
											"end": 2199,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2042,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2186,
											"end": 2191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2193,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2199,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2571,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2205,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2432,
											"end": 2434,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 2427,
											"end": 2430,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2435,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2533,
											"end": 2536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2571,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2571,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2577,
											"end": 2695,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2577,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2682,
											"end": 2687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2659,
											"end": 2662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2689,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2695,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2701,
											"end": 2955,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 2947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2961,
											"end": 3171,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2961,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3084,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3177,
											"end": 3429,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3177,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3419,
											"end": 3420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3435,
											"end": 3693,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3435,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3573,
											"end": 3582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3561,
											"end": 3587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3561,
											"end": 3587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3681,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3668,
											"end": 3685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3665,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3935,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3913,
											"end": 3919,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3953,
											"end": 4372,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3953,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4157,
											"end": 4159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4216,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4190,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4170,
											"end": 4217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4372,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4378,
											"end": 4600,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 4378,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4498,
											"end": 4507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4575,
											"end": 4592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4566,
											"end": 4572,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4606,
											"end": 4775,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4606,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4690,
											"end": 4701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4731,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4764,
											"end": 4768,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4781,
											"end": 5129,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4781,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4864,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4896,
											"end": 4897,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4998,
											"end": 5064,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5068,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 4992,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5069,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 4984,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4976,
											"end": 4985,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5070,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5114,
											"end": 5123,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5135,
											"end": 5231,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5135,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 5219,
											"end": 5224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5231,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5237,
											"end": 5341,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5237,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5329,
											"end": 5334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5300,
											"end": 5335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5300,
											"end": 5335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5341,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5347,
											"end": 5437,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5347,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5381,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5437,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5443,
											"end": 5569,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5443,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5480,
											"end": 5487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5513,
											"end": 5518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5563,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5575,
											"end": 5652,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 5575,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5612,
											"end": 5619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5652,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5658,
											"end": 5814,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5658,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5802,
											"end": 5807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5814,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5814,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5820,
											"end": 5948,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5820,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5936,
											"end": 5941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5948,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5954,
											"end": 6116,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5954,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6104,
											"end": 6109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6042,
											"end": 6110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6042,
											"end": 6110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6116,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6122,
											"end": 6253,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6122,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 6241,
											"end": 6246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6210,
											"end": 6247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6210,
											"end": 6247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6259,
											"end": 6411,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 6259,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6399,
											"end": 6404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6411,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6417,
											"end": 6543,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6417,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6531,
											"end": 6536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6543,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6549,
											"end": 6729,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6549,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6674,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6691,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6722,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6723,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6911,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 6735,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6875,
											"end": 6903,
											"name": "PUSH",
											"source": 10,
											"value": "4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000"
										},
										{
											"begin": 6871,
											"end": 6872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 6873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6852,
											"end": 6904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6911,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6917,
											"end": 7039,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 6917,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7008,
											"end": 7013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 6988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6980,
											"end": 7015,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7029,
											"end": 7030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7027,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7031,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7039,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7045,
											"end": 7167,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 7045,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 7136,
											"end": 7141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7111,
											"end": 7116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7108,
											"end": 7143,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7159,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7167,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeMiningPaused()": "ee72b8cc",
							"changePaused()": "9eb4eae5",
							"getHeroNFT()": "7cac00ee",
							"getItem()": "c412eaba",
							"getMiningPaused()": "28919df6",
							"getOwner()": "893d20e8",
							"getPaused()": "6805b84b",
							"getToken()": "21df0da7",
							"initialize(address,address,address,address,address,uint256,uint256)": "b33f9527",
							"priceOfKlay()": "3a1a8080",
							"priceOfToken()": "1b9cbdfb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"changeMiningPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changePaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHeroNFT\",\"outputs\":[{\"internalType\":\"contract IHeroNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getItem\",\"outputs\":[{\"internalType\":\"contract IKIP37Full\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMiningPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IKIP7\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heroNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_miningAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_klay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfKlay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/utils/HeroController.sol\":\"HeroController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/IHeroNFT.sol\":{\"keccak256\":\"0x28719918b6bcd5da2fc05c963dd0c407c3d256a41ba787fd7dd05cfb8e0eefbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922cc5d0a7c86837ac8697ee76295642fb8ca35453f7e2b20392dc4d3403e651\",\"dweb:/ipfs/QmPYwhoSmrcTJDR8HgQKH4nTfauncjRUMBDWJTAY99ygX5\"]},\"Hero/utils/HeroController.sol\":{\"keccak256\":\"0xd82c174f7827d6c2ab52e655bd74c48e0da4b00ff3b5d25db7ccbbc016bae313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73539f93aa11a05c7a96f38d9a44b047f32332fba9e53db725c6134bf72f0d3b\",\"dweb:/ipfs/QmYXaRVd6FPLY22UfTDXbxzAyNcaas2YncmSBNiZZoardu\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]},\"interface/IKIP7/IKIP7.sol\":{\"keccak256\":\"0x5682f350cd2e8a78fc918639e421e7e81ca17576106687049595d84ca248346e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537a3ac6311e841c1fdb2b8b9270219bf6e7b2c91271f361c189dc90159a4bff\",\"dweb:/ipfs/QmRa5jJs3S3WjPPL4mWpXE2eGEk97gYR2S8yoDxtU8Tm68\"]},\"utils/SafeMath.sol\":{\"keccak256\":\"0x884e0eaf6a4a9779317975ad010c62f3a4bd66ed64334977bc7afba8d97fab58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61f2e9002f930fb312e3e6fe19753b1dedb5980b1baaef8914b794ba2a3106e\",\"dweb:/ipfs/QmYKxUyMMoak1sEdyQvq6hcEdsKtiAUunj1f51LBM6M8fm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 41,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "heroNFT",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IHeroNFT)30"
							},
							{
								"astId": 44,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IKIP7)983"
							},
							{
								"astId": 47,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "item",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IKIP37Full)852"
							},
							{
								"astId": 49,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "coreOwner",
								"offset": 0,
								"slot": "3",
								"type": "t_address_payable"
							},
							{
								"astId": 51,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "depositAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 53,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "miningAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 55,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 57,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "miningPaused",
								"offset": 21,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 59,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "priceOfKlay",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 61,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "priceOfToken",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IHeroNFT)30": {
								"encoding": "inplace",
								"label": "contract IHeroNFT",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP37Full)852": {
								"encoding": "inplace",
								"label": "contract IKIP37Full",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP7)983": {
								"encoding": "inplace",
								"label": "contract IKIP7",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/utils/LevelDiagram.sol": {
				"LevelDiagram": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "changeMiningPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "changePaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHeroNFT",
							"outputs": [
								{
									"internalType": "contract IHeroNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getItem",
							"outputs": [
								{
									"internalType": "contract IKIP37Full",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMiningPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getToken",
							"outputs": [
								{
									"internalType": "contract IKIP7",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_heroNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_item",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_depositAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_miningAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_klay",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfKlay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Hero/utils/LevelDiagram.sol\":88:3421  contract LevelDiagram is HeroController {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Hero/utils/HeroController.sol\":863:867  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":854:860  paused */\n  0x05\n  0x14\n    /* \"Hero/utils/HeroController.sol\":854:867  paused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":892:896  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":877:889  miningPaused */\n  0x05\n  0x15\n    /* \"Hero/utils/HeroController.sol\":877:896  miningPaused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":926:936  msg.sender */\n  caller\n    /* \"Hero/utils/HeroController.sol\":906:915  coreOwner */\n  0x03\n  0x00\n    /* \"Hero/utils/HeroController.sol\":906:937  coreOwner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/LevelDiagram.sol\":88:3421  contract LevelDiagram is HeroController {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Hero/utils/LevelDiagram.sol\":88:3421  contract LevelDiagram is HeroController {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9eb4eae5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xaa93c0ee\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb33f9527\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc412eaba\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xee72b8cc\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x1b9cbdfb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21df0da7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x28919df6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a1a8080\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6805b84b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7cac00ee\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Hero/utils/HeroController.sol\":546:573  uint256 public priceOfToken */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2055:2132  function getToken() public view returns (IKIP7) {... */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1873:1963  function getMiningPaused() public view returns (bool) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":514:540  uint256 public priceOfKlay */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1789:1867  function getPaused() public view returns (bool) {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2138:2222  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1692:1783  function getOwner() public view returns (address payable) {... */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1478:1554  function changePaused() external onlyOwner {... */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Hero/utils/LevelDiagram.sol\":452:770  function calculateTokenAmount(string memory grade, uint256 level)... */\n    tag_11:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":950:1472  function initialize(... */\n    tag_12:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"Hero/utils/HeroController.sol\":1969:2049  function getItem() public view returns (IKIP37Full) {... */\n    tag_13:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1560:1654  function changeMiningPaused() external onlyOwner {... */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"Hero/utils/HeroController.sol\":546:573  uint256 public priceOfToken */\n    tag_17:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2055:2132  function getToken() public view returns (IKIP7) {... */\n    tag_21:\n        /* \"Hero/utils/HeroController.sol\":2096:2101  IKIP7 */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2120:2125  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2113:2125  return token */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2055:2132  function getToken() public view returns (IKIP7) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1873:1963  function getMiningPaused() public view returns (bool) {... */\n    tag_25:\n        /* \"Hero/utils/HeroController.sol\":1921:1925  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1944:1956  miningPaused */\n      0x05\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1937:1956  return miningPaused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1873:1963  function getMiningPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":514:540  uint256 public priceOfKlay */\n    tag_29:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1789:1867  function getPaused() public view returns (bool) {... */\n    tag_32:\n        /* \"Hero/utils/HeroController.sol\":1831:1835  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1854:1860  paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1847:1860  return paused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1789:1867  function getPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2138:2222  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_35:\n        /* \"Hero/utils/HeroController.sol\":2181:2189  IHeroNFT */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2208:2215  heroNFT */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2201:2215  return heroNFT */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2138:2222  function getHeroNFT() public view returns (IHeroNFT) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1692:1783  function getOwner() public view returns (address payable) {... */\n    tag_39:\n        /* \"Hero/utils/HeroController.sol\":1733:1748  address payable */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1767:1776  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":1760:1776  return coreOwner */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1692:1783  function getOwner() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1478:1554  function changePaused() external onlyOwner {... */\n    tag_43:\n        /* \"Hero/utils/HeroController.sol\":766:775  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:762  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":744:806  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"Hero/utils/HeroController.sol\":1541:1547  paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1540:1547  !paused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1531:1537  paused */\n      0x05\n      0x14\n        /* \"Hero/utils/HeroController.sol\":1531:1547  paused = !paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1478:1554  function changePaused() external onlyOwner {... */\n      jump\t// out\n        /* \"Hero/utils/LevelDiagram.sol\":452:770  function calculateTokenAmount(string memory grade, uint256 level)... */\n    tag_47:\n        /* \"Hero/utils/LevelDiagram.sol\":563:570  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":586:605  uint256 gradeAmount */\n      dup1\n        /* \"Hero/utils/LevelDiagram.sol\":608:640  calculateBasicGradeAmount(grade) */\n      tag_70\n        /* \"Hero/utils/LevelDiagram.sol\":634:639  grade */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":608:633  calculateBasicGradeAmount */\n      tag_71\n        /* \"Hero/utils/LevelDiagram.sol\":608:640  calculateBasicGradeAmount(grade) */\n      jump\t// in\n    tag_70:\n        /* \"Hero/utils/LevelDiagram.sol\":586:640  uint256 gradeAmount = calculateBasicGradeAmount(grade) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":650:669  uint256 levelAmount */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":672:704  calculateBasicLevelAmount(level) */\n      tag_72\n        /* \"Hero/utils/LevelDiagram.sol\":698:703  level */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":672:697  calculateBasicLevelAmount */\n      tag_73\n        /* \"Hero/utils/LevelDiagram.sol\":672:704  calculateBasicLevelAmount(level) */\n      jump\t// in\n    tag_72:\n        /* \"Hero/utils/LevelDiagram.sol\":650:704  uint256 levelAmount = calculateBasicLevelAmount(level) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":759:763  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/LevelDiagram.sol\":753:755  10 */\n      0x0a\n        /* \"Hero/utils/LevelDiagram.sol\":738:749  levelAmount */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":724:735  gradeAmount */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":724:749  gradeAmount * levelAmount */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"Hero/utils/LevelDiagram.sol\":723:755  (gradeAmount * levelAmount) / 10 */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"Hero/utils/LevelDiagram.sol\":722:763  ((gradeAmount * levelAmount) / 10) * 1e18 */\n      tag_78\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_78:\n        /* \"Hero/utils/LevelDiagram.sol\":715:763  return ((gradeAmount * levelAmount) / 10) * 1e18 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":452:770  function calculateTokenAmount(string memory grade, uint256 level)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":950:1472  function initialize(... */\n    tag_52:\n        /* \"Hero/utils/HeroController.sol\":766:775  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:762  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":744:806  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_67\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"Hero/utils/HeroController.sol\":1209:1228  _klay.mul(DECIMALS) */\n      tag_83\n        /* \"Hero/utils/HeroController.sol\":615:619  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1209:1214  _klay */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1209:1218  _klay.mul */\n      tag_84\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1209:1228  _klay.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_83:\n        /* \"Hero/utils/HeroController.sol\":1195:1206  priceOfKlay */\n      0x06\n        /* \"Hero/utils/HeroController.sol\":1195:1228  priceOfKlay = _klay.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1253:1278  _tokenPrice.mul(DECIMALS) */\n      tag_85\n        /* \"Hero/utils/HeroController.sol\":615:619  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1253:1264  _tokenPrice */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1253:1268  _tokenPrice.mul */\n      tag_84\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1253:1278  _tokenPrice.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"Hero/utils/HeroController.sol\":1238:1250  priceOfToken */\n      0x07\n        /* \"Hero/utils/HeroController.sol\":1238:1278  priceOfToken = _tokenPrice.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1308:1316  _heroNFT */\n      dup7\n        /* \"Hero/utils/HeroController.sol\":1289:1296  heroNFT */\n      0x00\n      dup1\n        /* \"Hero/utils/HeroController.sol\":1289:1317  heroNFT = IHeroNFT(_heroNFT) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1341:1347  _token */\n      dup6\n        /* \"Hero/utils/HeroController.sol\":1327:1332  token */\n      0x01\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1327:1348  token = IKIP7(_token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1376:1381  _item */\n      dup5\n        /* \"Hero/utils/HeroController.sol\":1358:1362  item */\n      0x02\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1358:1382  item = IKIP37Full(_item) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1410:1425  _depositAddress */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1393:1407  depositAddress */\n      0x04\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1393:1425  depositAddress = _depositAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1451:1465  _miningAddress */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1435:1448  miningAddress */\n      0x05\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1435:1465  miningAddress = _miningAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":950:1472  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1969:2049  function getItem() public view returns (IKIP37Full) {... */\n    tag_54:\n        /* \"Hero/utils/HeroController.sol\":2009:2019  IKIP37Full */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2038:2042  item */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2031:2042  return item */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1969:2049  function getItem() public view returns (IKIP37Full) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1560:1654  function changeMiningPaused() external onlyOwner {... */\n    tag_58:\n        /* \"Hero/utils/HeroController.sol\":766:775  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":752:762  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":752:775  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":744:806  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_67\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Hero/utils/HeroController.sol\":1635:1647  miningPaused */\n      0x05\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1634:1647  !miningPaused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1619:1631  miningPaused */\n      0x05\n      0x15\n        /* \"Hero/utils/HeroController.sol\":1619:1647  miningPaused = !miningPaused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1560:1654  function changeMiningPaused() external onlyOwner {... */\n      jump\t// out\n        /* \"Hero/utils/LevelDiagram.sol\":1045:1549  function calculateBasicGradeAmount(string memory grade)... */\n    tag_71:\n        /* \"Hero/utils/LevelDiagram.sol\":1148:1155  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1171:1189  bytes32 gradeCheck */\n      dup1\n        /* \"Hero/utils/LevelDiagram.sol\":1208:1213  grade */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1192:1215  keccak256(bytes(grade)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Hero/utils/LevelDiagram.sol\":1171:1215  bytes32 gradeCheck = keccak256(bytes(grade)) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":171:193  keccak256(\"Mythology\") */\n      0x8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f3\n        /* \"Hero/utils/LevelDiagram.sol\":1247:1257  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1247:1270  gradeCheck == MYTHOLOGY */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1247:1532  gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY... */\n      tag_92\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":236:258  keccak256(\"Legendary\") */\n      0x181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310\n        /* \"Hero/utils/LevelDiagram.sol\":1279:1289  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1279:1302  gradeCheck == LEGENDARY */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1279:1532  gradeCheck == LEGENDARY... */\n      tag_93\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":296:313  keccak256(\"Epic\") */\n      0x6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17\n        /* \"Hero/utils/LevelDiagram.sol\":1343:1353  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1343:1361  gradeCheck == EPIC */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1343:1532  gradeCheck == EPIC... */\n      tag_94\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":360:386  keccak256(\"Administrator\") */\n      0xb2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb\n        /* \"Hero/utils/LevelDiagram.sol\":1402:1412  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1402:1429  gradeCheck == ADMINISTRATOR */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1402:1532  gradeCheck == ADMINISTRATOR... */\n      tag_95\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":426:445  keccak256(\"Normal\") */\n      0xb5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd\n        /* \"Hero/utils/LevelDiagram.sol\":1470:1480  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1470:1490  gradeCheck == NORMAL */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1470:1532  gradeCheck == NORMAL... */\n      tag_96\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1531:1532  0 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1470:1532  gradeCheck == NORMAL... */\n      jump(tag_97)\n    tag_96:\n        /* \"Hero/utils/LevelDiagram.sol\":1509:1512  200 */\n      0xc8\n        /* \"Hero/utils/LevelDiagram.sol\":1470:1532  gradeCheck == NORMAL... */\n    tag_97:\n        /* \"Hero/utils/LevelDiagram.sol\":1402:1532  gradeCheck == ADMINISTRATOR... */\n      jump(tag_98)\n    tag_95:\n        /* \"Hero/utils/LevelDiagram.sol\":1448:1451  225 */\n      0xe1\n        /* \"Hero/utils/LevelDiagram.sol\":1402:1532  gradeCheck == ADMINISTRATOR... */\n    tag_98:\n        /* \"Hero/utils/LevelDiagram.sol\":1343:1532  gradeCheck == EPIC... */\n      0xff\n      and\n      jump(tag_99)\n    tag_94:\n        /* \"Hero/utils/LevelDiagram.sol\":1380:1383  300 */\n      0x012c\n        /* \"Hero/utils/LevelDiagram.sol\":1343:1532  gradeCheck == EPIC... */\n    tag_99:\n        /* \"Hero/utils/LevelDiagram.sol\":1279:1532  gradeCheck == LEGENDARY... */\n      jump(tag_100)\n    tag_93:\n        /* \"Hero/utils/LevelDiagram.sol\":1321:1324  450 */\n      0x01c2\n        /* \"Hero/utils/LevelDiagram.sol\":1279:1532  gradeCheck == LEGENDARY... */\n    tag_100:\n        /* \"Hero/utils/LevelDiagram.sol\":1247:1532  gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY... */\n      jump(tag_101)\n    tag_92:\n        /* \"Hero/utils/LevelDiagram.sol\":1273:1276  675 */\n      0x02a3\n        /* \"Hero/utils/LevelDiagram.sol\":1247:1532  gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY... */\n    tag_101:\n        /* \"Hero/utils/LevelDiagram.sol\":1226:1542  return (... */\n      0xffff\n      and\n      swap2\n      pop\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":1045:1549  function calculateBasicGradeAmount(string memory grade)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Hero/utils/LevelDiagram.sol\":776:1039  function calculateBasicLevelAmount(uint256 level)... */\n    tag_73:\n        /* \"Hero/utils/LevelDiagram.sol\":873:880  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":926:927  1 */\n      0x01\n        /* \"Hero/utils/LevelDiagram.sol\":917:922  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":917:927  level == 1 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":917:1022  level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      tag_103\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":944:945  2 */\n      0x02\n        /* \"Hero/utils/LevelDiagram.sol\":935:940  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":935:945  level == 2 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":935:1022  level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      tag_104\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":962:963  3 */\n      0x03\n        /* \"Hero/utils/LevelDiagram.sol\":953:958  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":953:963  level == 3 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":953:1022  level == 3 ? 42 : level == 4... */\n      tag_105\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":980:981  4 */\n      0x04\n        /* \"Hero/utils/LevelDiagram.sol\":971:976  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":971:981  level == 4 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":971:1022  level == 4... */\n      tag_106\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1021:1022  0 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":971:1022  level == 4... */\n      jump(tag_107)\n    tag_106:\n        /* \"Hero/utils/LevelDiagram.sol\":1000:1002  80 */\n      0x50\n        /* \"Hero/utils/LevelDiagram.sol\":971:1022  level == 4... */\n    tag_107:\n        /* \"Hero/utils/LevelDiagram.sol\":953:1022  level == 3 ? 42 : level == 4... */\n      jump(tag_108)\n    tag_105:\n        /* \"Hero/utils/LevelDiagram.sol\":966:968  42 */\n      0x2a\n        /* \"Hero/utils/LevelDiagram.sol\":953:1022  level == 3 ? 42 : level == 4... */\n    tag_108:\n        /* \"Hero/utils/LevelDiagram.sol\":935:1022  level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      jump(tag_109)\n    tag_104:\n        /* \"Hero/utils/LevelDiagram.sol\":948:950  22 */\n      0x16\n        /* \"Hero/utils/LevelDiagram.sol\":935:1022  level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n    tag_109:\n        /* \"Hero/utils/LevelDiagram.sol\":917:1022  level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      jump(tag_110)\n    tag_103:\n        /* \"Hero/utils/LevelDiagram.sol\":930:932  15 */\n      0x0f\n        /* \"Hero/utils/LevelDiagram.sol\":917:1022  level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n    tag_110:\n        /* \"Hero/utils/LevelDiagram.sol\":896:1032  return (... */\n      0xff\n      and\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":776:1039  function calculateBasicLevelAmount(uint256 level)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_84:\n        /* \"utils/SafeMath.sol\":341:348  uint256 */\n      0x00\n        /* \"utils/SafeMath.sol\":371:372  b */\n      dup2\n        /* \"utils/SafeMath.sol\":367:368  a */\n      dup4\n        /* \"utils/SafeMath.sol\":367:372  a * b */\n      tag_112\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_112:\n        /* \"utils/SafeMath.sol\":360:372  return a * b */\n      swap1\n      pop\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:352   */\n    tag_114:\n        /* \"#utility.yul\":85:90   */\n      0x00\n        /* \"#utility.yul\":110:176   */\n      tag_116\n        /* \"#utility.yul\":126:175   */\n      tag_117\n        /* \"#utility.yul\":168:174   */\n      dup5\n        /* \"#utility.yul\":126:175   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":110:176   */\n      tag_119\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":101:176   */\n      swap1\n      pop\n        /* \"#utility.yul\":199:205   */\n      dup3\n        /* \"#utility.yul\":192:197   */\n      dup2\n        /* \"#utility.yul\":185:206   */\n      mstore\n        /* \"#utility.yul\":237:241   */\n      0x20\n        /* \"#utility.yul\":230:235   */\n      dup2\n        /* \"#utility.yul\":226:242   */\n      add\n        /* \"#utility.yul\":275:278   */\n      dup5\n        /* \"#utility.yul\":266:272   */\n      dup5\n        /* \"#utility.yul\":261:264   */\n      dup5\n        /* \"#utility.yul\":257:273   */\n      add\n        /* \"#utility.yul\":254:279   */\n      gt\n        /* \"#utility.yul\":251:253   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":292:293   */\n      0x00\n        /* \"#utility.yul\":289:290   */\n      dup1\n        /* \"#utility.yul\":282:294   */\n      revert\n        /* \"#utility.yul\":251:253   */\n    tag_120:\n        /* \"#utility.yul\":305:346   */\n      tag_121\n        /* \"#utility.yul\":339:345   */\n      dup5\n        /* \"#utility.yul\":334:337   */\n      dup3\n        /* \"#utility.yul\":329:332   */\n      dup6\n        /* \"#utility.yul\":305:346   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":91:352   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":358:497   */\n    tag_123:\n        /* \"#utility.yul\":404:409   */\n      0x00\n        /* \"#utility.yul\":442:448   */\n      dup2\n        /* \"#utility.yul\":429:449   */\n      calldataload\n        /* \"#utility.yul\":420:449   */\n      swap1\n      pop\n        /* \"#utility.yul\":458:491   */\n      tag_125\n        /* \"#utility.yul\":485:490   */\n      dup2\n        /* \"#utility.yul\":458:491   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":410:497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":517:790   */\n    tag_127:\n        /* \"#utility.yul\":573:578   */\n      0x00\n        /* \"#utility.yul\":622:625   */\n      dup3\n        /* \"#utility.yul\":615:619   */\n      0x1f\n        /* \"#utility.yul\":607:613   */\n      dup4\n        /* \"#utility.yul\":603:620   */\n      add\n        /* \"#utility.yul\":599:626   */\n      slt\n        /* \"#utility.yul\":589:591   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":640:641   */\n      0x00\n        /* \"#utility.yul\":637:638   */\n      dup1\n        /* \"#utility.yul\":630:642   */\n      revert\n        /* \"#utility.yul\":589:591   */\n    tag_129:\n        /* \"#utility.yul\":680:686   */\n      dup2\n        /* \"#utility.yul\":667:687   */\n      calldataload\n        /* \"#utility.yul\":705:784   */\n      tag_130\n        /* \"#utility.yul\":780:783   */\n      dup5\n        /* \"#utility.yul\":772:778   */\n      dup3\n        /* \"#utility.yul\":765:769   */\n      0x20\n        /* \"#utility.yul\":757:763   */\n      dup7\n        /* \"#utility.yul\":753:770   */\n      add\n        /* \"#utility.yul\":705:784   */\n      tag_114\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":696:784   */\n      swap2\n      pop\n        /* \"#utility.yul\":579:790   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:935   */\n    tag_131:\n        /* \"#utility.yul\":842:847   */\n      0x00\n        /* \"#utility.yul\":880:886   */\n      dup2\n        /* \"#utility.yul\":867:887   */\n      calldataload\n        /* \"#utility.yul\":858:887   */\n      swap1\n      pop\n        /* \"#utility.yul\":896:929   */\n      tag_133\n        /* \"#utility.yul\":923:928   */\n      dup2\n        /* \"#utility.yul\":896:929   */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":848:935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":941:2077   */\n    tag_51:\n        /* \"#utility.yul\":1054:1060   */\n      0x00\n        /* \"#utility.yul\":1062:1068   */\n      dup1\n        /* \"#utility.yul\":1070:1076   */\n      0x00\n        /* \"#utility.yul\":1078:1084   */\n      dup1\n        /* \"#utility.yul\":1086:1092   */\n      0x00\n        /* \"#utility.yul\":1094:1100   */\n      dup1\n        /* \"#utility.yul\":1102:1108   */\n      0x00\n        /* \"#utility.yul\":1151:1154   */\n      0xe0\n        /* \"#utility.yul\":1139:1148   */\n      dup9\n        /* \"#utility.yul\":1130:1137   */\n      dup11\n        /* \"#utility.yul\":1126:1149   */\n      sub\n        /* \"#utility.yul\":1122:1155   */\n      slt\n        /* \"#utility.yul\":1119:1121   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1168:1169   */\n      0x00\n        /* \"#utility.yul\":1165:1166   */\n      dup1\n        /* \"#utility.yul\":1158:1170   */\n      revert\n        /* \"#utility.yul\":1119:1121   */\n    tag_136:\n        /* \"#utility.yul\":1211:1212   */\n      0x00\n        /* \"#utility.yul\":1236:1289   */\n      tag_137\n        /* \"#utility.yul\":1281:1288   */\n      dup11\n        /* \"#utility.yul\":1272:1278   */\n      dup3\n        /* \"#utility.yul\":1261:1270   */\n      dup12\n        /* \"#utility.yul\":1257:1279   */\n      add\n        /* \"#utility.yul\":1236:1289   */\n      tag_123\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1226:1289   */\n      swap8\n      pop\n        /* \"#utility.yul\":1182:1299   */\n      pop\n        /* \"#utility.yul\":1338:1340   */\n      0x20\n        /* \"#utility.yul\":1364:1417   */\n      tag_138\n        /* \"#utility.yul\":1409:1416   */\n      dup11\n        /* \"#utility.yul\":1400:1406   */\n      dup3\n        /* \"#utility.yul\":1389:1398   */\n      dup12\n        /* \"#utility.yul\":1385:1407   */\n      add\n        /* \"#utility.yul\":1364:1417   */\n      tag_123\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1354:1417   */\n      swap7\n      pop\n        /* \"#utility.yul\":1309:1427   */\n      pop\n        /* \"#utility.yul\":1466:1468   */\n      0x40\n        /* \"#utility.yul\":1492:1545   */\n      tag_139\n        /* \"#utility.yul\":1537:1544   */\n      dup11\n        /* \"#utility.yul\":1528:1534   */\n      dup3\n        /* \"#utility.yul\":1517:1526   */\n      dup12\n        /* \"#utility.yul\":1513:1535   */\n      add\n        /* \"#utility.yul\":1492:1545   */\n      tag_123\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1482:1545   */\n      swap6\n      pop\n        /* \"#utility.yul\":1437:1555   */\n      pop\n        /* \"#utility.yul\":1594:1596   */\n      0x60\n        /* \"#utility.yul\":1620:1673   */\n      tag_140\n        /* \"#utility.yul\":1665:1672   */\n      dup11\n        /* \"#utility.yul\":1656:1662   */\n      dup3\n        /* \"#utility.yul\":1645:1654   */\n      dup12\n        /* \"#utility.yul\":1641:1663   */\n      add\n        /* \"#utility.yul\":1620:1673   */\n      tag_123\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1610:1673   */\n      swap5\n      pop\n        /* \"#utility.yul\":1565:1683   */\n      pop\n        /* \"#utility.yul\":1722:1725   */\n      0x80\n        /* \"#utility.yul\":1749:1802   */\n      tag_141\n        /* \"#utility.yul\":1794:1801   */\n      dup11\n        /* \"#utility.yul\":1785:1791   */\n      dup3\n        /* \"#utility.yul\":1774:1783   */\n      dup12\n        /* \"#utility.yul\":1770:1792   */\n      add\n        /* \"#utility.yul\":1749:1802   */\n      tag_123\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1739:1802   */\n      swap4\n      pop\n        /* \"#utility.yul\":1693:1812   */\n      pop\n        /* \"#utility.yul\":1851:1854   */\n      0xa0\n        /* \"#utility.yul\":1878:1931   */\n      tag_142\n        /* \"#utility.yul\":1923:1930   */\n      dup11\n        /* \"#utility.yul\":1914:1920   */\n      dup3\n        /* \"#utility.yul\":1903:1912   */\n      dup12\n        /* \"#utility.yul\":1899:1921   */\n      add\n        /* \"#utility.yul\":1878:1931   */\n      tag_131\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1868:1931   */\n      swap3\n      pop\n        /* \"#utility.yul\":1822:1941   */\n      pop\n        /* \"#utility.yul\":1980:1983   */\n      0xc0\n        /* \"#utility.yul\":2007:2060   */\n      tag_143\n        /* \"#utility.yul\":2052:2059   */\n      dup11\n        /* \"#utility.yul\":2043:2049   */\n      dup3\n        /* \"#utility.yul\":2032:2041   */\n      dup12\n        /* \"#utility.yul\":2028:2050   */\n      add\n        /* \"#utility.yul\":2007:2060   */\n      tag_131\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1997:2060   */\n      swap2\n      pop\n        /* \"#utility.yul\":1951:2070   */\n      pop\n        /* \"#utility.yul\":1109:2077   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2083:2603   */\n    tag_46:\n        /* \"#utility.yul\":2161:2167   */\n      0x00\n        /* \"#utility.yul\":2169:2175   */\n      dup1\n        /* \"#utility.yul\":2218:2220   */\n      0x40\n        /* \"#utility.yul\":2206:2215   */\n      dup4\n        /* \"#utility.yul\":2197:2204   */\n      dup6\n        /* \"#utility.yul\":2193:2216   */\n      sub\n        /* \"#utility.yul\":2189:2221   */\n      slt\n        /* \"#utility.yul\":2186:2188   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":2234:2235   */\n      0x00\n        /* \"#utility.yul\":2231:2232   */\n      dup1\n        /* \"#utility.yul\":2224:2236   */\n      revert\n        /* \"#utility.yul\":2186:2188   */\n    tag_145:\n        /* \"#utility.yul\":2305:2306   */\n      0x00\n        /* \"#utility.yul\":2294:2303   */\n      dup4\n        /* \"#utility.yul\":2290:2307   */\n      add\n        /* \"#utility.yul\":2277:2308   */\n      calldataload\n        /* \"#utility.yul\":2335:2353   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2327:2333   */\n      dup2\n        /* \"#utility.yul\":2324:2354   */\n      gt\n        /* \"#utility.yul\":2321:2323   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":2367:2368   */\n      0x00\n        /* \"#utility.yul\":2364:2365   */\n      dup1\n        /* \"#utility.yul\":2357:2369   */\n      revert\n        /* \"#utility.yul\":2321:2323   */\n    tag_146:\n        /* \"#utility.yul\":2395:2458   */\n      tag_147\n        /* \"#utility.yul\":2450:2457   */\n      dup6\n        /* \"#utility.yul\":2441:2447   */\n      dup3\n        /* \"#utility.yul\":2430:2439   */\n      dup7\n        /* \"#utility.yul\":2426:2448   */\n      add\n        /* \"#utility.yul\":2395:2458   */\n      tag_127\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2385:2458   */\n      swap3\n      pop\n        /* \"#utility.yul\":2248:2468   */\n      pop\n        /* \"#utility.yul\":2507:2509   */\n      0x20\n        /* \"#utility.yul\":2533:2586   */\n      tag_148\n        /* \"#utility.yul\":2578:2585   */\n      dup6\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2558:2567   */\n      dup7\n        /* \"#utility.yul\":2554:2576   */\n      add\n        /* \"#utility.yul\":2533:2586   */\n      tag_131\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2523:2586   */\n      swap2\n      pop\n        /* \"#utility.yul\":2478:2596   */\n      pop\n        /* \"#utility.yul\":2176:2603   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2609:2751   */\n    tag_149:\n        /* \"#utility.yul\":2712:2744   */\n      tag_151\n        /* \"#utility.yul\":2738:2743   */\n      dup2\n        /* \"#utility.yul\":2712:2744   */\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2707:2710   */\n      dup3\n        /* \"#utility.yul\":2700:2745   */\n      mstore\n        /* \"#utility.yul\":2690:2751   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:2866   */\n    tag_153:\n        /* \"#utility.yul\":2838:2859   */\n      tag_155\n        /* \"#utility.yul\":2853:2858   */\n      dup2\n        /* \"#utility.yul\":2838:2859   */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2833:2836   */\n      dup3\n        /* \"#utility.yul\":2826:2860   */\n      mstore\n        /* \"#utility.yul\":2816:2866   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2872:3033   */\n    tag_157:\n        /* \"#utility.yul\":2974:3026   */\n      tag_159\n        /* \"#utility.yul\":3020:3025   */\n      dup2\n        /* \"#utility.yul\":2974:3026   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2969:2972   */\n      dup3\n        /* \"#utility.yul\":2962:3027   */\n      mstore\n        /* \"#utility.yul\":2952:3033   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3039:3206   */\n    tag_161:\n        /* \"#utility.yul\":3144:3199   */\n      tag_163\n        /* \"#utility.yul\":3193:3198   */\n      dup2\n        /* \"#utility.yul\":3144:3199   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3139:3142   */\n      dup3\n        /* \"#utility.yul\":3132:3200   */\n      mstore\n        /* \"#utility.yul\":3122:3206   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3212:3369   */\n    tag_165:\n        /* \"#utility.yul\":3312:3362   */\n      tag_167\n        /* \"#utility.yul\":3356:3361   */\n      dup2\n        /* \"#utility.yul\":3312:3362   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3307:3310   */\n      dup3\n        /* \"#utility.yul\":3300:3363   */\n      mstore\n        /* \"#utility.yul\":3290:3369   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3375:3741   */\n    tag_169:\n        /* \"#utility.yul\":3517:3520   */\n      0x00\n        /* \"#utility.yul\":3538:3605   */\n      tag_171\n        /* \"#utility.yul\":3602:3604   */\n      0x1a\n        /* \"#utility.yul\":3597:3600   */\n      dup4\n        /* \"#utility.yul\":3538:3605   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3531:3605   */\n      swap2\n      pop\n        /* \"#utility.yul\":3614:3707   */\n      tag_173\n        /* \"#utility.yul\":3703:3706   */\n      dup3\n        /* \"#utility.yul\":3614:3707   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3732:3734   */\n      0x20\n        /* \"#utility.yul\":3727:3730   */\n      dup3\n        /* \"#utility.yul\":3723:3735   */\n      add\n        /* \"#utility.yul\":3716:3735   */\n      swap1\n      pop\n        /* \"#utility.yul\":3521:3741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3747:3865   */\n    tag_175:\n        /* \"#utility.yul\":3834:3858   */\n      tag_177\n        /* \"#utility.yul\":3852:3857   */\n      dup2\n        /* \"#utility.yul\":3834:3858   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3829:3832   */\n      dup3\n        /* \"#utility.yul\":3822:3859   */\n      mstore\n        /* \"#utility.yul\":3812:3865   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3871:4125   */\n    tag_41:\n        /* \"#utility.yul\":3980:3984   */\n      0x00\n        /* \"#utility.yul\":4018:4020   */\n      0x20\n        /* \"#utility.yul\":4007:4016   */\n      dup3\n        /* \"#utility.yul\":4003:4021   */\n      add\n        /* \"#utility.yul\":3995:4021   */\n      swap1\n      pop\n        /* \"#utility.yul\":4031:4118   */\n      tag_180\n        /* \"#utility.yul\":4115:4116   */\n      0x00\n        /* \"#utility.yul\":4104:4113   */\n      dup4\n        /* \"#utility.yul\":4100:4117   */\n      add\n        /* \"#utility.yul\":4091:4097   */\n      dup5\n        /* \"#utility.yul\":4031:4118   */\n      tag_149\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3985:4125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4131:4341   */\n    tag_27:\n        /* \"#utility.yul\":4218:4222   */\n      0x00\n        /* \"#utility.yul\":4256:4258   */\n      0x20\n        /* \"#utility.yul\":4245:4254   */\n      dup3\n        /* \"#utility.yul\":4241:4259   */\n      add\n        /* \"#utility.yul\":4233:4259   */\n      swap1\n      pop\n        /* \"#utility.yul\":4269:4334   */\n      tag_182\n        /* \"#utility.yul\":4331:4332   */\n      0x00\n        /* \"#utility.yul\":4320:4329   */\n      dup4\n        /* \"#utility.yul\":4316:4333   */\n      add\n        /* \"#utility.yul\":4307:4313   */\n      dup5\n        /* \"#utility.yul\":4269:4334   */\n      tag_153\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4223:4341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4347:4599   */\n    tag_37:\n        /* \"#utility.yul\":4455:4459   */\n      0x00\n        /* \"#utility.yul\":4493:4495   */\n      0x20\n        /* \"#utility.yul\":4482:4491   */\n      dup3\n        /* \"#utility.yul\":4478:4496   */\n      add\n        /* \"#utility.yul\":4470:4496   */\n      swap1\n      pop\n        /* \"#utility.yul\":4506:4592   */\n      tag_184\n        /* \"#utility.yul\":4589:4590   */\n      0x00\n        /* \"#utility.yul\":4578:4587   */\n      dup4\n        /* \"#utility.yul\":4574:4591   */\n      add\n        /* \"#utility.yul\":4565:4571   */\n      dup5\n        /* \"#utility.yul\":4506:4592   */\n      tag_157\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4460:4599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4605:4863   */\n    tag_56:\n        /* \"#utility.yul\":4716:4720   */\n      0x00\n        /* \"#utility.yul\":4754:4756   */\n      0x20\n        /* \"#utility.yul\":4743:4752   */\n      dup3\n        /* \"#utility.yul\":4739:4757   */\n      add\n        /* \"#utility.yul\":4731:4757   */\n      swap1\n      pop\n        /* \"#utility.yul\":4767:4856   */\n      tag_186\n        /* \"#utility.yul\":4853:4854   */\n      0x00\n        /* \"#utility.yul\":4842:4851   */\n      dup4\n        /* \"#utility.yul\":4838:4855   */\n      add\n        /* \"#utility.yul\":4829:4835   */\n      dup5\n        /* \"#utility.yul\":4767:4856   */\n      tag_161\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4721:4863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4869:5117   */\n    tag_23:\n        /* \"#utility.yul\":4975:4979   */\n      0x00\n        /* \"#utility.yul\":5013:5015   */\n      0x20\n        /* \"#utility.yul\":5002:5011   */\n      dup3\n        /* \"#utility.yul\":4998:5016   */\n      add\n        /* \"#utility.yul\":4990:5016   */\n      swap1\n      pop\n        /* \"#utility.yul\":5026:5110   */\n      tag_188\n        /* \"#utility.yul\":5107:5108   */\n      0x00\n        /* \"#utility.yul\":5096:5105   */\n      dup4\n        /* \"#utility.yul\":5092:5109   */\n      add\n        /* \"#utility.yul\":5083:5089   */\n      dup5\n        /* \"#utility.yul\":5026:5110   */\n      tag_165\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4980:5117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5123:5542   */\n    tag_67:\n        /* \"#utility.yul\":5289:5293   */\n      0x00\n        /* \"#utility.yul\":5327:5329   */\n      0x20\n        /* \"#utility.yul\":5316:5325   */\n      dup3\n        /* \"#utility.yul\":5312:5330   */\n      add\n        /* \"#utility.yul\":5304:5330   */\n      swap1\n      pop\n        /* \"#utility.yul\":5376:5385   */\n      dup2\n        /* \"#utility.yul\":5370:5374   */\n      dup2\n        /* \"#utility.yul\":5366:5386   */\n      sub\n        /* \"#utility.yul\":5362:5363   */\n      0x00\n        /* \"#utility.yul\":5351:5360   */\n      dup4\n        /* \"#utility.yul\":5347:5364   */\n      add\n        /* \"#utility.yul\":5340:5387   */\n      mstore\n        /* \"#utility.yul\":5404:5535   */\n      tag_190\n        /* \"#utility.yul\":5530:5534   */\n      dup2\n        /* \"#utility.yul\":5404:5535   */\n      tag_169\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5396:5535   */\n      swap1\n      pop\n        /* \"#utility.yul\":5294:5542   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5770   */\n    tag_19:\n        /* \"#utility.yul\":5641:5645   */\n      0x00\n        /* \"#utility.yul\":5679:5681   */\n      0x20\n        /* \"#utility.yul\":5668:5677   */\n      dup3\n        /* \"#utility.yul\":5664:5682   */\n      add\n        /* \"#utility.yul\":5656:5682   */\n      swap1\n      pop\n        /* \"#utility.yul\":5692:5763   */\n      tag_192\n        /* \"#utility.yul\":5760:5761   */\n      0x00\n        /* \"#utility.yul\":5749:5758   */\n      dup4\n        /* \"#utility.yul\":5745:5762   */\n      add\n        /* \"#utility.yul\":5736:5742   */\n      dup5\n        /* \"#utility.yul\":5692:5763   */\n      tag_175\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":5646:5770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5776:5905   */\n    tag_119:\n        /* \"#utility.yul\":5810:5816   */\n      0x00\n        /* \"#utility.yul\":5837:5857   */\n      tag_194\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5827:5857   */\n      swap1\n      pop\n        /* \"#utility.yul\":5866:5899   */\n      tag_196\n        /* \"#utility.yul\":5894:5898   */\n      dup3\n        /* \"#utility.yul\":5886:5892   */\n      dup3\n        /* \"#utility.yul\":5866:5899   */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5817:5905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5911:5986   */\n    tag_195:\n        /* \"#utility.yul\":5944:5950   */\n      0x00\n        /* \"#utility.yul\":5977:5979   */\n      0x40\n        /* \"#utility.yul\":5971:5980   */\n      mload\n        /* \"#utility.yul\":5961:5980   */\n      swap1\n      pop\n        /* \"#utility.yul\":5951:5986   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5992:6300   */\n    tag_118:\n        /* \"#utility.yul\":6054:6058   */\n      0x00\n        /* \"#utility.yul\":6144:6162   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6136:6142   */\n      dup3\n        /* \"#utility.yul\":6133:6163   */\n      gt\n        /* \"#utility.yul\":6130:6132   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":6166:6184   */\n      tag_201\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":6130:6132   */\n    tag_200:\n        /* \"#utility.yul\":6204:6233   */\n      tag_203\n        /* \"#utility.yul\":6226:6232   */\n      dup3\n        /* \"#utility.yul\":6204:6233   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6196:6233   */\n      swap1\n      pop\n        /* \"#utility.yul\":6288:6292   */\n      0x20\n        /* \"#utility.yul\":6282:6286   */\n      dup2\n        /* \"#utility.yul\":6278:6293   */\n      add\n        /* \"#utility.yul\":6270:6293   */\n      swap1\n      pop\n        /* \"#utility.yul\":6059:6300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6306:6475   */\n    tag_172:\n        /* \"#utility.yul\":6390:6401   */\n      0x00\n        /* \"#utility.yul\":6424:6430   */\n      dup3\n        /* \"#utility.yul\":6419:6422   */\n      dup3\n        /* \"#utility.yul\":6412:6431   */\n      mstore\n        /* \"#utility.yul\":6464:6468   */\n      0x20\n        /* \"#utility.yul\":6459:6462   */\n      dup3\n        /* \"#utility.yul\":6455:6469   */\n      add\n        /* \"#utility.yul\":6440:6469   */\n      swap1\n      pop\n        /* \"#utility.yul\":6402:6475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6481:6666   */\n    tag_77:\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6538:6558   */\n      tag_207\n        /* \"#utility.yul\":6556:6557   */\n      dup3\n        /* \"#utility.yul\":6538:6558   */\n      tag_178\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":6533:6558   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6592   */\n      tag_208\n        /* \"#utility.yul\":6590:6591   */\n      dup4\n        /* \"#utility.yul\":6572:6592   */\n      tag_178\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6567:6592   */\n      swap3\n      pop\n        /* \"#utility.yul\":6611:6612   */\n      dup3\n        /* \"#utility.yul\":6601:6603   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6616:6634   */\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6601:6603   */\n    tag_209:\n        /* \"#utility.yul\":6658:6659   */\n      dup3\n        /* \"#utility.yul\":6655:6656   */\n      dup3\n        /* \"#utility.yul\":6651:6660   */\n      div\n        /* \"#utility.yul\":6646:6660   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6672:7020   */\n    tag_75:\n        /* \"#utility.yul\":6712:6719   */\n      0x00\n        /* \"#utility.yul\":6735:6755   */\n      tag_213\n        /* \"#utility.yul\":6753:6754   */\n      dup3\n        /* \"#utility.yul\":6735:6755   */\n      tag_178\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6730:6755   */\n      swap2\n      pop\n        /* \"#utility.yul\":6769:6789   */\n      tag_214\n        /* \"#utility.yul\":6787:6788   */\n      dup4\n        /* \"#utility.yul\":6769:6789   */\n      tag_178\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6764:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6957:6958   */\n      dup2\n        /* \"#utility.yul\":6889:6955   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6885:6959   */\n      div\n        /* \"#utility.yul\":6882:6883   */\n      dup4\n        /* \"#utility.yul\":6879:6960   */\n      gt\n        /* \"#utility.yul\":6874:6875   */\n      dup3\n        /* \"#utility.yul\":6867:6876   */\n      iszero\n        /* \"#utility.yul\":6860:6877   */\n      iszero\n        /* \"#utility.yul\":6856:6961   */\n      and\n        /* \"#utility.yul\":6853:6855   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":6964:6982   */\n      tag_216\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6853:6855   */\n    tag_215:\n        /* \"#utility.yul\":7012:7013   */\n      dup3\n        /* \"#utility.yul\":7009:7010   */\n      dup3\n        /* \"#utility.yul\":7005:7014   */\n      mul\n        /* \"#utility.yul\":6994:7014   */\n      swap1\n      pop\n        /* \"#utility.yul\":6720:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7122   */\n    tag_218:\n        /* \"#utility.yul\":7063:7070   */\n      0x00\n        /* \"#utility.yul\":7092:7116   */\n      tag_220\n        /* \"#utility.yul\":7110:7115   */\n      dup3\n        /* \"#utility.yul\":7092:7116   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7081:7116   */\n      swap1\n      pop\n        /* \"#utility.yul\":7071:7122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7128:7232   */\n    tag_152:\n        /* \"#utility.yul\":7173:7180   */\n      0x00\n        /* \"#utility.yul\":7202:7226   */\n      tag_223\n        /* \"#utility.yul\":7220:7225   */\n      dup3\n        /* \"#utility.yul\":7202:7226   */\n      tag_221\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7191:7226   */\n      swap1\n      pop\n        /* \"#utility.yul\":7181:7232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7238:7328   */\n    tag_156:\n        /* \"#utility.yul\":7272:7279   */\n      0x00\n        /* \"#utility.yul\":7315:7320   */\n      dup2\n        /* \"#utility.yul\":7308:7321   */\n      iszero\n        /* \"#utility.yul\":7301:7322   */\n      iszero\n        /* \"#utility.yul\":7290:7322   */\n      swap1\n      pop\n        /* \"#utility.yul\":7280:7328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7334:7460   */\n    tag_221:\n        /* \"#utility.yul\":7371:7378   */\n      0x00\n        /* \"#utility.yul\":7411:7453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7404:7409   */\n      dup3\n        /* \"#utility.yul\":7400:7454   */\n      and\n        /* \"#utility.yul\":7389:7454   */\n      swap1\n      pop\n        /* \"#utility.yul\":7379:7460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7466:7543   */\n    tag_178:\n        /* \"#utility.yul\":7503:7510   */\n      0x00\n        /* \"#utility.yul\":7532:7537   */\n      dup2\n        /* \"#utility.yul\":7521:7537   */\n      swap1\n      pop\n        /* \"#utility.yul\":7511:7543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7705   */\n    tag_160:\n        /* \"#utility.yul\":7614:7623   */\n      0x00\n        /* \"#utility.yul\":7647:7699   */\n      tag_228\n        /* \"#utility.yul\":7693:7698   */\n      dup3\n        /* \"#utility.yul\":7647:7699   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7634:7699   */\n      swap1\n      pop\n        /* \"#utility.yul\":7624:7705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7711:7839   */\n    tag_229:\n        /* \"#utility.yul\":7776:7785   */\n      0x00\n        /* \"#utility.yul\":7809:7833   */\n      tag_231\n        /* \"#utility.yul\":7827:7832   */\n      dup3\n        /* \"#utility.yul\":7809:7833   */\n      tag_221\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7796:7833   */\n      swap1\n      pop\n        /* \"#utility.yul\":7786:7839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7845:8007   */\n    tag_164:\n        /* \"#utility.yul\":7913:7922   */\n      0x00\n        /* \"#utility.yul\":7946:8001   */\n      tag_233\n        /* \"#utility.yul\":7995:8000   */\n      dup3\n        /* \"#utility.yul\":7946:8001   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7933:8001   */\n      swap1\n      pop\n        /* \"#utility.yul\":7923:8007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8013:8144   */\n    tag_234:\n        /* \"#utility.yul\":8081:8090   */\n      0x00\n        /* \"#utility.yul\":8114:8138   */\n      tag_236\n        /* \"#utility.yul\":8132:8137   */\n      dup3\n        /* \"#utility.yul\":8114:8138   */\n      tag_221\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":8101:8138   */\n      swap1\n      pop\n        /* \"#utility.yul\":8091:8144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8150:8302   */\n    tag_168:\n        /* \"#utility.yul\":8213:8222   */\n      0x00\n        /* \"#utility.yul\":8246:8296   */\n      tag_238\n        /* \"#utility.yul\":8290:8295   */\n      dup3\n        /* \"#utility.yul\":8246:8296   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8233:8296   */\n      swap1\n      pop\n        /* \"#utility.yul\":8223:8302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8308:8434   */\n    tag_239:\n        /* \"#utility.yul\":8371:8380   */\n      0x00\n        /* \"#utility.yul\":8404:8428   */\n      tag_241\n        /* \"#utility.yul\":8422:8427   */\n      dup3\n        /* \"#utility.yul\":8404:8428   */\n      tag_221\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8391:8428   */\n      swap1\n      pop\n        /* \"#utility.yul\":8381:8434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8440:8594   */\n    tag_122:\n        /* \"#utility.yul\":8524:8530   */\n      dup3\n        /* \"#utility.yul\":8519:8522   */\n      dup2\n        /* \"#utility.yul\":8514:8517   */\n      dup4\n        /* \"#utility.yul\":8501:8531   */\n      calldatacopy\n        /* \"#utility.yul\":8586:8587   */\n      0x00\n        /* \"#utility.yul\":8577:8583   */\n      dup4\n        /* \"#utility.yul\":8572:8575   */\n      dup4\n        /* \"#utility.yul\":8568:8584   */\n      add\n        /* \"#utility.yul\":8561:8588   */\n      mstore\n        /* \"#utility.yul\":8491:8594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8600:8881   */\n    tag_197:\n        /* \"#utility.yul\":8683:8710   */\n      tag_244\n        /* \"#utility.yul\":8705:8709   */\n      dup3\n        /* \"#utility.yul\":8683:8710   */\n      tag_204\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8675:8681   */\n      dup2\n        /* \"#utility.yul\":8671:8711   */\n      add\n        /* \"#utility.yul\":8813:8819   */\n      dup2\n        /* \"#utility.yul\":8801:8811   */\n      dup2\n        /* \"#utility.yul\":8798:8820   */\n      lt\n        /* \"#utility.yul\":8777:8795   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8765:8775   */\n      dup3\n        /* \"#utility.yul\":8762:8796   */\n      gt\n        /* \"#utility.yul\":8759:8821   */\n      or\n        /* \"#utility.yul\":8756:8758   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":8824:8842   */\n      tag_246\n      tag_202\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":8756:8758   */\n    tag_245:\n        /* \"#utility.yul\":8864:8874   */\n      dup1\n        /* \"#utility.yul\":8860:8862   */\n      0x40\n        /* \"#utility.yul\":8853:8875   */\n      mstore\n        /* \"#utility.yul\":8643:8881   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8887:9067   */\n    tag_217:\n        /* \"#utility.yul\":8935:9012   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8932:8933   */\n      0x00\n        /* \"#utility.yul\":8925:9013   */\n      mstore\n        /* \"#utility.yul\":9032:9036   */\n      0x11\n        /* \"#utility.yul\":9029:9030   */\n      0x04\n        /* \"#utility.yul\":9022:9037   */\n      mstore\n        /* \"#utility.yul\":9056:9060   */\n      0x24\n        /* \"#utility.yul\":9053:9054   */\n      0x00\n        /* \"#utility.yul\":9046:9061   */\n      revert\n        /* \"#utility.yul\":9073:9253   */\n    tag_211:\n        /* \"#utility.yul\":9121:9198   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9118:9119   */\n      0x00\n        /* \"#utility.yul\":9111:9199   */\n      mstore\n        /* \"#utility.yul\":9218:9222   */\n      0x12\n        /* \"#utility.yul\":9215:9216   */\n      0x04\n        /* \"#utility.yul\":9208:9223   */\n      mstore\n        /* \"#utility.yul\":9242:9246   */\n      0x24\n        /* \"#utility.yul\":9239:9240   */\n      0x00\n        /* \"#utility.yul\":9232:9247   */\n      revert\n        /* \"#utility.yul\":9259:9439   */\n    tag_202:\n        /* \"#utility.yul\":9307:9384   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9304:9305   */\n      0x00\n        /* \"#utility.yul\":9297:9385   */\n      mstore\n        /* \"#utility.yul\":9404:9408   */\n      0x41\n        /* \"#utility.yul\":9401:9402   */\n      0x04\n        /* \"#utility.yul\":9394:9409   */\n      mstore\n        /* \"#utility.yul\":9428:9432   */\n      0x24\n        /* \"#utility.yul\":9425:9426   */\n      0x00\n        /* \"#utility.yul\":9418:9433   */\n      revert\n        /* \"#utility.yul\":9445:9547   */\n    tag_204:\n        /* \"#utility.yul\":9486:9492   */\n      0x00\n        /* \"#utility.yul\":9537:9539   */\n      0x1f\n        /* \"#utility.yul\":9533:9540   */\n      not\n        /* \"#utility.yul\":9528:9530   */\n      0x1f\n        /* \"#utility.yul\":9521:9526   */\n      dup4\n        /* \"#utility.yul\":9517:9531   */\n      add\n        /* \"#utility.yul\":9513:9541   */\n      and\n        /* \"#utility.yul\":9503:9541   */\n      swap1\n      pop\n        /* \"#utility.yul\":9493:9547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9553:9729   */\n    tag_174:\n        /* \"#utility.yul\":9693:9721   */\n      0x4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000\n        /* \"#utility.yul\":9689:9690   */\n      0x00\n        /* \"#utility.yul\":9681:9687   */\n      dup3\n        /* \"#utility.yul\":9677:9691   */\n      add\n        /* \"#utility.yul\":9670:9722   */\n      mstore\n        /* \"#utility.yul\":9659:9729   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9735:9857   */\n    tag_126:\n        /* \"#utility.yul\":9808:9832   */\n      tag_253\n        /* \"#utility.yul\":9826:9831   */\n      dup2\n        /* \"#utility.yul\":9808:9832   */\n      tag_218\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9801:9806   */\n      dup2\n        /* \"#utility.yul\":9798:9833   */\n      eq\n        /* \"#utility.yul\":9788:9790   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":9847:9848   */\n      0x00\n        /* \"#utility.yul\":9844:9845   */\n      dup1\n        /* \"#utility.yul\":9837:9849   */\n      revert\n        /* \"#utility.yul\":9788:9790   */\n    tag_254:\n        /* \"#utility.yul\":9778:9857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9863:9985   */\n    tag_134:\n        /* \"#utility.yul\":9936:9960   */\n      tag_256\n        /* \"#utility.yul\":9954:9959   */\n      dup2\n        /* \"#utility.yul\":9936:9960   */\n      tag_178\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9929:9934   */\n      dup2\n        /* \"#utility.yul\":9926:9961   */\n      eq\n        /* \"#utility.yul\":9916:9918   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":9975:9976   */\n      0x00\n        /* \"#utility.yul\":9972:9973   */\n      dup1\n        /* \"#utility.yul\":9965:9977   */\n      revert\n        /* \"#utility.yul\":9916:9918   */\n    tag_257:\n        /* \"#utility.yul\":9906:9985   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a25005444332efcc6533a7c99f90d67216fd290dd3d6f98376626d091f3ce05e64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001600560146101000a81548160ff0219169083151502179055506001600560156101000a81548160ff02191690831515021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e27806100976000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063893d20e811610071578063893d20e81461016d5780639eb4eae51461018b578063aa93c0ee14610195578063b33f9527146101c5578063c412eaba146101e1578063ee72b8cc146101ff576100b4565b80631b9cbdfb146100b957806321df0da7146100d757806328919df6146100f55780633a1a8080146101135780636805b84b146101315780637cac00ee1461014f575b600080fd5b6100c1610209565b6040516100ce9190610ae9565b60405180910390f35b6100df61020f565b6040516100ec9190610aae565b60405180910390f35b6100fd610239565b60405161010a9190610a5d565b60405180910390f35b61011b610250565b6040516101289190610ae9565b60405180910390f35b610139610256565b6040516101469190610a5d565b60405180910390f35b61015761026d565b6040516101649190610a78565b60405180910390f35b610175610296565b6040516101829190610a42565b60405180910390f35b6101936102c0565b005b6101af60048036038101906101aa9190610971565b61037c565b6040516101bc9190610ae9565b60405180910390f35b6101df60048036038101906101da91906108d3565b6103cc565b005b6101e96105eb565b6040516101f69190610a93565b60405180910390f35b610207610615565b005b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560159054906101000a900460ff16905090565b60065481565b6000600560149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790610ac9565b60405180910390fd5b600560149054906101000a900460ff1615600560146101000a81548160ff021916908315150217905550565b600080610388846106d1565b90506000610395846107dd565b9050670de0b6b3a7640000600a82846103ae9190610b9c565b6103b89190610b6b565b6103c29190610b9c565b9250505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045390610ac9565b60405180910390fd5b610477670de0b6b3a76400008361082b90919063ffffffff16565b600681905550610498670de0b6b3a76400008261082b90919063ffffffff16565b600781905550866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90610ac9565b60405180910390fd5b600560159054906101000a900460ff1615600560156101000a81548160ff021916908315150217905550565b600080828051906020012090507f8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f381146107cd577f181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a31081146107c4577f6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f1781146107bb577fb2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb81146107b0577fb5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd81146107a85760006107ab565b60c85b6107b3565b60e15b60ff166107bf565b61012c5b6107c8565b6101c25b6107d1565b6102a35b61ffff16915050919050565b60006001821461081e5760028214610816576003821461080e5760048214610806576000610809565b60505b610811565b602a5b610819565b60165b610821565b600f5b60ff169050919050565b600081836108399190610b9c565b905092915050565b600061085461084f84610b29565b610b04565b90508281526020810184848401111561086c57600080fd5b610877848285610cbc565b509392505050565b60008135905061088e81610dc3565b92915050565b600082601f8301126108a557600080fd5b81356108b5848260208601610841565b91505092915050565b6000813590506108cd81610dda565b92915050565b600080600080600080600060e0888a0312156108ee57600080fd5b60006108fc8a828b0161087f565b975050602061090d8a828b0161087f565b965050604061091e8a828b0161087f565b955050606061092f8a828b0161087f565b94505060806109408a828b0161087f565b93505060a06109518a828b016108be565b92505060c06109628a828b016108be565b91505092959891949750929550565b6000806040838503121561098457600080fd5b600083013567ffffffffffffffff81111561099e57600080fd5b6109aa85828601610894565b92505060206109bb858286016108be565b9150509250929050565b6109ce81610c08565b82525050565b6109dd81610c1a565b82525050565b6109ec81610c50565b82525050565b6109fb81610c74565b82525050565b610a0a81610c98565b82525050565b6000610a1d601a83610b5a565b9150610a2882610d9a565b602082019050919050565b610a3c81610c46565b82525050565b6000602082019050610a5760008301846109c5565b92915050565b6000602082019050610a7260008301846109d4565b92915050565b6000602082019050610a8d60008301846109e3565b92915050565b6000602082019050610aa860008301846109f2565b92915050565b6000602082019050610ac36000830184610a01565b92915050565b60006020820190508181036000830152610ae281610a10565b9050919050565b6000602082019050610afe6000830184610a33565b92915050565b6000610b0e610b1f565b9050610b1a8282610ccb565b919050565b6000604051905090565b600067ffffffffffffffff821115610b4457610b43610d5a565b5b610b4d82610d89565b9050602081019050919050565b600082825260208201905092915050565b6000610b7682610c46565b9150610b8183610c46565b925082610b9157610b90610d2b565b5b828204905092915050565b6000610ba782610c46565b9150610bb283610c46565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610beb57610bea610cfc565b5b828202905092915050565b6000610c0182610c26565b9050919050565b6000610c1382610c26565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c5b82610c62565b9050919050565b6000610c6d82610c26565b9050919050565b6000610c7f82610c86565b9050919050565b6000610c9182610c26565b9050919050565b6000610ca382610caa565b9050919050565b6000610cb582610c26565b9050919050565b82818337600083830152505050565b610cd482610d89565b810181811067ffffffffffffffff82111715610cf357610cf2610d5a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b610dcc81610bf6565b8114610dd757600080fd5b50565b610de381610c46565b8114610dee57600080fd5b5056fea2646970667358221220a25005444332efcc6533a7c99f90d67216fd290dd3d6f98376626d091f3ce05e64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE27 DUP1 PUSH2 0x97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xAA93C0EE EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xB33F9527 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1FF JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x615 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x347 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x388 DUP5 PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x395 DUP5 PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0xA DUP3 DUP5 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x477 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x82B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x498 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x82B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x8C57226533EC41D2857120DF9ACE6DFF88130D9B32385E09C9828F75027730F3 DUP2 EQ PUSH2 0x7CD JUMPI PUSH32 0x181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310 DUP2 EQ PUSH2 0x7C4 JUMPI PUSH32 0x6764D804D57285AE9D4C42CC380377D3D0EE9B90FF9EECCAA32D3B2E3E8D7F17 DUP2 EQ PUSH2 0x7BB JUMPI PUSH32 0xB2C1AAAF9F516585466C9876E2EAF06EE68751AAD537B2A6FA22F473D03B58EB DUP2 EQ PUSH2 0x7B0 JUMPI PUSH32 0xB5333297A8BD10E190CB97FB1EE0F49587C8B2E015370E943C69FD680DABC6BD DUP2 EQ PUSH2 0x7A8 JUMPI PUSH1 0x0 PUSH2 0x7AB JUMP JUMPDEST PUSH1 0xC8 JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0xE1 JUMPDEST PUSH1 0xFF AND PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x12C JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x1C2 JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x2A3 JUMPDEST PUSH2 0xFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x81E JUMPI PUSH1 0x2 DUP3 EQ PUSH2 0x816 JUMPI PUSH1 0x3 DUP3 EQ PUSH2 0x80E JUMPI PUSH1 0x4 DUP3 EQ PUSH2 0x806 JUMPI PUSH1 0x0 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x50 JUMPDEST PUSH2 0x811 JUMP JUMPDEST PUSH1 0x2A JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x16 JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0xF JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x839 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x854 PUSH2 0x84F DUP5 PUSH2 0xB29 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x877 DUP5 DUP3 DUP6 PUSH2 0xCBC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x88E DUP2 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x841 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8CD DUP2 PUSH2 0xDDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8FC DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x90D DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x91E DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x92F DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x940 DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x951 DUP11 DUP3 DUP12 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x962 DUP11 DUP3 DUP12 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AA DUP6 DUP3 DUP7 ADD PUSH2 0x894 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9BB DUP6 DUP3 DUP7 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CE DUP2 PUSH2 0xC08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9DD DUP2 PUSH2 0xC1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9EC DUP2 PUSH2 0xC50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9FB DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0xC98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1D PUSH1 0x1A DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP2 POP PUSH2 0xA28 DUP3 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3C DUP2 PUSH2 0xC46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA72 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE2 DUP2 PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0E PUSH2 0xB1F JUMP JUMPDEST SWAP1 POP PUSH2 0xB1A DUP3 DUP3 PUSH2 0xCCB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB44 JUMPI PUSH2 0xB43 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH2 0xB4D DUP3 PUSH2 0xD89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0xB81 DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB91 JUMPI PUSH2 0xB90 PUSH2 0xD2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA7 DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB2 DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xCFC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC01 DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC13 DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP3 PUSH2 0xC62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6D DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP3 PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA3 DUP3 PUSH2 0xCAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB5 DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xCD4 DUP3 PUSH2 0xD89 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCF3 JUMPI PUSH2 0xCF2 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDCC DUP2 PUSH2 0xBF6 JUMP JUMPDEST DUP2 EQ PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE3 DUP2 PUSH2 0xC46 JUMP JUMPDEST DUP2 EQ PUSH2 0xDEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 POP SDIV DIFFICULTY NUMBER ORIGIN 0xEF 0xCC PUSH6 0x33A7C99F90D6 PUSH19 0x16FD290DD3D6F98376626D091F3CE05E64736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "88:3333:2:-:0;;;;;;;;;;;;;863:4:1;854:6;;:13;;;;;;;;;;;;;;;;;;892:4;877:12;;:19;;;;;;;;;;;;;;;;;;926:10;906:9;;:31;;;;;;;;;;;;;;;;;;88:3333:2;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9988:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "91:261:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "101:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "168:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "126:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "110:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "110:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "192:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "199:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "185:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "185:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "185:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "215:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "230:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "237:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "226:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "219:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "280:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "292:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "282:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "282:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "282:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "261:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "257:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "275:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "254:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:25:10"
															},
															"nodeType": "YulIf",
															"src": "251:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "329:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "334:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "339:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "305:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "305:41:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "64:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "69:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "77:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "85:5:10",
														"type": ""
													}
												],
												"src": "7:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "442:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "429:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "429:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "420:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "485:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "458:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "458:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "388:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "396:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "404:5:10",
														"type": ""
													}
												],
												"src": "358:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "579:211:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "628:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "637:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "640:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "630:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "630:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "630:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "607:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "615:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "603:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "603:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "622:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "599:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "592:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:35:10"
															},
															"nodeType": "YulIf",
															"src": "589:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "653:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "680:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "667:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "657:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "696:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "757:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "765:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "753:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "753:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "772:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "780:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "705:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "696:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "557:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "565:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "573:5:10",
														"type": ""
													}
												],
												"src": "517:273:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "848:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "858:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "880:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "867:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "858:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "923:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "896:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "826:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "834:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "842:5:10",
														"type": ""
													}
												],
												"src": "796:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:968:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1165:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1158:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1158:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:33:10"
															},
															"nodeType": "YulIf",
															"src": "1119:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1182:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1197:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1211:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1201:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1226:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1261:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1272:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1257:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1257:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1281:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1236:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1236:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1226:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1309:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1324:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1328:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1354:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1389:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1400:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1385:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1385:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1409:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1364:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1364:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1354:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1437:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1452:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1466:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1456:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1517:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1528:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1513:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1513:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1537:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1492:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1565:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1580:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1594:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1584:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1610:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1645:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1656:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1641:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1641:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1665:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1620:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1620:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1610:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1693:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1708:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1722:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1712:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1739:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1774:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1785:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1770:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1770:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1794:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1749:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1749:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1739:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1822:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1837:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1841:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1868:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1903:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1914:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1899:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1899:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1923:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1878:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1878:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "1868:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1951:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1966:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1980:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1970:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1997:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2032:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2043:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2028:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2028:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2052:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2007:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2007:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "1997:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1031:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1042:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1054:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1062:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1070:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1078:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1086:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1094:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1102:6:10",
														"type": ""
													}
												],
												"src": "941:1136:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2176:427:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2222:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2231:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2234:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2224:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2224:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2224:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2197:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2206:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2193:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2193:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:32:10"
															},
															"nodeType": "YulIf",
															"src": "2186:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2248:220:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2263:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2294:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2305:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2290:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2290:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2277:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2277:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2267:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2355:16:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2364:1:10",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2367:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "2357:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2357:12:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2357:12:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2327:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2335:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2324:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2324:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "2321:2:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2385:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2430:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2441:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2426:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2426:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2450:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2395:30:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2395:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2385:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2478:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2493:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2507:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2497:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2523:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2558:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2569:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2554:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2554:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2578:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2533:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2533:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2523:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2138:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2149:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2161:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2169:6:10",
														"type": ""
													}
												],
												"src": "2083:520:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2690:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2707:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2738:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2712:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2700:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2678:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2685:3:10",
														"type": ""
													}
												],
												"src": "2609:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2816:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2853:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2838:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2838:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2826:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2826:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2826:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2804:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2811:3:10",
														"type": ""
													}
												],
												"src": "2757:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2952:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2969:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3020:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2974:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:52:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2962:65:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2940:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2947:3:10",
														"type": ""
													}
												],
												"src": "2872:161:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3122:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3139:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3193:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP37Full_$852_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3144:48:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3144:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3132:68:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP37Full_$852_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3110:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3117:3:10",
														"type": ""
													}
												],
												"src": "3039:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3290:79:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3307:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3356:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP7_$983_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3312:43:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:50:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3300:63:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP7_$983_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3278:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3285:3:10",
														"type": ""
													}
												],
												"src": "3212:157:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3521:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3531:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3597:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3538:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3531:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3703:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																	"nodeType": "YulIdentifier",
																	"src": "3614:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3614:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3716:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3727:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3732:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3723:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3716:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3509:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3517:3:10",
														"type": ""
													}
												],
												"src": "3375:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3812:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3829:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3852:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3834:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3834:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3822:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3822:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3822:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3800:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3807:3:10",
														"type": ""
													}
												],
												"src": "3747:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3985:140:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3995:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4007:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4018:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4003:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3995:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4091:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4104:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4115:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4100:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4100:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4031:59:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:87:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4031:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3957:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3969:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3980:4:10",
														"type": ""
													}
												],
												"src": "3871:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4223:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4233:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4245:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4256:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4241:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4233:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4307:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4320:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4331:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4316:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4269:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4269:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4195:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4207:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4218:4:10",
														"type": ""
													}
												],
												"src": "4131:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4460:139:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4470:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4482:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4493:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4478:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4478:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4470:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4565:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4589:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4574:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4574:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4506:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:86:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4506:86:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4432:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4444:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4455:4:10",
														"type": ""
													}
												],
												"src": "4347:252:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4721:142:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4731:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4743:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4754:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4739:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4739:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4731:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4829:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4853:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4838:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4838:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP37Full_$852_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4767:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4767:89:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4767:89:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP37Full_$852__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4693:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4705:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4716:4:10",
														"type": ""
													}
												],
												"src": "4605:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4980:137:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4990:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5002:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5013:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4998:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4998:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4990:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5083:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5096:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5107:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5092:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5092:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP7_$983_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5026:56:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:84:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5026:84:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP7_$983__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4952:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4964:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4975:4:10",
														"type": ""
													}
												],
												"src": "4869:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5294:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5304:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5316:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5327:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5312:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5312:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5304:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5351:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5362:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5347:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5347:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5370:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5376:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5366:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5366:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5340:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5396:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5530:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5404:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5396:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5274:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5289:4:10",
														"type": ""
													}
												],
												"src": "5123:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5646:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5656:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5668:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5679:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5664:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5656:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5736:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5749:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5760:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5745:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5745:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5692:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5618:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5630:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5641:4:10",
														"type": ""
													}
												],
												"src": "5548:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5817:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5827:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5837:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5886:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5894:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5866:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5866:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5801:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5810:6:10",
														"type": ""
													}
												],
												"src": "5776:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5951:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5961:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5977:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5971:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5961:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5944:6:10",
														"type": ""
													}
												],
												"src": "5911:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6059:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6164:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6166:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6166:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6166:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6136:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6144:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6133:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6133:30:10"
															},
															"nodeType": "YulIf",
															"src": "6130:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6196:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6226:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6204:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6196:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6270:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6282:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6288:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6278:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6278:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6270:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6043:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6054:4:10",
														"type": ""
													}
												],
												"src": "5992:308:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6402:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6419:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6424:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6412:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6412:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6412:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6440:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6459:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6464:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6455:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6455:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6440:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6374:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6379:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6390:11:10",
														"type": ""
													}
												],
												"src": "6306:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6523:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6533:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6556:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6538:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6538:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6533:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6567:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6590:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6572:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6572:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6567:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6614:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6616:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6616:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6616:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6611:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6604:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:9:10"
															},
															"nodeType": "YulIf",
															"src": "6601:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6646:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6655:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6658:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6651:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6651:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6646:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6512:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6515:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6521:1:10",
														"type": ""
													}
												],
												"src": "6481:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6720:300:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6730:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6753:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6735:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6735:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6730:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6764:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6787:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6769:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6764:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6962:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6964:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6964:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6964:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6874:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6867:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6867:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6860:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6860:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6882:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6889:66:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6957:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6885:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6885:74:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6879:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6879:81:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6856:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6856:105:10"
															},
															"nodeType": "YulIf",
															"src": "6853:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6994:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7009:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7012:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7005:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6994:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6703:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6706:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6712:7:10",
														"type": ""
													}
												],
												"src": "6672:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7071:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7081:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7110:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7092:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7092:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7081:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7053:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7063:7:10",
														"type": ""
													}
												],
												"src": "7026:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7181:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7191:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7220:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7202:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7191:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7163:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7173:7:10",
														"type": ""
													}
												],
												"src": "7128:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7280:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7290:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7315:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7308:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7308:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7301:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7290:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7262:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7272:7:10",
														"type": ""
													}
												],
												"src": "7238:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7371:7:10",
														"type": ""
													}
												],
												"src": "7334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7511:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7521:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7532:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7503:7:10",
														"type": ""
													}
												],
												"src": "7466:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7624:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7634:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7693:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7647:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7647:52:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7634:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7604:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7614:9:10",
														"type": ""
													}
												],
												"src": "7549:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7786:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7796:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7827:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7809:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7796:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7766:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7776:9:10",
														"type": ""
													}
												],
												"src": "7711:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7923:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7933:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7995:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP37Full_$852_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7946:48:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:55:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7933:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$852_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7903:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7913:9:10",
														"type": ""
													}
												],
												"src": "7845:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8091:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8101:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8132:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8114:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8114:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8101:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$852_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8071:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8081:9:10",
														"type": ""
													}
												],
												"src": "8013:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8223:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8233:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8290:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP7_$983_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8246:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8246:50:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8233:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$983_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8203:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8213:9:10",
														"type": ""
													}
												],
												"src": "8150:152:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8381:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8391:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8422:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8404:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8391:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$983_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8371:9:10",
														"type": ""
													}
												],
												"src": "8308:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8491:103:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8514:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8519:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8524:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8501:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8501:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8572:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8577:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8568:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8568:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8586:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8561:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8561:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8473:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8478:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8483:6:10",
														"type": ""
													}
												],
												"src": "8440:154:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8643:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8653:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8675:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8705:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8683:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8683:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8671:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8671:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8657:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8822:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8824:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8824:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8824:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8765:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8777:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8762:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8762:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8801:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8813:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8798:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8798:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8759:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8759:62:10"
															},
															"nodeType": "YulIf",
															"src": "8756:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8860:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8864:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8853:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8853:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8853:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8629:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8637:4:10",
														"type": ""
													}
												],
												"src": "8600:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8915:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8932:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8935:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8925:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8925:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9032:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9022:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9022:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9022:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9053:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9056:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9046:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9046:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9046:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8887:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9101:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9118:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9121:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9111:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9111:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9215:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9218:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9208:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9208:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9208:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9239:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9242:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9232:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9232:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9232:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9073:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9287:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9304:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9307:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9297:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9297:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9401:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9404:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9394:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9394:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9394:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9425:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9428:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9418:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9418:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9418:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9259:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9493:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9503:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9521:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9528:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9517:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9517:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9537:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9533:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9513:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9513:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9503:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9476:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9486:6:10",
														"type": ""
													}
												],
												"src": "9445:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9659:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9681:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9689:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9677:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9677:14:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9693:28:10",
																		"type": "",
																		"value": "HeroCore Error : onlyOwner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9670:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9670:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9670:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9651:6:10",
														"type": ""
													}
												],
												"src": "9553:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9778:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9835:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9844:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9847:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9837:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9837:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9837:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9801:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9826:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9808:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9808:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9798:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9798:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9791:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9791:43:10"
															},
															"nodeType": "YulIf",
															"src": "9788:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9771:5:10",
														"type": ""
													}
												],
												"src": "9735:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9906:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9963:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9972:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9975:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9965:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9965:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9965:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9929:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9954:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9936:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9926:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9926:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9919:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9919:43:10"
															},
															"nodeType": "YulIf",
															"src": "9916:2:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9899:5:10",
														"type": ""
													}
												],
												"src": "9863:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IHeroNFT_$30_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP37Full_$852_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP37Full_$852_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP7_$983_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP7_$983_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP37Full_$852__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP37Full_$852_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP7_$983__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP7_$983_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IHeroNFT_$30_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$852_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP37Full_$852_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$852_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$983_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP7_$983_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$983_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"HeroCore Error : onlyOwner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063893d20e811610071578063893d20e81461016d5780639eb4eae51461018b578063aa93c0ee14610195578063b33f9527146101c5578063c412eaba146101e1578063ee72b8cc146101ff576100b4565b80631b9cbdfb146100b957806321df0da7146100d757806328919df6146100f55780633a1a8080146101135780636805b84b146101315780637cac00ee1461014f575b600080fd5b6100c1610209565b6040516100ce9190610ae9565b60405180910390f35b6100df61020f565b6040516100ec9190610aae565b60405180910390f35b6100fd610239565b60405161010a9190610a5d565b60405180910390f35b61011b610250565b6040516101289190610ae9565b60405180910390f35b610139610256565b6040516101469190610a5d565b60405180910390f35b61015761026d565b6040516101649190610a78565b60405180910390f35b610175610296565b6040516101829190610a42565b60405180910390f35b6101936102c0565b005b6101af60048036038101906101aa9190610971565b61037c565b6040516101bc9190610ae9565b60405180910390f35b6101df60048036038101906101da91906108d3565b6103cc565b005b6101e96105eb565b6040516101f69190610a93565b60405180910390f35b610207610615565b005b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560159054906101000a900460ff16905090565b60065481565b6000600560149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790610ac9565b60405180910390fd5b600560149054906101000a900460ff1615600560146101000a81548160ff021916908315150217905550565b600080610388846106d1565b90506000610395846107dd565b9050670de0b6b3a7640000600a82846103ae9190610b9c565b6103b89190610b6b565b6103c29190610b9c565b9250505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045390610ac9565b60405180910390fd5b610477670de0b6b3a76400008361082b90919063ffffffff16565b600681905550610498670de0b6b3a76400008261082b90919063ffffffff16565b600781905550866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90610ac9565b60405180910390fd5b600560159054906101000a900460ff1615600560156101000a81548160ff021916908315150217905550565b600080828051906020012090507f8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f381146107cd577f181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a31081146107c4577f6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f1781146107bb577fb2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb81146107b0577fb5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd81146107a85760006107ab565b60c85b6107b3565b60e15b60ff166107bf565b61012c5b6107c8565b6101c25b6107d1565b6102a35b61ffff16915050919050565b60006001821461081e5760028214610816576003821461080e5760048214610806576000610809565b60505b610811565b602a5b610819565b60165b610821565b600f5b60ff169050919050565b600081836108399190610b9c565b905092915050565b600061085461084f84610b29565b610b04565b90508281526020810184848401111561086c57600080fd5b610877848285610cbc565b509392505050565b60008135905061088e81610dc3565b92915050565b600082601f8301126108a557600080fd5b81356108b5848260208601610841565b91505092915050565b6000813590506108cd81610dda565b92915050565b600080600080600080600060e0888a0312156108ee57600080fd5b60006108fc8a828b0161087f565b975050602061090d8a828b0161087f565b965050604061091e8a828b0161087f565b955050606061092f8a828b0161087f565b94505060806109408a828b0161087f565b93505060a06109518a828b016108be565b92505060c06109628a828b016108be565b91505092959891949750929550565b6000806040838503121561098457600080fd5b600083013567ffffffffffffffff81111561099e57600080fd5b6109aa85828601610894565b92505060206109bb858286016108be565b9150509250929050565b6109ce81610c08565b82525050565b6109dd81610c1a565b82525050565b6109ec81610c50565b82525050565b6109fb81610c74565b82525050565b610a0a81610c98565b82525050565b6000610a1d601a83610b5a565b9150610a2882610d9a565b602082019050919050565b610a3c81610c46565b82525050565b6000602082019050610a5760008301846109c5565b92915050565b6000602082019050610a7260008301846109d4565b92915050565b6000602082019050610a8d60008301846109e3565b92915050565b6000602082019050610aa860008301846109f2565b92915050565b6000602082019050610ac36000830184610a01565b92915050565b60006020820190508181036000830152610ae281610a10565b9050919050565b6000602082019050610afe6000830184610a33565b92915050565b6000610b0e610b1f565b9050610b1a8282610ccb565b919050565b6000604051905090565b600067ffffffffffffffff821115610b4457610b43610d5a565b5b610b4d82610d89565b9050602081019050919050565b600082825260208201905092915050565b6000610b7682610c46565b9150610b8183610c46565b925082610b9157610b90610d2b565b5b828204905092915050565b6000610ba782610c46565b9150610bb283610c46565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610beb57610bea610cfc565b5b828202905092915050565b6000610c0182610c26565b9050919050565b6000610c1382610c26565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c5b82610c62565b9050919050565b6000610c6d82610c26565b9050919050565b6000610c7f82610c86565b9050919050565b6000610c9182610c26565b9050919050565b6000610ca382610caa565b9050919050565b6000610cb582610c26565b9050919050565b82818337600083830152505050565b610cd482610d89565b810181811067ffffffffffffffff82111715610cf357610cf2610d5a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b610dcc81610bf6565b8114610dd757600080fd5b50565b610de381610c46565b8114610dee57600080fd5b5056fea2646970667358221220a25005444332efcc6533a7c99f90d67216fd290dd3d6f98376626d091f3ce05e64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xAA93C0EE EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xB33F9527 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1FF JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x615 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x347 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x388 DUP5 PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x395 DUP5 PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0xA DUP3 DUP5 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x477 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x82B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x498 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x82B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x8C57226533EC41D2857120DF9ACE6DFF88130D9B32385E09C9828F75027730F3 DUP2 EQ PUSH2 0x7CD JUMPI PUSH32 0x181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310 DUP2 EQ PUSH2 0x7C4 JUMPI PUSH32 0x6764D804D57285AE9D4C42CC380377D3D0EE9B90FF9EECCAA32D3B2E3E8D7F17 DUP2 EQ PUSH2 0x7BB JUMPI PUSH32 0xB2C1AAAF9F516585466C9876E2EAF06EE68751AAD537B2A6FA22F473D03B58EB DUP2 EQ PUSH2 0x7B0 JUMPI PUSH32 0xB5333297A8BD10E190CB97FB1EE0F49587C8B2E015370E943C69FD680DABC6BD DUP2 EQ PUSH2 0x7A8 JUMPI PUSH1 0x0 PUSH2 0x7AB JUMP JUMPDEST PUSH1 0xC8 JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0xE1 JUMPDEST PUSH1 0xFF AND PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x12C JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x1C2 JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x2A3 JUMPDEST PUSH2 0xFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x81E JUMPI PUSH1 0x2 DUP3 EQ PUSH2 0x816 JUMPI PUSH1 0x3 DUP3 EQ PUSH2 0x80E JUMPI PUSH1 0x4 DUP3 EQ PUSH2 0x806 JUMPI PUSH1 0x0 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x50 JUMPDEST PUSH2 0x811 JUMP JUMPDEST PUSH1 0x2A JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x16 JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0xF JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x839 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x854 PUSH2 0x84F DUP5 PUSH2 0xB29 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x877 DUP5 DUP3 DUP6 PUSH2 0xCBC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x88E DUP2 PUSH2 0xDC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x841 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8CD DUP2 PUSH2 0xDDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8FC DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x90D DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x91E DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x92F DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x940 DUP11 DUP3 DUP12 ADD PUSH2 0x87F JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x951 DUP11 DUP3 DUP12 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x962 DUP11 DUP3 DUP12 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AA DUP6 DUP3 DUP7 ADD PUSH2 0x894 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9BB DUP6 DUP3 DUP7 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CE DUP2 PUSH2 0xC08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9DD DUP2 PUSH2 0xC1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9EC DUP2 PUSH2 0xC50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9FB DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0xC98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1D PUSH1 0x1A DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP2 POP PUSH2 0xA28 DUP3 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3C DUP2 PUSH2 0xC46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA72 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE2 DUP2 PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0E PUSH2 0xB1F JUMP JUMPDEST SWAP1 POP PUSH2 0xB1A DUP3 DUP3 PUSH2 0xCCB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB44 JUMPI PUSH2 0xB43 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH2 0xB4D DUP3 PUSH2 0xD89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0xB81 DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB91 JUMPI PUSH2 0xB90 PUSH2 0xD2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA7 DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB2 DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xCFC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC01 DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC13 DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP3 PUSH2 0xC62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6D DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP3 PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA3 DUP3 PUSH2 0xCAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB5 DUP3 PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xCD4 DUP3 PUSH2 0xD89 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCF3 JUMPI PUSH2 0xCF2 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDCC DUP2 PUSH2 0xBF6 JUMP JUMPDEST DUP2 EQ PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE3 DUP2 PUSH2 0xC46 JUMP JUMPDEST DUP2 EQ PUSH2 0xDEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 POP SDIV DIFFICULTY NUMBER ORIGIN 0xEF 0xCC PUSH6 0x33A7C99F90D6 PUSH19 0x16FD290DD3D6F98376626D091F3CE05E64736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "88:3333:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;546:27:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1873:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;514:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1789:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2138:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1692:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1478:76;;;:::i;:::-;;452:318:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;950:522:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1969:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1560:94;;;:::i;:::-;;546:27;;;;:::o;2055:77::-;2096:5;2120;;;;;;;;;;;2113:12;;2055:77;:::o;1873:90::-;1921:4;1944:12;;;;;;;;;;;1937:19;;1873:90;:::o;514:26::-;;;;:::o;1789:78::-;1831:4;1854:6;;;;;;;;;;;1847:13;;1789:78;:::o;2138:84::-;2181:8;2208:7;;;;;;;;;;;2201:14;;2138:84;:::o;1692:91::-;1733:15;1767:9;;;;;;;;;;;1760:16;;1692:91;:::o;1478:76::-;766:9;;;;;;;;;;;752:23;;:10;:23;;;744:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1541:6:::1;;;;;;;;;;;1540:7;1531:6;;:16;;;;;;;;;;;;;;;;;;1478:76::o:0;452:318:2:-;563:7;586:19;608:32;634:5;608:25;:32::i;:::-;586:54;;650:19;672:32;698:5;672:25;:32::i;:::-;650:54;;759:4;753:2;738:11;724;:25;;;;:::i;:::-;723:32;;;;:::i;:::-;722:41;;;;:::i;:::-;715:48;;;;452:318;;;;:::o;950:522:1:-;766:9;;;;;;;;;;;752:23;;:10;:23;;;744:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1209:19:::1;615:4;1209:5;:9;;:19;;;;:::i;:::-;1195:11;:33;;;;1253:25;615:4;1253:11;:15;;:25;;;;:::i;:::-;1238:12;:40;;;;1308:8;1289:7;::::0;:28:::1;;;;;;;;;;;;;;;;;;1341:6;1327:5;;:21;;;;;;;;;;;;;;;;;;1376:5;1358:4;;:24;;;;;;;;;;;;;;;;;;1410:15;1393:14;;:32;;;;;;;;;;;;;;;;;;1451:14;1435:13;;:30;;;;;;;;;;;;;;;;;;950:522:::0;;;;;;;:::o;1969:80::-;2009:10;2038:4;;;;;;;;;;;2031:11;;1969:80;:::o;1560:94::-;766:9;;;;;;;;;;;752:23;;:10;:23;;;744:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1635:12:::1;;;;;;;;;;;1634:13;1619:12;;:28;;;;;;;;;;;;;;;;;;1560:94::o:0;1045:504:2:-;1148:7;1171:18;1208:5;1192:23;;;;;;1171:44;;171:22;1247:10;:23;:285;;236:22;1279:10;:23;:253;;296:17;1343:10;:18;:189;;360:26;1402:10;:27;:130;;426:19;1470:10;:20;:62;;1531:1;1470:62;;;1509:3;1470:62;1402:130;;;1448:3;1402:130;1343:189;;;;;1380:3;1343:189;1279:253;;;1321:3;1279:253;1247:285;;;1273:3;1247:285;1226:316;;;;;1045:504;;;:::o;776:263::-;873:7;926:1;917:5;:10;:105;;944:1;935:5;:10;:87;;962:1;953:5;:10;:69;;980:1;971:5;:10;:51;;1021:1;971:51;;;1000:2;971:51;953:69;;;966:2;953:69;935:87;;;948:2;935:87;917:105;;;930:2;917:105;896:136;;;;776:263;;;:::o;283:96:9:-;341:7;371:1;367;:5;;;;:::i;:::-;360:12;;283:96;;;;:::o;7:345:10:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;358:139::-;404:5;442:6;429:20;420:29;;458:33;485:5;458:33;:::i;:::-;410:87;;;;:::o;517:273::-;573:5;622:3;615:4;607:6;603:17;599:27;589:2;;640:1;637;630:12;589:2;680:6;667:20;705:79;780:3;772:6;765:4;757:6;753:17;705:79;:::i;:::-;696:88;;579:211;;;;;:::o;796:139::-;842:5;880:6;867:20;858:29;;896:33;923:5;896:33;:::i;:::-;848:87;;;;:::o;941:1136::-;1054:6;1062;1070;1078;1086;1094;1102;1151:3;1139:9;1130:7;1126:23;1122:33;1119:2;;;1168:1;1165;1158:12;1119:2;1211:1;1236:53;1281:7;1272:6;1261:9;1257:22;1236:53;:::i;:::-;1226:63;;1182:117;1338:2;1364:53;1409:7;1400:6;1389:9;1385:22;1364:53;:::i;:::-;1354:63;;1309:118;1466:2;1492:53;1537:7;1528:6;1517:9;1513:22;1492:53;:::i;:::-;1482:63;;1437:118;1594:2;1620:53;1665:7;1656:6;1645:9;1641:22;1620:53;:::i;:::-;1610:63;;1565:118;1722:3;1749:53;1794:7;1785:6;1774:9;1770:22;1749:53;:::i;:::-;1739:63;;1693:119;1851:3;1878:53;1923:7;1914:6;1903:9;1899:22;1878:53;:::i;:::-;1868:63;;1822:119;1980:3;2007:53;2052:7;2043:6;2032:9;2028:22;2007:53;:::i;:::-;1997:63;;1951:119;1109:968;;;;;;;;;;:::o;2083:520::-;2161:6;2169;2218:2;2206:9;2197:7;2193:23;2189:32;2186:2;;;2234:1;2231;2224:12;2186:2;2305:1;2294:9;2290:17;2277:31;2335:18;2327:6;2324:30;2321:2;;;2367:1;2364;2357:12;2321:2;2395:63;2450:7;2441:6;2430:9;2426:22;2395:63;:::i;:::-;2385:73;;2248:220;2507:2;2533:53;2578:7;2569:6;2558:9;2554:22;2533:53;:::i;:::-;2523:63;;2478:118;2176:427;;;;;:::o;2609:142::-;2712:32;2738:5;2712:32;:::i;:::-;2707:3;2700:45;2690:61;;:::o;2757:109::-;2838:21;2853:5;2838:21;:::i;:::-;2833:3;2826:34;2816:50;;:::o;2872:161::-;2974:52;3020:5;2974:52;:::i;:::-;2969:3;2962:65;2952:81;;:::o;3039:167::-;3144:55;3193:5;3144:55;:::i;:::-;3139:3;3132:68;3122:84;;:::o;3212:157::-;3312:50;3356:5;3312:50;:::i;:::-;3307:3;3300:63;3290:79;;:::o;3375:366::-;3517:3;3538:67;3602:2;3597:3;3538:67;:::i;:::-;3531:74;;3614:93;3703:3;3614:93;:::i;:::-;3732:2;3727:3;3723:12;3716:19;;3521:220;;;:::o;3747:118::-;3834:24;3852:5;3834:24;:::i;:::-;3829:3;3822:37;3812:53;;:::o;3871:254::-;3980:4;4018:2;4007:9;4003:18;3995:26;;4031:87;4115:1;4104:9;4100:17;4091:6;4031:87;:::i;:::-;3985:140;;;;:::o;4131:210::-;4218:4;4256:2;4245:9;4241:18;4233:26;;4269:65;4331:1;4320:9;4316:17;4307:6;4269:65;:::i;:::-;4223:118;;;;:::o;4347:252::-;4455:4;4493:2;4482:9;4478:18;4470:26;;4506:86;4589:1;4578:9;4574:17;4565:6;4506:86;:::i;:::-;4460:139;;;;:::o;4605:258::-;4716:4;4754:2;4743:9;4739:18;4731:26;;4767:89;4853:1;4842:9;4838:17;4829:6;4767:89;:::i;:::-;4721:142;;;;:::o;4869:248::-;4975:4;5013:2;5002:9;4998:18;4990:26;;5026:84;5107:1;5096:9;5092:17;5083:6;5026:84;:::i;:::-;4980:137;;;;:::o;5123:419::-;5289:4;5327:2;5316:9;5312:18;5304:26;;5376:9;5370:4;5366:20;5362:1;5351:9;5347:17;5340:47;5404:131;5530:4;5404:131;:::i;:::-;5396:139;;5294:248;;;:::o;5548:222::-;5641:4;5679:2;5668:9;5664:18;5656:26;;5692:71;5760:1;5749:9;5745:17;5736:6;5692:71;:::i;:::-;5646:124;;;;:::o;5776:129::-;5810:6;5837:20;;:::i;:::-;5827:30;;5866:33;5894:4;5886:6;5866:33;:::i;:::-;5817:88;;;:::o;5911:75::-;5944:6;5977:2;5971:9;5961:19;;5951:35;:::o;5992:308::-;6054:4;6144:18;6136:6;6133:30;6130:2;;;6166:18;;:::i;:::-;6130:2;6204:29;6226:6;6204:29;:::i;:::-;6196:37;;6288:4;6282;6278:15;6270:23;;6059:241;;;:::o;6306:169::-;6390:11;6424:6;6419:3;6412:19;6464:4;6459:3;6455:14;6440:29;;6402:73;;;;:::o;6481:185::-;6521:1;6538:20;6556:1;6538:20;:::i;:::-;6533:25;;6572:20;6590:1;6572:20;:::i;:::-;6567:25;;6611:1;6601:2;;6616:18;;:::i;:::-;6601:2;6658:1;6655;6651:9;6646:14;;6523:143;;;;:::o;6672:348::-;6712:7;6735:20;6753:1;6735:20;:::i;:::-;6730:25;;6769:20;6787:1;6769:20;:::i;:::-;6764:25;;6957:1;6889:66;6885:74;6882:1;6879:81;6874:1;6867:9;6860:17;6856:105;6853:2;;;6964:18;;:::i;:::-;6853:2;7012:1;7009;7005:9;6994:20;;6720:300;;;;:::o;7026:96::-;7063:7;7092:24;7110:5;7092:24;:::i;:::-;7081:35;;7071:51;;;:::o;7128:104::-;7173:7;7202:24;7220:5;7202:24;:::i;:::-;7191:35;;7181:51;;;:::o;7238:90::-;7272:7;7315:5;7308:13;7301:21;7290:32;;7280:48;;;:::o;7334:126::-;7371:7;7411:42;7404:5;7400:54;7389:65;;7379:81;;;:::o;7466:77::-;7503:7;7532:5;7521:16;;7511:32;;;:::o;7549:156::-;7614:9;7647:52;7693:5;7647:52;:::i;:::-;7634:65;;7624:81;;;:::o;7711:128::-;7776:9;7809:24;7827:5;7809:24;:::i;:::-;7796:37;;7786:53;;;:::o;7845:162::-;7913:9;7946:55;7995:5;7946:55;:::i;:::-;7933:68;;7923:84;;;:::o;8013:131::-;8081:9;8114:24;8132:5;8114:24;:::i;:::-;8101:37;;8091:53;;;:::o;8150:152::-;8213:9;8246:50;8290:5;8246:50;:::i;:::-;8233:63;;8223:79;;;:::o;8308:126::-;8371:9;8404:24;8422:5;8404:24;:::i;:::-;8391:37;;8381:53;;;:::o;8440:154::-;8524:6;8519:3;8514;8501:30;8586:1;8577:6;8572:3;8568:16;8561:27;8491:103;;;:::o;8600:281::-;8683:27;8705:4;8683:27;:::i;:::-;8675:6;8671:40;8813:6;8801:10;8798:22;8777:18;8765:10;8762:34;8759:62;8756:2;;;8824:18;;:::i;:::-;8756:2;8864:10;8860:2;8853:22;8643:238;;;:::o;8887:180::-;8935:77;8932:1;8925:88;9032:4;9029:1;9022:15;9056:4;9053:1;9046:15;9073:180;9121:77;9118:1;9111:88;9218:4;9215:1;9208:15;9242:4;9239:1;9232:15;9259:180;9307:77;9304:1;9297:88;9404:4;9401:1;9394:15;9428:4;9425:1;9418:15;9445:102;9486:6;9537:2;9533:7;9528:2;9521:5;9517:14;9513:28;9503:38;;9493:54;;;:::o;9553:176::-;9693:28;9689:1;9681:6;9677:14;9670:52;9659:70;:::o;9735:122::-;9808:24;9826:5;9808:24;:::i;:::-;9801:5;9798:35;9788:2;;9847:1;9844;9837:12;9788:2;9778:79;:::o;9863:122::-;9936:24;9954:5;9936:24;:::i;:::-;9929:5;9926:35;9916:2;;9975:1;9972;9965:12;9916:2;9906:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "724600",
								"executionCost": "63460",
								"totalCost": "788060"
							},
							"external": {
								"calculateTokenAmount(string,uint256)": "infinite",
								"changeMiningPaused()": "22930",
								"changePaused()": "22842",
								"getHeroNFT()": "1376",
								"getItem()": "1353",
								"getMiningPaused()": "1274",
								"getOwner()": "1222",
								"getPaused()": "1318",
								"getToken()": "1288",
								"initialize(address,address,address,address,address,uint256,uint256)": "infinite",
								"priceOfKlay()": "1196",
								"priceOfToken()": "1130"
							},
							"internal": {
								"calculateBasicGradeAmount(string memory)": "infinite",
								"calculateBasicLevelAmount(uint256)": "170",
								"calculateItemIndex(uint256)": "infinite",
								"calculatePower(string memory,uint256)": "infinite",
								"makeRandomNumberForItem(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 3421,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 863,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 854,
									"end": 860,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 854,
									"end": 860,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 854,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 854,
									"end": 867,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 854,
									"end": 867,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 854,
									"end": 867,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 892,
									"end": 896,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 877,
									"end": 896,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 877,
									"end": 896,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 877,
									"end": 896,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 877,
									"end": 896,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 926,
									"end": 936,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 906,
									"end": 915,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 906,
									"end": 915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 906,
									"end": 937,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 906,
									"end": 937,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 906,
									"end": 937,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 906,
									"end": 937,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 3421,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a25005444332efcc6533a7c99f90d67216fd290dd3d6f98376626d091f3ce05e64736f6c63430008040033",
									".code": [
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "9EB4EAE5"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "AA93C0EE"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "B33F9527"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "C412EABA"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "EE72B8CC"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "1B9CBDFB"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "21DF0DA7"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "28919DF6"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "3A1A8080"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "6805B84B"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "7CAC00EE"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 88,
											"end": 3421,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 546,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 546,
											"end": 573,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 573,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2132,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1963,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 514,
											"end": 540,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 540,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2222,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1783,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1547,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1554,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 452,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 563,
											"end": 570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 608,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 608,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 608,
											"end": 640,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 608,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 586,
											"end": 640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 698,
											"end": 703,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 672,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 672,
											"end": 704,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 672,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 672,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 753,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 738,
											"end": 749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 724,
											"end": 735,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 724,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 724,
											"end": 749,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 724,
											"end": 749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 749,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 724,
											"end": 749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 723,
											"end": 755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 723,
											"end": 755,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 755,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 723,
											"end": 755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 722,
											"end": 763,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 722,
											"end": 763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 722,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 722,
											"end": 763,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 722,
											"end": 763,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 722,
											"end": 763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 715,
											"end": 763,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 715,
											"end": 763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 715,
											"end": 763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 715,
											"end": 763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 452,
											"end": 770,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 615,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 615,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1253,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1238,
											"end": 1278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1278,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1316,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1327,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1472,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2049,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 766,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 775,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 744,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 744,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1654,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1045,
											"end": 1549,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1045,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1213,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 171,
											"end": 193,
											"name": "PUSH",
											"source": 2,
											"value": "8C57226533EC41D2857120DF9ACE6DFF88130D9B32385E09C9828F75027730F3"
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1247,
											"end": 1532,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"source": 2,
											"value": "181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310"
										},
										{
											"begin": 1279,
											"end": 1289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1302,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 296,
											"end": 313,
											"name": "PUSH",
											"source": 2,
											"value": "6764D804D57285AE9D4C42CC380377D3D0EE9B90FF9EECCAA32D3B2E3E8D7F17"
										},
										{
											"begin": 1343,
											"end": 1353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 360,
											"end": 386,
											"name": "PUSH",
											"source": 2,
											"value": "B2C1AAAF9F516585466C9876E2EAF06EE68751AAD537B2A6FA22F473D03B58EB"
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1429,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1402,
											"end": 1532,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH",
											"source": 2,
											"value": "B5333297A8BD10E190CB97FB1EE0F49587C8B2E015370E943C69FD680DABC6BD"
										},
										{
											"begin": 1470,
											"end": 1480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1490,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "C8"
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1402,
											"end": 1532,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1402,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1451,
											"name": "PUSH",
											"source": 2,
											"value": "E1"
										},
										{
											"begin": 1402,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1402,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "PUSH",
											"source": 2,
											"value": "12C"
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1343,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1324,
											"name": "PUSH",
											"source": 2,
											"value": "1C2"
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1279,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1247,
											"end": 1532,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1247,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "2A3"
										},
										{
											"begin": 1247,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1247,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 1226,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1549,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1549,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1549,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 776,
											"end": 1039,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 776,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 873,
											"end": 880,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 917,
											"end": 922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 917,
											"end": 927,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 917,
											"end": 1022,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 944,
											"end": 945,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 935,
											"end": 945,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 935,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 935,
											"end": 1022,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 962,
											"end": 963,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 953,
											"end": 963,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 980,
											"end": 981,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 971,
											"end": 976,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 971,
											"end": 981,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 971,
											"end": 1022,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1022,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 971,
											"end": 1022,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 971,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 971,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 971,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 953,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 935,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 935,
											"end": 1022,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 935,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 935,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 950,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 935,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 935,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 917,
											"end": 1022,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 917,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 930,
											"end": 932,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 917,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 917,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 896,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 896,
											"end": 1032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 896,
											"end": 1032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 896,
											"end": 1032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 776,
											"end": 1039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 776,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 1039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 776,
											"end": 1039,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 341,
											"end": 348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 352,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 7,
											"end": 352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 85,
											"end": 90,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 168,
											"end": 174,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 101,
											"end": 176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 101,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 199,
											"end": 205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 192,
											"end": 197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 237,
											"end": 241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 226,
											"end": 242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 275,
											"end": 278,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 266,
											"end": 272,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 261,
											"end": 264,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 257,
											"end": 273,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 254,
											"end": 279,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 251,
											"end": 253,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 282,
											"end": 294,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 251,
											"end": 253,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 305,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 334,
											"end": 337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 329,
											"end": 332,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 305,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 91,
											"end": 352,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 91,
											"end": 352,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 91,
											"end": 352,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 497,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 358,
											"end": 497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 404,
											"end": 409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 448,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 429,
											"end": 449,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 420,
											"end": 449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 420,
											"end": 449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 485,
											"end": 490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 458,
											"end": 491,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 458,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 458,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 410,
											"end": 497,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 410,
											"end": 497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 410,
											"end": 497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 410,
											"end": 497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 410,
											"end": 497,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 517,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 517,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 573,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 625,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 619,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 603,
											"end": 620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 599,
											"end": 626,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 589,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 589,
											"end": 591,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 640,
											"end": 641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 638,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 630,
											"end": 642,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 589,
											"end": 591,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 589,
											"end": 591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 680,
											"end": 686,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 667,
											"end": 687,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 780,
											"end": 783,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 772,
											"end": 778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 765,
											"end": 769,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 763,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 753,
											"end": 770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 790,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 579,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 579,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 790,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 796,
											"end": 935,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 796,
											"end": 935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 842,
											"end": 847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 867,
											"end": 887,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 858,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 858,
											"end": 887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 896,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 896,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 896,
											"end": 929,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 896,
											"end": 929,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 896,
											"end": 929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 848,
											"end": 935,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 848,
											"end": 935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 848,
											"end": 935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 848,
											"end": 935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 848,
											"end": 935,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 941,
											"end": 2077,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 941,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1068,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1100,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1137,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1126,
											"end": 1149,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1155,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1121,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1119,
											"end": 1121,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1168,
											"end": 1169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1170,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1119,
											"end": 1121,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1119,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1281,
											"end": 1288,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1236,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1289,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1182,
											"end": 1299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1417,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1468,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1537,
											"end": 1544,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1513,
											"end": 1535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1482,
											"end": 1545,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1482,
											"end": 1545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1620,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1665,
											"end": 1672,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1641,
											"end": 1663,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1620,
											"end": 1673,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1673,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1620,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1673,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1565,
											"end": 1683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1725,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1794,
											"end": 1801,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1693,
											"end": 1812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1854,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1878,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1923,
											"end": 1930,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1878,
											"end": 1931,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 1931,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1878,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1868,
											"end": 1931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 1983,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 2007,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2007,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2007,
											"end": 2060,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2007,
											"end": 2060,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2007,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2060,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1951,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 2077,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2083,
											"end": 2603,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2083,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2220,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2206,
											"end": 2215,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2204,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2193,
											"end": 2216,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2221,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2236,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2308,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2353,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2354,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2369,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2450,
											"end": 2457,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2439,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2458,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2248,
											"end": 2468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2507,
											"end": 2509,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 2578,
											"end": 2585,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2558,
											"end": 2567,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2554,
											"end": 2576,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 2533,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2603,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2603,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2603,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2609,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 2609,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2738,
											"end": 2743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2712,
											"end": 2744,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2712,
											"end": 2744,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2712,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2700,
											"end": 2745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2751,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2757,
											"end": 2866,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2757,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2838,
											"end": 2859,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2838,
											"end": 2859,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2838,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2866,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2872,
											"end": 3033,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2872,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2974,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3020,
											"end": 3025,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2974,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2974,
											"end": 3026,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2974,
											"end": 3026,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2974,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 3027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 3033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 3033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 3033,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3206,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3039,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3193,
											"end": 3198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3144,
											"end": 3199,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3144,
											"end": 3199,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3144,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3206,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3212,
											"end": 3369,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3212,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3312,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3356,
											"end": 3361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3312,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3312,
											"end": 3362,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3312,
											"end": 3362,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3312,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3369,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3375,
											"end": 3741,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 3375,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 3597,
											"end": 3600,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3538,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3538,
											"end": 3605,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3605,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3538,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3531,
											"end": 3605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3531,
											"end": 3605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3614,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3703,
											"end": 3706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3614,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3614,
											"end": 3707,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3707,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3614,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3734,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3723,
											"end": 3735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3741,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 3865,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3747,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3834,
											"end": 3858,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3834,
											"end": 3858,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3834,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3865,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3871,
											"end": 4125,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3871,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4020,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4031,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4115,
											"end": 4116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4113,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4031,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4031,
											"end": 4118,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4031,
											"end": 4118,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4031,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4125,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4125,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4125,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4131,
											"end": 4341,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4131,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4258,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4245,
											"end": 4254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4269,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4329,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4313,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4269,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4269,
											"end": 4334,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4269,
											"end": 4334,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4269,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4341,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4341,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4347,
											"end": 4599,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4347,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4495,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4482,
											"end": 4491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4589,
											"end": 4590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4571,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4506,
											"end": 4592,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4506,
											"end": 4592,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4506,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4599,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4599,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4599,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4605,
											"end": 4863,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 4605,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4756,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4743,
											"end": 4752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4757,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4835,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4767,
											"end": 4856,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4767,
											"end": 4856,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4767,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4863,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4863,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4869,
											"end": 5117,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4869,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 4979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5016,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5026,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5107,
											"end": 5108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5105,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5083,
											"end": 5089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5026,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5026,
											"end": 5110,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5026,
											"end": 5110,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5026,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 5117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 5117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 5117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 5117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 5117,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5123,
											"end": 5542,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 5123,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5329,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5316,
											"end": 5325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5370,
											"end": 5374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5386,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5351,
											"end": 5360,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5404,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5530,
											"end": 5534,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5404,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 5404,
											"end": 5535,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5535,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5404,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5542,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5542,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5548,
											"end": 5770,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 5548,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5641,
											"end": 5645,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5681,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5760,
											"end": 5761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5758,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5762,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5742,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5692,
											"end": 5763,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5692,
											"end": 5763,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5692,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5770,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5770,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5770,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5776,
											"end": 5905,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 5776,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5827,
											"end": 5857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5827,
											"end": 5857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5866,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 5894,
											"end": 5898,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5886,
											"end": 5892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5866,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5866,
											"end": 5899,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5866,
											"end": 5899,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 5866,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5905,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5905,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5905,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5905,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5911,
											"end": 5986,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5911,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5979,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 5980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 5980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 5986,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5992,
											"end": 6300,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5992,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6054,
											"end": 6058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6136,
											"end": 6142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6163,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6204,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 6226,
											"end": 6232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6204,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 6204,
											"end": 6233,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6204,
											"end": 6233,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 6204,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6288,
											"end": 6292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6282,
											"end": 6286,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6270,
											"end": 6293,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6270,
											"end": 6293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6300,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6306,
											"end": 6475,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6306,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6390,
											"end": 6401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6430,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6419,
											"end": 6422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6431,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6455,
											"end": 6469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6440,
											"end": 6469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6440,
											"end": 6469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6475,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6475,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6475,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6481,
											"end": 6666,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 6481,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 6556,
											"end": 6557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6538,
											"end": 6558,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6538,
											"end": 6558,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 6538,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6533,
											"end": 6558,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6533,
											"end": 6558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6567,
											"end": 6592,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6567,
											"end": 6592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6611,
											"end": 6612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 6616,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 6616,
											"end": 6634,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6616,
											"end": 6634,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 6616,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6655,
											"end": 6656,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6666,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6672,
											"end": 7020,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 6672,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 6753,
											"end": 6754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6735,
											"end": 6755,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6735,
											"end": 6755,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 6735,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6730,
											"end": 6755,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6730,
											"end": 6755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6769,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 6787,
											"end": 6788,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6769,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6769,
											"end": 6789,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6769,
											"end": 6789,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 6769,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6764,
											"end": 6789,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6764,
											"end": 6789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 6958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 6955,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6885,
											"end": 6959,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6883,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6879,
											"end": 6960,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 6875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 6876,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6877,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6961,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7005,
											"end": 7014,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6994,
											"end": 7014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6994,
											"end": 7014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 7020,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 7020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 7020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 7020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 7020,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7026,
											"end": 7122,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 7026,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7063,
											"end": 7070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7092,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 7110,
											"end": 7115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7092,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7092,
											"end": 7116,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7092,
											"end": 7116,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 7092,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7071,
											"end": 7122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7071,
											"end": 7122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7071,
											"end": 7122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7071,
											"end": 7122,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7128,
											"end": 7232,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 7128,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7173,
											"end": 7180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 7220,
											"end": 7225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7202,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7202,
											"end": 7226,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7202,
											"end": 7226,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 7202,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7191,
											"end": 7226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7191,
											"end": 7226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7232,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7238,
											"end": 7328,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 7238,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7272,
											"end": 7279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7320,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7321,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7301,
											"end": 7322,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7290,
											"end": 7322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7290,
											"end": 7322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7328,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7334,
											"end": 7460,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7334,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7371,
											"end": 7378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7404,
											"end": 7409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7460,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7466,
											"end": 7543,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7466,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7537,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7543,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7549,
											"end": 7705,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 7549,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7614,
											"end": 7623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7647,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 7693,
											"end": 7698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 7647,
											"end": 7699,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7647,
											"end": 7699,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 7647,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7624,
											"end": 7705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7624,
											"end": 7705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7624,
											"end": 7705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7624,
											"end": 7705,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7711,
											"end": 7839,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 7711,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 7827,
											"end": 7832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7809,
											"end": 7833,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7809,
											"end": 7833,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 7809,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7796,
											"end": 7833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7796,
											"end": 7833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7839,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7845,
											"end": 8007,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 7845,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 7995,
											"end": 8000,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7946,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7946,
											"end": 8001,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7946,
											"end": 8001,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 7946,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7933,
											"end": 8001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7933,
											"end": 8001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7923,
											"end": 8007,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7923,
											"end": 8007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7923,
											"end": 8007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7923,
											"end": 8007,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8013,
											"end": 8144,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 8013,
											"end": 8144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8081,
											"end": 8090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 8132,
											"end": 8137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8114,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 8114,
											"end": 8138,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8114,
											"end": 8138,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 8114,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8101,
											"end": 8138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8101,
											"end": 8138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8091,
											"end": 8144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8091,
											"end": 8144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8091,
											"end": 8144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8091,
											"end": 8144,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8150,
											"end": 8302,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 8150,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 8290,
											"end": 8295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8246,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 8246,
											"end": 8296,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8246,
											"end": 8296,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 8246,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8233,
											"end": 8296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8233,
											"end": 8296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8302,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8302,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8302,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8308,
											"end": 8434,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 8308,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8404,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8422,
											"end": 8427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8404,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 8404,
											"end": 8428,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8404,
											"end": 8428,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8404,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8428,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8434,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8434,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8440,
											"end": 8594,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 8440,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8514,
											"end": 8517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8531,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 8586,
											"end": 8587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8577,
											"end": 8583,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8572,
											"end": 8575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8568,
											"end": 8584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 8588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8594,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8600,
											"end": 8881,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 8600,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 8705,
											"end": 8709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 8683,
											"end": 8710,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8683,
											"end": 8710,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 8683,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8681,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 8711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8813,
											"end": 8819,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8801,
											"end": 8811,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8798,
											"end": 8820,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8765,
											"end": 8775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8762,
											"end": 8796,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8759,
											"end": 8821,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8756,
											"end": 8758,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8756,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 8756,
											"end": 8758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8756,
											"end": 8758,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 8756,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8874,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8860,
											"end": 8862,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8853,
											"end": 8875,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8881,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8887,
											"end": 9067,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 8887,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8935,
											"end": 9012,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8932,
											"end": 8933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8925,
											"end": 9013,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9032,
											"end": 9036,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9029,
											"end": 9030,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9022,
											"end": 9037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9060,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9053,
											"end": 9054,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9061,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9253,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 9073,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9198,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9118,
											"end": 9119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9111,
											"end": 9199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9218,
											"end": 9222,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 9215,
											"end": 9216,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9208,
											"end": 9223,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9242,
											"end": 9246,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9239,
											"end": 9240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9247,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9259,
											"end": 9439,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 9259,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9307,
											"end": 9384,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9304,
											"end": 9305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9408,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 9401,
											"end": 9402,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9394,
											"end": 9409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9428,
											"end": 9432,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9425,
											"end": 9426,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9418,
											"end": 9433,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9445,
											"end": 9547,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 9445,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9539,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9533,
											"end": 9540,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9528,
											"end": 9530,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9521,
											"end": 9526,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9517,
											"end": 9531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9513,
											"end": 9541,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9503,
											"end": 9541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9503,
											"end": 9541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9493,
											"end": 9547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9493,
											"end": 9547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9493,
											"end": 9547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9493,
											"end": 9547,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9553,
											"end": 9729,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 9553,
											"end": 9729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9693,
											"end": 9721,
											"name": "PUSH",
											"source": 10,
											"value": "4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000"
										},
										{
											"begin": 9689,
											"end": 9690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9691,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9670,
											"end": 9722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9659,
											"end": 9729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9659,
											"end": 9729,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9735,
											"end": 9857,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 9735,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9826,
											"end": 9831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 9808,
											"end": 9832,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9808,
											"end": 9832,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9808,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9806,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9798,
											"end": 9833,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9788,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 9788,
											"end": 9790,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9845,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9837,
											"end": 9849,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9788,
											"end": 9790,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 9788,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9857,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9863,
											"end": 9985,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 9863,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 9954,
											"end": 9959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 9936,
											"end": 9960,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9936,
											"end": 9960,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 9936,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 9934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9926,
											"end": 9961,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9916,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 9916,
											"end": 9918,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 9977,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9916,
											"end": 9918,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 9916,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9985,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"calculateTokenAmount(string,uint256)": "aa93c0ee",
							"changeMiningPaused()": "ee72b8cc",
							"changePaused()": "9eb4eae5",
							"getHeroNFT()": "7cac00ee",
							"getItem()": "c412eaba",
							"getMiningPaused()": "28919df6",
							"getOwner()": "893d20e8",
							"getPaused()": "6805b84b",
							"getToken()": "21df0da7",
							"initialize(address,address,address,address,address,uint256,uint256)": "b33f9527",
							"priceOfKlay()": "3a1a8080",
							"priceOfToken()": "1b9cbdfb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changeMiningPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changePaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHeroNFT\",\"outputs\":[{\"internalType\":\"contract IHeroNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getItem\",\"outputs\":[{\"internalType\":\"contract IKIP37Full\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMiningPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IKIP7\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heroNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_miningAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_klay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfKlay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/utils/LevelDiagram.sol\":\"LevelDiagram\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/IHeroNFT.sol\":{\"keccak256\":\"0x28719918b6bcd5da2fc05c963dd0c407c3d256a41ba787fd7dd05cfb8e0eefbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922cc5d0a7c86837ac8697ee76295642fb8ca35453f7e2b20392dc4d3403e651\",\"dweb:/ipfs/QmPYwhoSmrcTJDR8HgQKH4nTfauncjRUMBDWJTAY99ygX5\"]},\"Hero/utils/HeroController.sol\":{\"keccak256\":\"0xd82c174f7827d6c2ab52e655bd74c48e0da4b00ff3b5d25db7ccbbc016bae313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73539f93aa11a05c7a96f38d9a44b047f32332fba9e53db725c6134bf72f0d3b\",\"dweb:/ipfs/QmYXaRVd6FPLY22UfTDXbxzAyNcaas2YncmSBNiZZoardu\"]},\"Hero/utils/LevelDiagram.sol\":{\"keccak256\":\"0x5f4fb6b37ddc71e52c10b2a475f867a2bed9db24c59117fe6b93567cd8bd56bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d73784c746e63b6ee81105fd0ee6e7d0f5b84285629501cc548a4e0982e795ae\",\"dweb:/ipfs/QmdRNdoJQWKnrZLB53aYFf4WfT1nW4gaWxZEKTEezqNjz2\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]},\"interface/IKIP7/IKIP7.sol\":{\"keccak256\":\"0x5682f350cd2e8a78fc918639e421e7e81ca17576106687049595d84ca248346e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537a3ac6311e841c1fdb2b8b9270219bf6e7b2c91271f361c189dc90159a4bff\",\"dweb:/ipfs/QmRa5jJs3S3WjPPL4mWpXE2eGEk97gYR2S8yoDxtU8Tm68\"]},\"utils/SafeMath.sol\":{\"keccak256\":\"0x884e0eaf6a4a9779317975ad010c62f3a4bd66ed64334977bc7afba8d97fab58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61f2e9002f930fb312e3e6fe19753b1dedb5980b1baaef8914b794ba2a3106e\",\"dweb:/ipfs/QmYKxUyMMoak1sEdyQvq6hcEdsKtiAUunj1f51LBM6M8fm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 41,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "heroNFT",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IHeroNFT)30"
							},
							{
								"astId": 44,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IKIP7)983"
							},
							{
								"astId": 47,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "item",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IKIP37Full)852"
							},
							{
								"astId": 49,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "coreOwner",
								"offset": 0,
								"slot": "3",
								"type": "t_address_payable"
							},
							{
								"astId": 51,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "depositAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 53,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "miningAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 55,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 57,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "miningPaused",
								"offset": 21,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 59,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "priceOfKlay",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 61,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "priceOfToken",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IHeroNFT)30": {
								"encoding": "inplace",
								"label": "contract IHeroNFT",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP37Full)852": {
								"encoding": "inplace",
								"label": "contract IKIP37Full",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP7)983": {
								"encoding": "inplace",
								"label": "contract IKIP7",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP13.sol": {
				"IKIP13": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP13.sol\":\"IKIP13\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP17/IKIP17.sol": {
				"IKIP17": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP17/IKIP17.sol\":\"IKIP17\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37.sol": {
				"IKIP37": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37.sol\":\"IKIP37\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"IKIP37Full": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37Full.sol\":\"IKIP37Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"IKIP37MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37MetadataURI.sol\":\"IKIP37MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP7/IKIP7.sol": {
				"IKIP7": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"safeTransfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event."
							},
							"safeTransfer(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"safeTransfer(address,uint256)": "423f6cef",
							"safeTransfer(address,uint256,bytes)": "eb795549",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"safeTransfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event.\"},\"safeTransfer(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP7/IKIP7.sol\":\"IKIP7\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP7/IKIP7.sol\":{\"keccak256\":\"0x5682f350cd2e8a78fc918639e421e7e81ca17576106687049595d84ca248346e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537a3ac6311e841c1fdb2b8b9270219bf6e7b2c91271f361c189dc90159a4bff\",\"dweb:/ipfs/QmRa5jJs3S3WjPPL4mWpXE2eGEk97gYR2S8yoDxtU8Tm68\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/SafeMath.sol\":56:1294  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"utils/SafeMath.sol\":56:1294  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 ISZERO 0xC8 PUSH3 0xCEEC4D 0xAE 0xB0 0xFB ISZERO POP 0x2F SWAP8 0xB9 0x1F 0xD6 PUSH19 0xD2F6D61E11AB05EAD2217EE9910764736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:1238:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 ISZERO 0xC8 PUSH3 0xCEEC4D 0xAE 0xB0 0xFB ISZERO POP 0x2F SWAP8 0xB9 0x1F 0xD6 PUSH19 0xD2F6D61E11AB05EAD2217EE9910764736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:1238:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
									".code": [
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"utils/SafeMath.sol\":{\"keccak256\":\"0x884e0eaf6a4a9779317975ad010c62f3a4bd66ed64334977bc7afba8d97fab58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61f2e9002f930fb312e3e6fe19753b1dedb5980b1baaef8914b794ba2a3106e\",\"dweb:/ipfs/QmYKxUyMMoak1sEdyQvq6hcEdsKtiAUunj1f51LBM6M8fm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Hero/interface/IHeroNFT.sol": {
				"ast": {
					"absolutePath": "Hero/interface/IHeroNFT.sol",
					"exportedSymbols": {
						"IHeroNFT": [
							30
						],
						"IKIP13": [
							594
						],
						"IKIP17": [
							710
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"absolutePath": "interface/IKIP17/IKIP17.sol",
							"file": "../../interface/IKIP17/IKIP17.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 31,
							"sourceUnit": 711,
							"src": "56:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IKIP17",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 710,
										"src": "123:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "123:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 30,
							"linearizedBaseContracts": [
								30,
								710,
								594
							],
							"name": "IHeroNFT",
							"nameLocation": "111:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6a627842",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "145:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "158:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "150:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:13:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:0:0"
									},
									"scope": 30,
									"src": "136:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "187:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "200:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "192:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:18:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:0"
									},
									"scope": 30,
									"src": "178:41:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "75f890ab",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setContract",
									"nameLocation": "234:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_heroCore",
												"nameLocation": "254:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "246:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:19:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:0:0"
									},
									"scope": 30,
									"src": "225:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bcbb72c8",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHeroCore",
									"nameLocation": "289:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "326:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:9:0"
									},
									"scope": 30,
									"src": "280:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "295d3ee8",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenIndex",
									"nameLocation": "350:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "389:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:9:0"
									},
									"scope": 30,
									"src": "341:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "101:299:0",
							"usedErrors": []
						}
					],
					"src": "32:369:0"
				},
				"id": 0
			},
			"Hero/utils/HeroController.sol": {
				"ast": {
					"absolutePath": "Hero/utils/HeroController.sol",
					"exportedSymbols": {
						"HeroController": [
							249
						],
						"IHeroNFT": [
							30
						],
						"IKIP13": [
							594
						],
						"IKIP17": [
							710
						],
						"IKIP37": [
							828
						],
						"IKIP37Full": [
							852
						],
						"IKIP37MetadataURI": [
							865
						],
						"IKIP7": [
							983
						],
						"SafeMath": [
							1128
						]
					},
					"id": 250,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"absolutePath": "utils/SafeMath.sol",
							"file": "../../utils/SafeMath.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 250,
							"sourceUnit": 1129,
							"src": "56:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Hero/interface/IHeroNFT.sol",
							"file": "../interface/IHeroNFT.sol",
							"id": 34,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 250,
							"sourceUnit": 31,
							"src": "92:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IKIP7/IKIP7.sol",
							"file": "../../interface/IKIP7/IKIP7.sol",
							"id": 35,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 250,
							"sourceUnit": 984,
							"src": "129:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37Full.sol",
							"file": "../../interface/IKIP37/IKIP37Full.sol",
							"id": 36,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 250,
							"sourceUnit": 853,
							"src": "171:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 249,
							"linearizedBaseContracts": [
								249
							],
							"name": "HeroController",
							"nameLocation": "229:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 38,
									"libraryName": {
										"id": 37,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1128,
										"src": "256:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "250:21:1"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "heroNFT",
									"nameLocation": "294:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "277:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IHeroNFT_$30",
										"typeString": "contract IHeroNFT"
									},
									"typeName": {
										"id": 40,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 39,
											"name": "IHeroNFT",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 30,
											"src": "277:8:1"
										},
										"referencedDeclaration": 30,
										"src": "277:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IHeroNFT_$30",
											"typeString": "contract IHeroNFT"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "321:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "307:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP7_$983",
										"typeString": "contract IKIP7"
									},
									"typeName": {
										"id": 43,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 42,
											"name": "IKIP7",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 983,
											"src": "307:5:1"
										},
										"referencedDeclaration": 983,
										"src": "307:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP7_$983",
											"typeString": "contract IKIP7"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "item",
									"nameLocation": "351:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "332:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP37Full_$852",
										"typeString": "contract IKIP37Full"
									},
									"typeName": {
										"id": 46,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 45,
											"name": "IKIP37Full",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 852,
											"src": "332:10:1"
										},
										"referencedDeclaration": 852,
										"src": "332:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP37Full_$852",
											"typeString": "contract IKIP37Full"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "coreOwner",
									"nameLocation": "386:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "362:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 48,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "362:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "depositAddress",
									"nameLocation": "409:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "401:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 50,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "401:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "miningAddress",
									"nameLocation": "437:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "429:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 52,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "429:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 55,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "470:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "457:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 54,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "457:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 57,
									"mutability": "mutable",
									"name": "miningPaused",
									"nameLocation": "495:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "482:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 56,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "482:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3a1a8080",
									"id": 59,
									"mutability": "mutable",
									"name": "priceOfKlay",
									"nameLocation": "529:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "514:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 58,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "514:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b9cbdfb",
									"id": 61,
									"mutability": "mutable",
									"name": "priceOfToken",
									"nameLocation": "561:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "546:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "546:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 64,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "604:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 249,
									"src": "579:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 62,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "579:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "615:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "647:60:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "665:7:1",
															"subExpression": {
																"id": 67,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "666:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506175736564205374617465",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "674:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e92cd5d6dee16db56ebcf69b310fcfe1ea5001963f42c77d6d92785a76241b",
																"typeString": "literal_string \"Paused State\""
															},
															"value": "Paused State"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e92cd5d6dee16db56ebcf69b310fcfe1ea5001963f42c77d6d92785a76241b",
																"typeString": "literal_string \"Paused State\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "657:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "657:32:1"
											},
											{
												"id": 72,
												"nodeType": "PlaceholderStatement",
												"src": "699:1:1"
											}
										]
									},
									"id": 74,
									"name": "notPaused",
									"nameLocation": "635:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "644:2:1"
									},
									"src": "626:81:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "734:90:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 77,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "752:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "752:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 79,
																"name": "coreOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "766:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "752:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865726f436f7265204572726f72203a206f6e6c794f776e6572",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "777:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																"typeString": "literal_string \"HeroCore Error : onlyOwner\""
															},
															"value": "HeroCore Error : onlyOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																"typeString": "literal_string \"HeroCore Error : onlyOwner\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "744:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "744:62:1"
											},
											{
												"id": 84,
												"nodeType": "PlaceholderStatement",
												"src": "816:1:1"
											}
										]
									},
									"id": 86,
									"name": "onlyOwner",
									"nameLocation": "722:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "731:2:1"
									},
									"src": "713:111:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "844:100:1",
										"statements": [
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "854:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "863:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "854:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "854:13:1"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "miningPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "877:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "892:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "877:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "877:19:1"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 97,
														"name": "coreOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "906:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 100,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "926:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "926:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "918:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 98,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "918:8:1",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "918:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "906:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "906:31:1"
											}
										]
									},
									"id": 106,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:0:1"
									},
									"scope": 249,
									"src": "830:114:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1185:287:1",
										"statements": [
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "priceOfKlay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1195:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 128,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1219:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 126,
																"name": "_klay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1209:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1027,
															"src": "1209:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1209:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1195:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1195:33:1"
											},
											{
												"expression": {
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 132,
														"name": "priceOfToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1238:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 135,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1269:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 133,
																"name": "_tokenPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1253:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1027,
															"src": "1253:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1253:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1238:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1238:40:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "heroNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1289:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHeroNFT_$30",
															"typeString": "contract IHeroNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 141,
																"name": "_heroNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "1308:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 140,
															"name": "IHeroNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1299:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IHeroNFT_$30_$",
																"typeString": "type(contract IHeroNFT)"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1299:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHeroNFT_$30",
															"typeString": "contract IHeroNFT"
														}
													},
													"src": "1289:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1289:28:1"
											},
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 145,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1327:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP7_$983",
															"typeString": "contract IKIP7"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 147,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1341:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 146,
															"name": "IKIP7",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "1335:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP7_$983_$",
																"typeString": "type(contract IKIP7)"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1335:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP7_$983",
															"typeString": "contract IKIP7"
														}
													},
													"src": "1327:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$983",
														"typeString": "contract IKIP7"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1327:21:1"
											},
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 151,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1358:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$852",
															"typeString": "contract IKIP37Full"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 153,
																"name": "_item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "1376:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 152,
															"name": "IKIP37Full",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "1365:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP37Full_$852_$",
																"typeString": "type(contract IKIP37Full)"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1365:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$852",
															"typeString": "contract IKIP37Full"
														}
													},
													"src": "1358:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$852",
														"typeString": "contract IKIP37Full"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1358:24:1"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "depositAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1393:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "_depositAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1410:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1393:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1393:32:1"
											},
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "miningAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1435:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_miningAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1451:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1435:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1435:30:1"
											}
										]
									},
									"functionSelector": "b33f9527",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 123,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 122,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "1175:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1175:9:1"
										}
									],
									"name": "initialize",
									"nameLocation": "959:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_heroNFT",
												"nameLocation": "987:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "979:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1013:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1005:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "_item",
												"nameLocation": "1037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "_depositAddress",
												"nameLocation": "1060:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1052:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "_miningAddress",
												"nameLocation": "1093:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1085:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "_klay",
												"nameLocation": "1125:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1117:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "1148:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1140:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:196:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1185:0:1"
									},
									"scope": 249,
									"src": "950:522:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1521:33:1",
										"statements": [
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 171,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1531:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1540:7:1",
														"subExpression": {
															"id": 172,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1541:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1531:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1531:16:1"
											}
										]
									},
									"functionSelector": "9eb4eae5",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 169,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 168,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "1511:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1511:9:1"
										}
									],
									"name": "changePaused",
									"nameLocation": "1487:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1499:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1521:0:1"
									},
									"scope": 249,
									"src": "1478:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1609:45:1",
										"statements": [
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "miningPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1619:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1634:13:1",
														"subExpression": {
															"id": 183,
															"name": "miningPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1635:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1619:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1619:28:1"
											}
										]
									},
									"functionSelector": "ee72b8cc",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 179,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "1599:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1599:9:1"
										}
									],
									"name": "changeMiningPaused",
									"nameLocation": "1569:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:2:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1609:0:1"
									},
									"scope": 249,
									"src": "1560:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "1750:33:1",
										"statements": [
											{
												"expression": {
													"id": 193,
													"name": "coreOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "1767:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 192,
												"id": 194,
												"nodeType": "Return",
												"src": "1760:16:1"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1701:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1733:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1733:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:17:1"
									},
									"scope": 249,
									"src": "1692:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1837:30:1",
										"statements": [
											{
												"expression": {
													"id": 201,
													"name": "paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 55,
													"src": "1854:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 200,
												"id": 202,
												"nodeType": "Return",
												"src": "1847:13:1"
											}
										]
									},
									"functionSelector": "6805b84b",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPaused",
									"nameLocation": "1798:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1807:2:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1831:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1831:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1830:6:1"
									},
									"scope": 249,
									"src": "1789:78:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1927:36:1",
										"statements": [
											{
												"expression": {
													"id": 209,
													"name": "miningPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "1944:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 208,
												"id": 210,
												"nodeType": "Return",
												"src": "1937:19:1"
											}
										]
									},
									"functionSelector": "28919df6",
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMiningPaused",
									"nameLocation": "1882:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1921:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1921:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:6:1"
									},
									"scope": 249,
									"src": "1873:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2021:28:1",
										"statements": [
											{
												"expression": {
													"id": 218,
													"name": "item",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "2038:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$852",
														"typeString": "contract IKIP37Full"
													}
												},
												"functionReturnParameters": 217,
												"id": 219,
												"nodeType": "Return",
												"src": "2031:11:1"
											}
										]
									},
									"functionSelector": "c412eaba",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getItem",
									"nameLocation": "1978:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1985:2:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2009:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKIP37Full_$852",
													"typeString": "contract IKIP37Full"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IKIP37Full",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 852,
														"src": "2009:10:1"
													},
													"referencedDeclaration": 852,
													"src": "2009:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$852",
														"typeString": "contract IKIP37Full"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:12:1"
									},
									"scope": 249,
									"src": "1969:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2103:29:1",
										"statements": [
											{
												"expression": {
													"id": 227,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "2120:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$983",
														"typeString": "contract IKIP7"
													}
												},
												"functionReturnParameters": 226,
												"id": 228,
												"nodeType": "Return",
												"src": "2113:12:1"
											}
										]
									},
									"functionSelector": "21df0da7",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nameLocation": "2064:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:2:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2096:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKIP7_$983",
													"typeString": "contract IKIP7"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IKIP7",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 983,
														"src": "2096:5:1"
													},
													"referencedDeclaration": 983,
													"src": "2096:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$983",
														"typeString": "contract IKIP7"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:7:1"
									},
									"scope": 249,
									"src": "2055:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2191:31:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "heroNFT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "2208:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "2201:14:1"
											}
										]
									},
									"functionSelector": "7cac00ee",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHeroNFT",
									"nameLocation": "2147:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2157:2:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2181:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IHeroNFT_$30",
													"typeString": "contract IHeroNFT"
												},
												"typeName": {
													"id": 233,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 232,
														"name": "IHeroNFT",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "2181:8:1"
													},
													"referencedDeclaration": 30,
													"src": "2181:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2180:10:1"
									},
									"scope": 249,
									"src": "2138:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "2284:39:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 244,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2301:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2301:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 243,
												"id": 246,
												"nodeType": "Return",
												"src": "2294:22:1"
											}
										]
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_currentTime",
									"nameLocation": "2237:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:2:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:9:1"
									},
									"scope": 249,
									"src": "2228:95:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 250,
							"src": "220:2105:1",
							"usedErrors": []
						}
					],
					"src": "32:2294:1"
				},
				"id": 1
			},
			"Hero/utils/LevelDiagram.sol": {
				"ast": {
					"absolutePath": "Hero/utils/LevelDiagram.sol",
					"exportedSymbols": {
						"HeroController": [
							249
						],
						"IHeroNFT": [
							30
						],
						"IKIP13": [
							594
						],
						"IKIP17": [
							710
						],
						"IKIP37": [
							828
						],
						"IKIP37Full": [
							852
						],
						"IKIP37MetadataURI": [
							865
						],
						"IKIP7": [
							983
						],
						"LevelDiagram": [
							582
						],
						"SafeMath": [
							1128
						]
					},
					"id": 583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 251,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"absolutePath": "Hero/utils/HeroController.sol",
							"file": "./HeroController.sol",
							"id": 252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 583,
							"sourceUnit": 250,
							"src": "56:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 253,
										"name": "HeroController",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 249,
										"src": "113:14:2"
									},
									"id": 254,
									"nodeType": "InheritanceSpecifier",
									"src": "113:14:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 582,
							"linearizedBaseContracts": [
								582,
								249
							],
							"name": "LevelDiagram",
							"nameLocation": "97:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 259,
									"mutability": "constant",
									"name": "MYTHOLOGY",
									"nameLocation": "159:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 582,
									"src": "134:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 255,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "134:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d7974686f6c6f6779",
												"id": 257,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "181:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f3",
													"typeString": "literal_string \"Mythology\""
												},
												"value": "Mythology"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f3",
													"typeString": "literal_string \"Mythology\""
												}
											],
											"id": 256,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "171:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 258,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "171:22:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 264,
									"mutability": "constant",
									"name": "LEGENDARY",
									"nameLocation": "224:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 582,
									"src": "199:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 260,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "199:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4c6567656e64617279",
												"id": 262,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "246:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310",
													"typeString": "literal_string \"Legendary\""
												},
												"value": "Legendary"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310",
													"typeString": "literal_string \"Legendary\""
												}
											],
											"id": 261,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "236:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "236:22:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 269,
									"mutability": "constant",
									"name": "EPIC",
									"nameLocation": "289:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 582,
									"src": "264:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 265,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "264:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "45706963",
												"id": 267,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "306:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17",
													"typeString": "literal_string \"Epic\""
												},
												"value": "Epic"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17",
													"typeString": "literal_string \"Epic\""
												}
											],
											"id": 266,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "296:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 268,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "296:17:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 274,
									"mutability": "constant",
									"name": "ADMINISTRATOR",
									"nameLocation": "344:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 582,
									"src": "319:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 270,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41646d696e6973747261746f72",
												"id": 272,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "370:15:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb",
													"typeString": "literal_string \"Administrator\""
												},
												"value": "Administrator"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb",
													"typeString": "literal_string \"Administrator\""
												}
											],
											"id": 271,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "360:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 273,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "360:26:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 279,
									"mutability": "constant",
									"name": "NORMAL",
									"nameLocation": "417:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 582,
									"src": "392:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 275,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4e6f726d616c",
												"id": 277,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "436:8:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd",
													"typeString": "literal_string \"Normal\""
												},
												"value": "Normal"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd",
													"typeString": "literal_string \"Normal\""
												}
											],
											"id": 276,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "426:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 278,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "426:19:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "576:194:2",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "gradeAmount",
														"nameLocation": "594:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "586:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "586:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 293,
												"initialValue": {
													"arguments": [
														{
															"id": 291,
															"name": "grade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 290,
														"name": "calculateBasicGradeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "608:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) pure returns (uint256)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "608:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "586:54:2"
											},
											{
												"assignments": [
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "levelAmount",
														"nameLocation": "658:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "650:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 294,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"arguments": [
														{
															"id": 297,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "698:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "calculateBasicLevelAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "672:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "650:54:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 300,
																				"name": "gradeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 289,
																				"src": "724:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 301,
																				"name": "levelAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 295,
																				"src": "738:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "724:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 303,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "723:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "753:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "723:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 306,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "722:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "759:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "722:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 287,
												"id": 309,
												"nodeType": "Return",
												"src": "715:48:2"
											}
										]
									},
									"functionSelector": "aa93c0ee",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "461:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "496:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "482:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "482:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "511:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "503:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:36:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "563:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:9:2"
									},
									"scope": 582,
									"src": "452:318:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "886:153:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 318,
																	"name": "level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "917:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "926:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "917:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "935:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "944:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "935:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 326,
																			"name": "level",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "953:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "962:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "953:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 330,
																				"name": "level",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 313,
																				"src": "971:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "980:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "971:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1021:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "971:51:2",
																		"trueExpression": {
																			"hexValue": "3830",
																			"id": 333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1000:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_80_by_1",
																				"typeString": "int_const 80"
																			},
																			"value": "80"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "953:69:2",
																	"trueExpression": {
																		"hexValue": "3432",
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "966:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_42_by_1",
																			"typeString": "int_const 42"
																		},
																		"value": "42"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "935:87:2",
																"trueExpression": {
																	"hexValue": "3232",
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "948:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_22_by_1",
																		"typeString": "int_const 22"
																	},
																	"value": "22"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "917:105:2",
															"trueExpression": {
																"hexValue": "3135",
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "930:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 339,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "903:129:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 317,
												"id": 340,
												"nodeType": "Return",
												"src": "896:136:2"
											}
										]
									},
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicLevelAmount",
									"nameLocation": "785:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "811:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:15:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "873:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:9:2"
									},
									"scope": 582,
									"src": "776:263:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1161:388:2",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "gradeCheck",
														"nameLocation": "1179:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "1171:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 349,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1171:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 354,
																	"name": "grade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "1208:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1202:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 352,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1202:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1202:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 351,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1192:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1192:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1171:44:2"
											},
											{
												"expression": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 358,
																	"name": "gradeCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1247:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 359,
																	"name": "MYTHOLOGY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "1261:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1247:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 362,
																		"name": "gradeCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "1279:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 363,
																		"name": "LEGENDARY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "1293:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "1279:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 366,
																			"name": "gradeCheck",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 350,
																			"src": "1343:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 367,
																			"name": "EPIC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "1357:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "1343:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 370,
																				"name": "gradeCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 350,
																				"src": "1402:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 371,
																				"name": "ADMINISTRATOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 274,
																				"src": "1416:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "1402:27:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"id": 376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 374,
																					"name": "gradeCheck",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 350,
																					"src": "1470:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 375,
																					"name": "NORMAL",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 279,
																					"src": "1484:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"src": "1470:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1531:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "1470:62:2",
																			"trueExpression": {
																				"hexValue": "323030",
																				"id": 377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1509:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_200_by_1",
																					"typeString": "int_const 200"
																				},
																				"value": "200"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "1402:130:2",
																		"trueExpression": {
																			"hexValue": "323235",
																			"id": 373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1448:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225_by_1",
																				"typeString": "int_const 225"
																			},
																			"value": "225"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1343:189:2",
																	"trueExpression": {
																		"hexValue": "333030",
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1380:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		},
																		"value": "300"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1279:253:2",
																"trueExpression": {
																	"hexValue": "343530",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1321:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	},
																	"value": "450"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1247:285:2",
															"trueExpression": {
																"hexValue": "363735",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1273:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_675_by_1",
																	"typeString": "int_const 675"
																},
																"value": "675"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"id": 384,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1233:309:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 348,
												"id": 385,
												"nodeType": "Return",
												"src": "1226:316:2"
											}
										]
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicGradeAmount",
									"nameLocation": "1054:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "1094:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1080:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1080:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:21:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1148:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:9:2"
									},
									"scope": 582,
									"src": "1045:504:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1659:286:2",
										"statements": [
											{
												"body": {
													"id": 422,
													"nodeType": "Block",
													"src": "1702:218:2",
													"statements": [
														{
															"assignments": [
																405
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 405,
																	"mutability": "mutable",
																	"name": "randomNumber",
																	"nameLocation": "1724:12:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 422,
																	"src": "1716:20:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1716:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 409,
															"initialValue": {
																"arguments": [
																	{
																		"id": 407,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "1763:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 406,
																	"name": "makeRandomNumberForItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "1739:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1739:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1716:49:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 410,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "1784:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 411,
																	"name": "randomNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "1794:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 420,
																"nodeType": "Block",
																"src": "1869:41:2",
																"statements": [
																	{
																		"expression": {
																			"id": 418,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "1894:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 393,
																		"id": 419,
																		"nodeType": "Return",
																		"src": "1887:8:2"
																	}
																]
															},
															"id": 421,
															"nodeType": "IfStatement",
															"src": "1780:130:2",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "1808:55:2",
																"statements": [
																	{
																		"expression": {
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 413,
																				"name": "_power",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "1826:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 414,
																				"name": "randomNumber",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "1836:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1826:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 416,
																		"nodeType": "ExpressionStatement",
																		"src": "1826:22:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 398,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "1689:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "35",
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1694:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1689:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"initializationExpression": {
													"assignments": [
														395
													],
													"declarations": [
														{
															"constant": false,
															"id": 395,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1682:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 423,
															"src": "1674:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 394,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1674:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 397,
													"initialValue": {
														"hexValue": "31",
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1686:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1674:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1697:3:2",
														"subExpression": {
															"id": 401,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "1697:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 403,
													"nodeType": "ExpressionStatement",
													"src": "1697:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1669:251:2"
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1937:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 393,
												"id": 425,
												"nodeType": "Return",
												"src": "1930:8:2"
											}
										]
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateItemIndex",
									"nameLocation": "1564:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "1591:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1583:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:16:2"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1646:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1645:9:2"
									},
									"scope": 582,
									"src": "1555:390:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "2071:939:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "gradeCheck",
														"nameLocation": "2089:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "2081:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 436,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2081:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 441,
																	"name": "grade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "2118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2112:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 439,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2112:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2112:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2102:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2081:44:2"
											},
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "basicPower",
														"nameLocation": "2144:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "2136:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2136:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 447,
																	"name": "gradeCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "2171:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 448,
																	"name": "MYTHOLOGY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "2185:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2171:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 451,
																		"name": "gradeCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "2203:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 452,
																		"name": "LEGENDARY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "2217:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "2203:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 455,
																			"name": "gradeCheck",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "2267:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 456,
																			"name": "EPIC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "2281:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "2267:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 459,
																				"name": "gradeCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "2326:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 460,
																				"name": "ADMINISTRATOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 274,
																				"src": "2340:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2326:27:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 463,
																					"name": "gradeCheck",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "2394:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 464,
																					"name": "NORMAL",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 279,
																					"src": "2408:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"src": "2394:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2455:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "2394:62:2",
																			"trueExpression": {
																				"hexValue": "313030",
																				"id": 466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2433:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "2326:130:2",
																		"trueExpression": {
																			"hexValue": "313530",
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2372:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_150_by_1",
																				"typeString": "int_const 150"
																			},
																			"value": "150"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "2267:189:2",
																	"trueExpression": {
																		"hexValue": "323030",
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2304:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "2203:253:2",
																"trueExpression": {
																	"hexValue": "333030",
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2245:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"value": "300"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2171:285:2",
															"trueExpression": {
																"hexValue": "343530",
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2197:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_450_by_1",
																	"typeString": "int_const 450"
																},
																"value": "450"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"id": 473,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2157:309:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2136:330:2"
											},
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "levelCheck",
														"nameLocation": "2485:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "2477:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2477:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 477,
																	"name": "level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "2512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2521:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2512:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 481,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "2530:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2539:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2530:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 485,
																			"name": "level",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "2548:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2557:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "2548:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 489,
																				"name": "level",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "2566:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2575:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "2566:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 493,
																					"name": "level",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 431,
																					"src": "2616:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 494,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2625:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "2616:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2666:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "2616:51:2",
																			"trueExpression": {
																				"hexValue": "3730",
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2645:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_70_by_1",
																					"typeString": "int_const 70"
																				},
																				"value": "70"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "2566:101:2",
																		"trueExpression": {
																			"hexValue": "3430",
																			"id": 492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2595:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_40_by_1",
																				"typeString": "int_const 40"
																			},
																			"value": "40"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "2548:119:2",
																	"trueExpression": {
																		"hexValue": "3235",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2561:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_25_by_1",
																			"typeString": "int_const 25"
																		},
																		"value": "25"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "2530:137:2",
																"trueExpression": {
																	"hexValue": "3135",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2543:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "15"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2512:155:2",
															"trueExpression": {
																"hexValue": "3130",
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 503,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2498:179:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2477:200:2"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "itemPower",
														"nameLocation": "2696:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "2688:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2688:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 508,
												"initialValue": {
													"hexValue": "30",
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2708:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2688:21:2"
											},
											{
												"body": {
													"id": 544,
													"nodeType": "Block",
													"src": "2753:189:2",
													"statements": [
														{
															"assignments": [
																520
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 520,
																	"mutability": "mutable",
																	"name": "balanceOf",
																	"nameLocation": "2775:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 544,
																	"src": "2767:17:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 519,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2767:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 528,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 524,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2807:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2807:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 526,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "2819:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 521,
																			"name": "getItem",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "2787:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IKIP37Full_$852_$",
																				"typeString": "function () view returns (contract IKIP37Full)"
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2787:9:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IKIP37Full_$852",
																			"typeString": "contract IKIP37Full"
																		}
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 792,
																	"src": "2787:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view external returns (uint256)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2787:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2767:54:2"
														},
														{
															"assignments": [
																530
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 530,
																	"mutability": "mutable",
																	"name": "basicItemPower",
																	"nameLocation": "2843:14:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 544,
																	"src": "2835:22:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 529,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2835:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 534,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 531,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "2860:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2864:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2860:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2835:30:2"
														},
														{
															"expression": {
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 535,
																	"name": "itemPower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "2879:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 536,
																		"name": "itemPower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "2891:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 537,
																					"name": "basicItemPower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "2904:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 538,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "2921:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2904:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2903:28:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2891:40:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2879:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 543,
															"nodeType": "ExpressionStatement",
															"src": "2879:52:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 513,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2740:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "35",
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2745:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "2740:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 545,
												"initializationExpression": {
													"assignments": [
														510
													],
													"declarations": [
														{
															"constant": false,
															"id": 510,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2733:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 545,
															"src": "2725:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 509,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2725:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 512,
													"initialValue": {
														"hexValue": "31",
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2737:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2725:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2748:3:2",
														"subExpression": {
															"id": 516,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "2748:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 518,
													"nodeType": "ExpressionStatement",
													"src": "2748:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2720:222:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 546,
																				"name": "basicPower",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "2961:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 547,
																				"name": "itemPower",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "2974:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2961:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 549,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2960:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 550,
																	"name": "levelCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "2987:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2960:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 552,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2959:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3001:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "2959:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 555,
												"nodeType": "Return",
												"src": "2952:51:2"
											}
										]
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePower",
									"nameLocation": "1960:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "1989:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1975:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 428,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1975:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "2004:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1996:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1974:36:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2058:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:9:2"
									},
									"scope": 582,
									"src": "1951:1059:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "3130:289:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 569,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3257:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3257:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 571,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3298:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "difficulty",
																				"nodeType": "MemberAccess",
																				"src": "3298:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 573,
																				"name": "_tokenIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 559,
																				"src": "3340:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 567,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3215:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "3215:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3215:158:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 566,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "3184:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3184:207:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3159:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 564,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3159:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3159:246:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3408:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "3159:253:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 563,
												"id": 579,
												"nodeType": "Return",
												"src": "3140:272:2"
											}
										]
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeRandomNumberForItem",
									"nameLocation": "3025:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "3057:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3049:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3049:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3048:21:2"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3117:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3116:9:2"
									},
									"scope": 582,
									"src": "3016:403:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 583,
							"src": "88:3333:2",
							"usedErrors": []
						}
					],
					"src": "32:3390:2"
				},
				"id": 2
			},
			"interface/IKIP13.sol": {
				"ast": {
					"absolutePath": "interface/IKIP13.sol",
					"exportedSymbols": {
						"IKIP13": [
							594
						]
					},
					"id": 595,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 584,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "258:22:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 585,
								"nodeType": "StructuredDocumentation",
								"src": "282:142:3",
								"text": " @dev Interface of the KIP13 standard as defined in the KIP.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard"
							},
							"fullyImplemented": false,
							"id": 594,
							"linearizedBaseContracts": [
								594
							],
							"name": "IKIP13",
							"nameLocation": "435:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "448:387:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n to learn more about how these ids are created.\n Requirements:\n - implementation of this function call must use less than 30 000 gas"
									},
									"functionSelector": "01ffc9a7",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "849:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "874:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "867:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 587,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "867:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:20:3"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "910:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 590,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "910:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:6:3"
									},
									"scope": 594,
									"src": "840:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 595,
							"src": "425:493:3",
							"usedErrors": []
						}
					],
					"src": "258:661:3"
				},
				"id": 3
			},
			"interface/IKIP17/IKIP17.sol": {
				"ast": {
					"absolutePath": "interface/IKIP17/IKIP17.sol",
					"exportedSymbols": {
						"IKIP13": [
							594
						],
						"IKIP17": [
							710
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 596,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "243:22:4"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 711,
							"sourceUnit": 595,
							"src": "267:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 599,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 594,
										"src": "380:6:4"
									},
									"id": 600,
									"nodeType": "InheritanceSpecifier",
									"src": "380:6:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 598,
								"nodeType": "StructuredDocumentation",
								"src": "292:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 710,
							"linearizedBaseContracts": [
								710,
								594
							],
							"name": "IKIP17",
							"nameLocation": "370:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "393:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 609,
									"name": "Transfer",
									"nameLocation": "492:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "526:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "510:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "540:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "584:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "568:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:97:4"
									},
									"src": "486:112:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "604:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 618,
									"name": "Approval",
									"nameLocation": "709:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "743:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "727:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "774:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "758:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "808:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "792:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:104:4"
									},
									"src": "703:119:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "828:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 627,
									"name": "ApprovalForAll",
									"nameLocation": "956:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "996:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "980:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1027:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1011:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1050:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1045:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:94:4"
									},
									"src": "950:115:4"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "1071:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1161:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:15:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1217:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1209:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:17:4"
									},
									"scope": 710,
									"src": "1152:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1232:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1377:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1393:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1385:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:17:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1433:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "1425:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:15:4"
									},
									"scope": 710,
									"src": "1368:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1446:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2016:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2050:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2042:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2072:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2064:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2124:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2109:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2109:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:102:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2143:0:4"
									},
									"scope": 710,
									"src": "2007:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "2150:690:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2854:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2888:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2880:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2910:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2902:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2930:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2922:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:73:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2952:0:4"
									},
									"scope": 710,
									"src": "2845:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "2959:504:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3477:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3507:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "3499:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3529:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "3521:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3549:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "3541:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:73:4"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3571:0:4"
									},
									"scope": 710,
									"src": "3468:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "3578:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4044:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4060:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4052:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4072:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4064:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4064:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:29:4"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:0:4"
									},
									"scope": 710,
									"src": "4035:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "4096:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4419:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4445:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "4437:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4460:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "4455:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4455:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:34:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4479:0:4"
									},
									"scope": 710,
									"src": "4410:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "4486:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4639:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4659:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "4651:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4651:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:17:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4723:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "4715:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4714:18:4"
									},
									"scope": 710,
									"src": "4630:103:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "4739:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4891:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4916:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "4908:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4931:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "4923:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4907:33:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "4988:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4988:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4987:6:4"
									},
									"scope": 710,
									"src": "4882:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 711,
							"src": "360:4636:4",
							"usedErrors": []
						}
					],
					"src": "243:4754:4"
				},
				"id": 4
			},
			"interface/IKIP37/IKIP37.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37.sol",
					"exportedSymbols": {
						"IKIP13": [
							594
						],
						"IKIP37": [
							828
						]
					},
					"id": 829,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 712,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:5"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 829,
							"sourceUnit": 595,
							"src": "56:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 714,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 594,
										"src": "101:6:5"
									},
									"id": 715,
									"nodeType": "InheritanceSpecifier",
									"src": "101:6:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 828,
							"linearizedBaseContracts": [
								828,
								594
							],
							"name": "IKIP37",
							"nameLocation": "91:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 727,
									"name": "TransferSingle",
									"nameLocation": "120:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "160:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "144:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "195:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "179:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "226:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "210:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"indexed": false,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "247:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "239:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "268:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "260:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:146:5"
									},
									"src": "114:167:5"
								},
								{
									"anonymous": false,
									"id": 741,
									"name": "TransferBatch",
									"nameLocation": "292:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "331:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "315:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "366:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "350:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "397:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "381:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "410:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 734,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "410:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 735,
													"nodeType": "ArrayTypeName",
													"src": "410:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"indexed": false,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "444:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "434:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 737,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "434:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 738,
													"nodeType": "ArrayTypeName",
													"src": "434:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:152:5"
									},
									"src": "286:172:5"
								},
								{
									"anonymous": false,
									"id": 749,
									"name": "ApprovalForAll",
									"nameLocation": "469:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "509:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "493:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "541:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "525:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "565:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "560:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 746,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:97:5"
									},
									"src": "463:118:5"
								},
								{
									"anonymous": false,
									"id": 755,
									"name": "URI",
									"nameLocation": "592:3:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "603:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "596:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 750,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"indexed": true,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "627:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "611:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:36:5"
									},
									"src": "586:46:5"
								},
								{
									"functionSelector": "f242432a",
									"id": 768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "647:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "704:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "696:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "725:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "717:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "746:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "738:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "777:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "762:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:125:5"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:0:5"
									},
									"scope": 828,
									"src": "638:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2eb2c2d6",
									"id": 783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "813:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "852:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "844:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "875:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "867:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "907:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "888:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 773,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "888:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 774,
													"nodeType": "ArrayTypeName",
													"src": "888:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "921:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 776,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "921:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 777,
													"nodeType": "ArrayTypeName",
													"src": "921:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "972:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "957:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:149:5"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:5"
									},
									"scope": 828,
									"src": "804:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00fdd58e",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1026:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1018:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1042:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1034:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:29:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1094:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:5"
									},
									"scope": 828,
									"src": "999:104:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e1273f4",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1118:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "_owners",
												"nameLocation": "1152:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1133:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 793,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1133:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 794,
													"nodeType": "ArrayTypeName",
													"src": "1133:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "1180:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1161:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 796,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1161:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 797,
													"nodeType": "ArrayTypeName",
													"src": "1161:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:53:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1233:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 800,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1233:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 801,
													"nodeType": "ArrayTypeName",
													"src": "1233:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:18:5"
									},
									"scope": 828,
									"src": "1109:142:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1266:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1292:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1284:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1308:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1303:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1303:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:35:5"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:5"
									},
									"scope": 828,
									"src": "1257:71:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1343:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1368:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1360:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1384:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1376:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:35:5"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1442:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:6:5"
									},
									"scope": 828,
									"src": "1334:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bd85b039",
									"id": 827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1463:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1483:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1475:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:13:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 828,
									"src": "1454:66:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 829,
							"src": "81:1441:5",
							"usedErrors": []
						}
					],
					"src": "32:1491:5"
				},
				"id": 5
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37Full.sol",
					"exportedSymbols": {
						"IKIP13": [
							594
						],
						"IKIP37": [
							828
						],
						"IKIP37Full": [
							852
						],
						"IKIP37MetadataURI": [
							865
						]
					},
					"id": 853,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 830,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:6"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
							"file": "./IKIP37MetadataURI.sol",
							"id": 831,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 853,
							"sourceUnit": 866,
							"src": "56:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 832,
										"name": "IKIP37MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 865,
										"src": "115:17:6"
									},
									"id": 833,
									"nodeType": "InheritanceSpecifier",
									"src": "115:17:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 852,
							"linearizedBaseContracts": [
								852,
								865,
								828,
								594
							],
							"name": "IKIP37Full",
							"nameLocation": "101:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "156e29f6",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "148:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "170:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "162:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "193:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "185:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "219:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "211:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:80:6"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:6"
									},
									"scope": 852,
									"src": "139:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f5298aca",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "257:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "279:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "271:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "302:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "294:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "328:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "320:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:80:6"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:6"
									},
									"scope": 852,
									"src": "248:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 853,
							"src": "91:262:6",
							"usedErrors": []
						}
					],
					"src": "32:322:6"
				},
				"id": 6
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
					"exportedSymbols": {
						"IKIP13": [
							594
						],
						"IKIP37": [
							828
						],
						"IKIP37MetadataURI": [
							865
						]
					},
					"id": 866,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 854,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:7"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37.sol",
							"file": "./IKIP37.sol",
							"id": 855,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 866,
							"sourceUnit": 829,
							"src": "56:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 856,
										"name": "IKIP37",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 828,
										"src": "111:6:7"
									},
									"id": 857,
									"nodeType": "InheritanceSpecifier",
									"src": "111:6:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 865,
							"linearizedBaseContracts": [
								865,
								828,
								594
							],
							"name": "IKIP37MetadataURI",
							"nameLocation": "90:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0e89341c",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "133:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "145:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "137:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:12:7"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "172:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 861,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "172:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:15:7"
									},
									"scope": 865,
									"src": "124:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 866,
							"src": "80:109:7",
							"usedErrors": []
						}
					],
					"src": "32:158:7"
				},
				"id": 7
			},
			"interface/IKIP7/IKIP7.sol": {
				"ast": {
					"absolutePath": "interface/IKIP7/IKIP7.sol",
					"exportedSymbols": {
						"IKIP7": [
							983
						]
					},
					"id": 984,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 867,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 868,
								"nodeType": "StructuredDocumentation",
								"src": "56:125:8",
								"text": " @dev Interface of the KIP7 standard as defined in the KIP.\n See http://kips.klaytn.com/KIPs/kip-7-fungible_token"
							},
							"fullyImplemented": false,
							"id": 983,
							"linearizedBaseContracts": [
								983
							],
							"name": "IKIP7",
							"nameLocation": "192:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "204:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 877,
									"name": "Transfer",
									"nameLocation": "373:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "398:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "382:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "420:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "404:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "432:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "424:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:57:8"
									},
									"src": "367:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "445:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 886,
									"name": "Approval",
									"nameLocation": "604:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "638:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "622:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "669:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "653:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "694:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "686:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:93:8"
									},
									"src": "598:108:8"
								},
								{
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "712:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "792:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:2:8"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "829:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:9:8"
									},
									"scope": 983,
									"src": "783:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "844:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "930:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "948:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "940:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:17:8"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "980:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:9:8"
									},
									"scope": 983,
									"src": "921:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "995:202:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1211:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1228:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1220:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1240:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1232:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:28:8"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1266:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:8"
									},
									"scope": 983,
									"src": "1202:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "1278:285:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1577:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1595:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1587:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1610:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1602:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:32:8"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:9:8"
									},
									"scope": 983,
									"src": "1568:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "1681:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2337:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2353:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2345:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2370:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2362:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:33:8"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2396:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2396:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:6:8"
									},
									"scope": 983,
									"src": "2328:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "2408:287:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2709:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2739:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2731:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2761:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2753:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2781:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2773:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2721:72:8"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2812:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2812:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2811:6:8"
									},
									"scope": 983,
									"src": "2700:118:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "2824:201:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "eb795549",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3039:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3069:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3061:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3096:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3088:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3125:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3112:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3112:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:84:8"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:8"
									},
									"scope": 983,
									"src": "3030:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "3151:128:8",
										"text": " @dev  Moves `amount` tokens from the caller's account to `recipient`.\n Emits a {Transfer} event."
									},
									"functionSelector": "423f6cef",
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3293:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3314:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3306:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3306:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3333:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3325:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3325:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3305:35:8"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:8"
									},
									"scope": 983,
									"src": "3284:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "3356:221:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3591:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3625:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "3617:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3649:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "3641:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3676:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "3668:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3705:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "3692:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3607:108:8"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3724:0:8"
									},
									"scope": 983,
									"src": "3582:143:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "3731:147:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3892:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3926:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3918:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3950:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3942:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3977:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3969:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:81:8"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3998:0:8"
									},
									"scope": 983,
									"src": "3883:116:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 984,
							"src": "182:3819:8",
							"usedErrors": []
						}
					],
					"src": "32:3970:8"
				},
				"id": 8
			},
			"utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1128
						]
					},
					"id": 1129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 985,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1128,
							"linearizedBaseContracts": [
								1128
							],
							"name": "SafeMath",
							"nameLocation": "64:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "146:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "163:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 995,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "167:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "163:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 993,
												"id": 997,
												"nodeType": "Return",
												"src": "156:12:9"
											}
										]
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "88:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "100:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "92:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "92:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "111:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "103:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "91:22:9"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "137:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:9"
									},
									"scope": 1128,
									"src": "79:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "248:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1008,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "265:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1009,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "269:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "265:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1007,
												"id": 1011,
												"nodeType": "Return",
												"src": "258:12:9"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "190:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "202:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "194:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "213:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "205:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:22:9"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "239:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:9:9"
									},
									"scope": 1128,
									"src": "181:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "350:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1022,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "367:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1023,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "371:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "367:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1025,
												"nodeType": "Return",
												"src": "360:12:9"
											}
										]
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "292:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "304:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "296:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "315:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "307:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:22:9"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "341:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:9:9"
									},
									"scope": 1128,
									"src": "283:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "452:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1036,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "469:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1037,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "473:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "469:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1035,
												"id": 1039,
												"nodeType": "Return",
												"src": "462:12:9"
											}
										]
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "394:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "406:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "398:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "417:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "409:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:22:9"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "443:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:9:9"
									},
									"scope": 1128,
									"src": "385:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "554:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1050,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "571:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1051,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "575:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "571:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1049,
												"id": 1053,
												"nodeType": "Return",
												"src": "564:12:9"
											}
										]
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "496:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "508:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "500:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "519:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "511:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:22:9"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "545:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:9:9"
									},
									"scope": 1128,
									"src": "487:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "714:106:9",
										"statements": [
											{
												"id": 1077,
												"nodeType": "UncheckedBlock",
												"src": "724:90:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1067,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "756:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1068,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "761:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "756:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1070,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "764:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1066,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "748:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "748:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1072,
														"nodeType": "ExpressionStatement",
														"src": "748:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "798:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1074,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "802:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "798:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1065,
														"id": 1076,
														"nodeType": "Return",
														"src": "791:12:9"
													}
												]
											}
										]
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "598:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "619:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "611:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "638:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "630:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "663:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "649:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "649:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:80:9"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "705:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:9:9"
									},
									"scope": 1128,
									"src": "589:231:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "951:105:9",
										"statements": [
											{
												"id": 1101,
												"nodeType": "UncheckedBlock",
												"src": "961:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1091,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "993:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "997:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "993:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1094,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "1000:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1090,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "985:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "985:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1096,
														"nodeType": "ExpressionStatement",
														"src": "985:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1097,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "1034:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1098,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "1038:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1034:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1089,
														"id": 1100,
														"nodeType": "Return",
														"src": "1027:12:9"
													}
												]
											}
										]
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "835:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "856:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "848:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "875:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "867:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "900:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "886:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1084,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "886:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:80:9"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "942:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:9:9"
									},
									"scope": 1128,
									"src": "826:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "1187:105:9",
										"statements": [
											{
												"id": 1125,
												"nodeType": "UncheckedBlock",
												"src": "1197:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1115,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "1229:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1233:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1229:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1118,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "1236:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1114,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1221:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1221:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1120,
														"nodeType": "ExpressionStatement",
														"src": "1221:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1121,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "1270:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1122,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "1274:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1270:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1113,
														"id": 1124,
														"nodeType": "Return",
														"src": "1263:12:9"
													}
												]
											}
										]
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1071:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1092:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1084:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1111:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1103:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1136:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1122:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1122:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:80:9"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1178:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:9:9"
									},
									"scope": 1128,
									"src": "1062:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1129,
							"src": "56:1238:9",
							"usedErrors": []
						}
					],
					"src": "32:1263:9"
				},
				"id": 9
			}
		}
	}
}