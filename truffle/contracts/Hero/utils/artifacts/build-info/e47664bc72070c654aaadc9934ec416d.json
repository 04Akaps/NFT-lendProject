{
	"id": "e47664bc72070c654aaadc9934ec416d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Hero/utils/LevelDiagram.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../interface/IKIP37/IKIP37Full.sol\";\nimport \"../interface/ILevelDiagram.sol\";\n\ncontract LevelDiagram is ILevelDiagram  {\n    bytes32 private constant MYTHOLOGY = keccak256(\"Mythology\");\n    bytes32 private constant LEGENDARY = keccak256(\"Legendary\");\n    bytes32 private constant EPIC = keccak256(\"Epic\");\n    bytes32 private constant ADMINISTRATOR = keccak256(\"Administrator\");\n    bytes32 private constant NORMAL = keccak256(\"Normal\");\n\n    IKIP37Full private item;\n\n    constructor(address _item) {\n        item = IKIP37Full(_item);\n    }\n\n    function calculateTokenAmount(string memory grade, uint256 level)\n        public\n        pure\n        override\n        returns (uint256)\n    {\n        uint256 gradeAmount = calculateBasicGradeAmount(grade);\n        uint256 levelAmount = calculateBasicLevelAmount(level);\n\n        return ((gradeAmount * levelAmount) / 10) * 1e18;\n    }\n\n    function calculateBasicLevelAmount(uint256 level)\n        internal\n        pure\n        override\n        returns (uint256)\n    {\n        return (\n            level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4\n                ? 80\n                : 0\n        );\n    }\n\n    function calculateBasicGradeAmount(string memory grade)\n        internal\n        pure\n        override\n        returns (uint256)\n    {\n        bytes32 gradeCheck = keccak256(bytes(grade));\n\n        return (\n            gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY\n                ? 450\n                : gradeCheck == EPIC\n                ? 300\n                : gradeCheck == ADMINISTRATOR\n                ? 225\n                : gradeCheck == NORMAL\n                ? 200\n                : 0\n        );\n    }\n\n    function calculateItemIndex(uint256 _power)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        for (uint256 i = 1; i <= 5; i++) {\n            uint256 randomNumber = makeRandomNumberForItem(i);\n\n            if (_power >= randomNumber) {\n                _power -= randomNumber;\n            } else {\n                return i;\n            }\n        }\n\n        return 0;\n    }\n\n    function calculatePower(string memory grade, uint256 level)\n        internal\n        view\n        override\n        returns (uint256)\n    {\n        bytes32 gradeCheck = keccak256(bytes(grade));\n\n        uint256 basicPower = (\n            gradeCheck == MYTHOLOGY ? 450 : gradeCheck == LEGENDARY\n                ? 300\n                : gradeCheck == EPIC\n                ? 200\n                : gradeCheck == ADMINISTRATOR\n                ? 150\n                : gradeCheck == NORMAL\n                ? 100\n                : 0\n        );\n\n        uint256 levelCheck = (\n            level == 1 ? 10 : level == 2 ? 15 : level == 3 ? 25 : level == 4\n                ? 40\n                : level == 5\n                ? 70\n                : 0\n        );\n\n        uint256 itemPower = 0;\n\n        for (uint256 i = 1; i <= 5; i++) {\n            uint256 balanceOf = item.balanceOf(msg.sender, i);\n            uint256 basicItemPower = i + 1;\n            itemPower = itemPower + (basicItemPower * balanceOf);\n        }\n\n        return ((basicPower + itemPower) * levelCheck) / 10;\n    }\n\n    function makeRandomNumberForItem(uint256 _tokenIndex)\n        internal\n        view\n        override\n        returns (uint256)\n    {\n        return\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        block.timestamp,\n                        block.difficulty,\n                        _tokenIndex\n                    )\n                )\n            ) % 1000;\n    }\n}\n"
			},
			"Hero/interface/ILevelDiagram.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nabstract contract ILevelDiagram {\n     function calculateTokenAmount(string memory grade, uint256 level)\n        public\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateBasicLevelAmount(uint256 level)\n        internal\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateBasicGradeAmount(string memory grade)\n        internal\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateItemIndex(uint256 _power)\n        external\n        view\n        virtual\n        returns (uint256);\n\n    function calculatePower(string memory grade, uint256 level)\n        internal\n        view\n        virtual\n        returns (uint256);\n\n    function makeRandomNumberForItem(uint256 _tokenIndex)\n        internal\n        view\n        virtual\n        returns (uint256);\n}"
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37MetadataURI.sol\";\n\ninterface IKIP37Full is IKIP37MetadataURI {\n    function mint(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n\n    function burn(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n}\n"
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37.sol\";\n\ninterface IKIP37MetadataURI is IKIP37 {\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"interface/IKIP37/IKIP37.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\ninterface IKIP37 is IKIP13 {\n    event TransferSingle(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256 _id,\n        uint256 _value\n    );\n    event TransferBatch(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256[] _ids,\n        uint256[] _values\n    );\n    event ApprovalForAll(\n        address indexed _owner,\n        address indexed _operator,\n        bool _approved\n    );\n    event URI(string _value, uint256 indexed _id);\n\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _id,\n        uint256 _value,\n        bytes calldata _data\n    ) external;\n\n    function safeBatchTransferFrom(\n        address _from,\n        address _to,\n        uint256[] calldata _ids,\n        uint256[] calldata _values,\n        bytes calldata _data\n    ) external;\n\n    function balanceOf(address _owner, uint256 _id)\n        external\n        view\n        returns (uint256);\n\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    function isApprovedForAll(address _owner, address _operator)\n        external\n        view\n        returns (bool);\n\n    function totalSupply(uint256 _id) external view returns (uint256);\n}\n"
			},
			"interface/IKIP13.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP13 standard as defined in the KIP.\n *\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\n */\ninterface IKIP13 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`.\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n     * to learn more about how these ids are created.\n     *\n     * Requirements:\n     *\n     * - implementation of this function call must use less than 30 000 gas\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Hero/interface/ILevelDiagram.sol": {
				"ILevelDiagram": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "calculateItemIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateItemIndex(uint256)": "b79d5db4",
							"calculateTokenAmount(string,uint256)": "aa93c0ee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"calculateItemIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/interface/ILevelDiagram.sol\":\"ILevelDiagram\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0x320246d398001c87c0856d9b80a9892a6b3060495448912fa63623204acc400a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efa42f5a34077ec4e7504c678b7afd5628ba5891f70f452b87fd371e21a84ff4\",\"dweb:/ipfs/QmQPYaaYFmAEF9TZJjpc8HVi2T6Vy2TpLLFDsPUD7inngC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/utils/LevelDiagram.sol": {
				"LevelDiagram": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_item",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "calculateItemIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Hero/utils/LevelDiagram.sol\":146:3680  contract LevelDiagram is ILevelDiagram  {... */\n  mstore(0x40, 0x80)\n    /* \"Hero/utils/LevelDiagram.sol\":540:608  constructor(address _item) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Hero/utils/LevelDiagram.sol\":595:600  _item */\n  dup1\n    /* \"Hero/utils/LevelDiagram.sol\":577:581  item */\n  0x00\n  dup1\n    /* \"Hero/utils/LevelDiagram.sol\":577:601  item = IKIP37Full(_item) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/LevelDiagram.sol\":540:608  constructor(address _item) {... */\n  pop\n    /* \"Hero/utils/LevelDiagram.sol\":146:3680  contract LevelDiagram is ILevelDiagram  {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n    /* \"#utility.yul\":483:490   */\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n    /* \"#utility.yul\":585:592   */\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"Hero/utils/LevelDiagram.sol\":146:3680  contract LevelDiagram is ILevelDiagram  {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Hero/utils/LevelDiagram.sol\":146:3680  contract LevelDiagram is ILevelDiagram  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaa93c0ee\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb79d5db4\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Hero/utils/LevelDiagram.sol\":614:949  function calculateTokenAmount(string memory grade, uint256 level)... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/LevelDiagram.sol\":1768:2175  function calculateItemIndex(uint256 _power)... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/LevelDiagram.sol\":614:949  function calculateTokenAmount(string memory grade, uint256 level)... */\n    tag_8:\n        /* \"Hero/utils/LevelDiagram.sol\":742:749  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":765:784  uint256 gradeAmount */\n      dup1\n        /* \"Hero/utils/LevelDiagram.sol\":787:819  calculateBasicGradeAmount(grade) */\n      tag_17\n        /* \"Hero/utils/LevelDiagram.sol\":813:818  grade */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":787:812  calculateBasicGradeAmount */\n      tag_18\n        /* \"Hero/utils/LevelDiagram.sol\":787:819  calculateBasicGradeAmount(grade) */\n      jump\t// in\n    tag_17:\n        /* \"Hero/utils/LevelDiagram.sol\":765:819  uint256 gradeAmount = calculateBasicGradeAmount(grade) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":829:848  uint256 levelAmount */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":851:883  calculateBasicLevelAmount(level) */\n      tag_19\n        /* \"Hero/utils/LevelDiagram.sol\":877:882  level */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":851:876  calculateBasicLevelAmount */\n      tag_20\n        /* \"Hero/utils/LevelDiagram.sol\":851:883  calculateBasicLevelAmount(level) */\n      jump\t// in\n    tag_19:\n        /* \"Hero/utils/LevelDiagram.sol\":829:883  uint256 levelAmount = calculateBasicLevelAmount(level) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":938:942  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/LevelDiagram.sol\":932:934  10 */\n      0x0a\n        /* \"Hero/utils/LevelDiagram.sol\":917:928  levelAmount */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":903:914  gradeAmount */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":903:928  gradeAmount * levelAmount */\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"Hero/utils/LevelDiagram.sol\":902:934  (gradeAmount * levelAmount) / 10 */\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"Hero/utils/LevelDiagram.sol\":901:942  ((gradeAmount * levelAmount) / 10) * 1e18 */\n      tag_25\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_25:\n        /* \"Hero/utils/LevelDiagram.sol\":894:942  return ((gradeAmount * levelAmount) / 10) * 1e18 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":614:949  function calculateTokenAmount(string memory grade, uint256 level)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Hero/utils/LevelDiagram.sol\":1768:2175  function calculateItemIndex(uint256 _power)... */\n    tag_14:\n        /* \"Hero/utils/LevelDiagram.sol\":1876:1883  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1904:1913  uint256 i */\n      dup1\n        /* \"Hero/utils/LevelDiagram.sol\":1916:1917  1 */\n      0x01\n        /* \"Hero/utils/LevelDiagram.sol\":1904:1917  uint256 i = 1 */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":1899:2150  for (uint256 i = 1; i <= 5; i++) {... */\n    tag_27:\n        /* \"Hero/utils/LevelDiagram.sol\":1924:1925  5 */\n      0x05\n        /* \"Hero/utils/LevelDiagram.sol\":1919:1920  i */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1919:1925  i <= 5 */\n      gt\n        /* \"Hero/utils/LevelDiagram.sol\":1899:2150  for (uint256 i = 1; i <= 5; i++) {... */\n      tag_28\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1946:1966  uint256 randomNumber */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1969:1995  makeRandomNumberForItem(i) */\n      tag_30\n        /* \"Hero/utils/LevelDiagram.sol\":1993:1994  i */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1969:1992  makeRandomNumberForItem */\n      tag_31\n        /* \"Hero/utils/LevelDiagram.sol\":1969:1995  makeRandomNumberForItem(i) */\n      jump\t// in\n    tag_30:\n        /* \"Hero/utils/LevelDiagram.sol\":1946:1995  uint256 randomNumber = makeRandomNumberForItem(i) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":2024:2036  randomNumber */\n      dup1\n        /* \"Hero/utils/LevelDiagram.sol\":2014:2020  _power */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":2014:2036  _power >= randomNumber */\n      lt\n        /* \"Hero/utils/LevelDiagram.sol\":2010:2140  if (_power >= randomNumber) {... */\n      tag_32\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":2066:2078  randomNumber */\n      dup1\n        /* \"Hero/utils/LevelDiagram.sol\":2056:2078  _power -= randomNumber */\n      dup5\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      swap4\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":2010:2140  if (_power >= randomNumber) {... */\n      jump(tag_35)\n    tag_32:\n        /* \"Hero/utils/LevelDiagram.sol\":2124:2125  i */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":2117:2125  return i */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_26)\n        /* \"Hero/utils/LevelDiagram.sol\":2010:2140  if (_power >= randomNumber) {... */\n    tag_35:\n        /* \"Hero/utils/LevelDiagram.sol\":1899:2150  for (uint256 i = 1; i <= 5; i++) {... */\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":1927:1930  i++ */\n      dup1\n      dup1\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      swap2\n      pop\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":1899:2150  for (uint256 i = 1; i <= 5; i++) {... */\n      jump(tag_27)\n    tag_28:\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":2167:2168  0 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":2160:2168  return 0 */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":1768:2175  function calculateItemIndex(uint256 _power)... */\n    tag_26:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Hero/utils/LevelDiagram.sol\":1241:1762  function calculateBasicGradeAmount(string memory grade)... */\n    tag_18:\n        /* \"Hero/utils/LevelDiagram.sol\":1361:1368  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1384:1402  bytes32 gradeCheck */\n      dup1\n        /* \"Hero/utils/LevelDiagram.sol\":1421:1426  grade */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1405:1428  keccak256(bytes(grade)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Hero/utils/LevelDiagram.sol\":1384:1428  bytes32 gradeCheck = keccak256(bytes(grade)) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":229:251  keccak256(\"Mythology\") */\n      0x8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f3\n        /* \"Hero/utils/LevelDiagram.sol\":1460:1470  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1460:1483  gradeCheck == MYTHOLOGY */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1460:1745  gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY... */\n      tag_39\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":294:316  keccak256(\"Legendary\") */\n      0x181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310\n        /* \"Hero/utils/LevelDiagram.sol\":1492:1502  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1492:1515  gradeCheck == LEGENDARY */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1492:1745  gradeCheck == LEGENDARY... */\n      tag_40\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":354:371  keccak256(\"Epic\") */\n      0x6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17\n        /* \"Hero/utils/LevelDiagram.sol\":1556:1566  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1556:1574  gradeCheck == EPIC */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1556:1745  gradeCheck == EPIC... */\n      tag_41\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":418:444  keccak256(\"Administrator\") */\n      0xb2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1625  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1642  gradeCheck == ADMINISTRATOR */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1745  gradeCheck == ADMINISTRATOR... */\n      tag_42\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":484:503  keccak256(\"Normal\") */\n      0xb5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd\n        /* \"Hero/utils/LevelDiagram.sol\":1683:1693  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1683:1703  gradeCheck == NORMAL */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1683:1745  gradeCheck == NORMAL... */\n      tag_43\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1744:1745  0 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1683:1745  gradeCheck == NORMAL... */\n      jump(tag_44)\n    tag_43:\n        /* \"Hero/utils/LevelDiagram.sol\":1722:1725  200 */\n      0xc8\n        /* \"Hero/utils/LevelDiagram.sol\":1683:1745  gradeCheck == NORMAL... */\n    tag_44:\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1745  gradeCheck == ADMINISTRATOR... */\n      jump(tag_45)\n    tag_42:\n        /* \"Hero/utils/LevelDiagram.sol\":1661:1664  225 */\n      0xe1\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1745  gradeCheck == ADMINISTRATOR... */\n    tag_45:\n        /* \"Hero/utils/LevelDiagram.sol\":1556:1745  gradeCheck == EPIC... */\n      0xff\n      and\n      jump(tag_46)\n    tag_41:\n        /* \"Hero/utils/LevelDiagram.sol\":1593:1596  300 */\n      0x012c\n        /* \"Hero/utils/LevelDiagram.sol\":1556:1745  gradeCheck == EPIC... */\n    tag_46:\n        /* \"Hero/utils/LevelDiagram.sol\":1492:1745  gradeCheck == LEGENDARY... */\n      jump(tag_47)\n    tag_40:\n        /* \"Hero/utils/LevelDiagram.sol\":1534:1537  450 */\n      0x01c2\n        /* \"Hero/utils/LevelDiagram.sol\":1492:1745  gradeCheck == LEGENDARY... */\n    tag_47:\n        /* \"Hero/utils/LevelDiagram.sol\":1460:1745  gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY... */\n      jump(tag_48)\n    tag_39:\n        /* \"Hero/utils/LevelDiagram.sol\":1486:1489  675 */\n      0x02a3\n        /* \"Hero/utils/LevelDiagram.sol\":1460:1745  gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY... */\n    tag_48:\n        /* \"Hero/utils/LevelDiagram.sol\":1439:1755  return (... */\n      0xffff\n      and\n      swap2\n      pop\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":1241:1762  function calculateBasicGradeAmount(string memory grade)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Hero/utils/LevelDiagram.sol\":955:1235  function calculateBasicLevelAmount(uint256 level)... */\n    tag_20:\n        /* \"Hero/utils/LevelDiagram.sol\":1069:1076  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1122:1123  1 */\n      0x01\n        /* \"Hero/utils/LevelDiagram.sol\":1113:1118  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1113:1123  level == 1 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1113:1218  level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      tag_50\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1140:1141  2 */\n      0x02\n        /* \"Hero/utils/LevelDiagram.sol\":1131:1136  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1131:1141  level == 2 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1131:1218  level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      tag_51\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1158:1159  3 */\n      0x03\n        /* \"Hero/utils/LevelDiagram.sol\":1149:1154  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1149:1159  level == 3 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1149:1218  level == 3 ? 42 : level == 4... */\n      tag_52\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1176:1177  4 */\n      0x04\n        /* \"Hero/utils/LevelDiagram.sol\":1167:1172  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1167:1177  level == 4 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1167:1218  level == 4... */\n      tag_53\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1217:1218  0 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1167:1218  level == 4... */\n      jump(tag_54)\n    tag_53:\n        /* \"Hero/utils/LevelDiagram.sol\":1196:1198  80 */\n      0x50\n        /* \"Hero/utils/LevelDiagram.sol\":1167:1218  level == 4... */\n    tag_54:\n        /* \"Hero/utils/LevelDiagram.sol\":1149:1218  level == 3 ? 42 : level == 4... */\n      jump(tag_55)\n    tag_52:\n        /* \"Hero/utils/LevelDiagram.sol\":1162:1164  42 */\n      0x2a\n        /* \"Hero/utils/LevelDiagram.sol\":1149:1218  level == 3 ? 42 : level == 4... */\n    tag_55:\n        /* \"Hero/utils/LevelDiagram.sol\":1131:1218  level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      jump(tag_56)\n    tag_51:\n        /* \"Hero/utils/LevelDiagram.sol\":1144:1146  22 */\n      0x16\n        /* \"Hero/utils/LevelDiagram.sol\":1131:1218  level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n    tag_56:\n        /* \"Hero/utils/LevelDiagram.sol\":1113:1218  level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      jump(tag_57)\n    tag_50:\n        /* \"Hero/utils/LevelDiagram.sol\":1126:1128  15 */\n      0x0f\n        /* \"Hero/utils/LevelDiagram.sol\":1113:1218  level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n    tag_57:\n        /* \"Hero/utils/LevelDiagram.sol\":1092:1228  return (... */\n      0xff\n      and\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":955:1235  function calculateBasicLevelAmount(uint256 level)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Hero/utils/LevelDiagram.sol\":3258:3678  function makeRandomNumberForItem(uint256 _tokenIndex)... */\n    tag_31:\n        /* \"Hero/utils/LevelDiagram.sol\":3376:3383  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":3667:3671  1000 */\n      0x03e8\n        /* \"Hero/utils/LevelDiagram.sol\":3516:3531  block.timestamp */\n      timestamp\n        /* \"Hero/utils/LevelDiagram.sol\":3557:3573  block.difficulty */\n      difficulty\n        /* \"Hero/utils/LevelDiagram.sol\":3599:3610  _tokenIndex */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":3474:3632  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_59\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Hero/utils/LevelDiagram.sol\":3443:3650  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Hero/utils/LevelDiagram.sol\":3418:3664  uint256(... */\n      0x00\n      shr\n        /* \"Hero/utils/LevelDiagram.sol\":3418:3671  uint256(... */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"Hero/utils/LevelDiagram.sol\":3399:3671  return... */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":3258:3678  function makeRandomNumberForItem(uint256 _tokenIndex)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:352   */\n    tag_64:\n        /* \"#utility.yul\":85:90   */\n      0x00\n        /* \"#utility.yul\":110:176   */\n      tag_66\n        /* \"#utility.yul\":126:175   */\n      tag_67\n        /* \"#utility.yul\":168:174   */\n      dup5\n        /* \"#utility.yul\":126:175   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":110:176   */\n      tag_69\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":101:176   */\n      swap1\n      pop\n        /* \"#utility.yul\":199:205   */\n      dup3\n        /* \"#utility.yul\":192:197   */\n      dup2\n        /* \"#utility.yul\":185:206   */\n      mstore\n        /* \"#utility.yul\":237:241   */\n      0x20\n        /* \"#utility.yul\":230:235   */\n      dup2\n        /* \"#utility.yul\":226:242   */\n      add\n        /* \"#utility.yul\":275:278   */\n      dup5\n        /* \"#utility.yul\":266:272   */\n      dup5\n        /* \"#utility.yul\":261:264   */\n      dup5\n        /* \"#utility.yul\":257:273   */\n      add\n        /* \"#utility.yul\":254:279   */\n      gt\n        /* \"#utility.yul\":251:253   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":292:293   */\n      0x00\n        /* \"#utility.yul\":289:290   */\n      dup1\n        /* \"#utility.yul\":282:294   */\n      revert\n        /* \"#utility.yul\":251:253   */\n    tag_70:\n        /* \"#utility.yul\":305:346   */\n      tag_71\n        /* \"#utility.yul\":339:345   */\n      dup5\n        /* \"#utility.yul\":334:337   */\n      dup3\n        /* \"#utility.yul\":329:332   */\n      dup6\n        /* \"#utility.yul\":305:346   */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":91:352   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":372:645   */\n    tag_73:\n        /* \"#utility.yul\":428:433   */\n      0x00\n        /* \"#utility.yul\":477:480   */\n      dup3\n        /* \"#utility.yul\":470:474   */\n      0x1f\n        /* \"#utility.yul\":462:468   */\n      dup4\n        /* \"#utility.yul\":458:475   */\n      add\n        /* \"#utility.yul\":454:481   */\n      slt\n        /* \"#utility.yul\":444:446   */\n      tag_75\n      jumpi\n        /* \"#utility.yul\":495:496   */\n      0x00\n        /* \"#utility.yul\":492:493   */\n      dup1\n        /* \"#utility.yul\":485:497   */\n      revert\n        /* \"#utility.yul\":444:446   */\n    tag_75:\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":522:542   */\n      calldataload\n        /* \"#utility.yul\":560:639   */\n      tag_76\n        /* \"#utility.yul\":635:638   */\n      dup5\n        /* \"#utility.yul\":627:633   */\n      dup3\n        /* \"#utility.yul\":620:624   */\n      0x20\n        /* \"#utility.yul\":612:618   */\n      dup7\n        /* \"#utility.yul\":608:625   */\n      add\n        /* \"#utility.yul\":560:639   */\n      tag_64\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":551:639   */\n      swap2\n      pop\n        /* \"#utility.yul\":434:645   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":651:790   */\n    tag_77:\n        /* \"#utility.yul\":697:702   */\n      0x00\n        /* \"#utility.yul\":735:741   */\n      dup2\n        /* \"#utility.yul\":722:742   */\n      calldataload\n        /* \"#utility.yul\":713:742   */\n      swap1\n      pop\n        /* \"#utility.yul\":751:784   */\n      tag_79\n        /* \"#utility.yul\":778:783   */\n      dup2\n        /* \"#utility.yul\":751:784   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":703:790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1316   */\n    tag_7:\n        /* \"#utility.yul\":874:880   */\n      0x00\n        /* \"#utility.yul\":882:888   */\n      dup1\n        /* \"#utility.yul\":931:933   */\n      0x40\n        /* \"#utility.yul\":919:928   */\n      dup4\n        /* \"#utility.yul\":910:917   */\n      dup6\n        /* \"#utility.yul\":906:929   */\n      sub\n        /* \"#utility.yul\":902:934   */\n      slt\n        /* \"#utility.yul\":899:901   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":947:948   */\n      0x00\n        /* \"#utility.yul\":944:945   */\n      dup1\n        /* \"#utility.yul\":937:949   */\n      revert\n        /* \"#utility.yul\":899:901   */\n    tag_82:\n        /* \"#utility.yul\":1018:1019   */\n      0x00\n        /* \"#utility.yul\":1007:1016   */\n      dup4\n        /* \"#utility.yul\":1003:1020   */\n      add\n        /* \"#utility.yul\":990:1021   */\n      calldataload\n        /* \"#utility.yul\":1048:1066   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1040:1046   */\n      dup2\n        /* \"#utility.yul\":1037:1067   */\n      gt\n        /* \"#utility.yul\":1034:1036   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":1080:1081   */\n      0x00\n        /* \"#utility.yul\":1077:1078   */\n      dup1\n        /* \"#utility.yul\":1070:1082   */\n      revert\n        /* \"#utility.yul\":1034:1036   */\n    tag_83:\n        /* \"#utility.yul\":1108:1171   */\n      tag_84\n        /* \"#utility.yul\":1163:1170   */\n      dup6\n        /* \"#utility.yul\":1154:1160   */\n      dup3\n        /* \"#utility.yul\":1143:1152   */\n      dup7\n        /* \"#utility.yul\":1139:1161   */\n      add\n        /* \"#utility.yul\":1108:1171   */\n      tag_73\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1098:1171   */\n      swap3\n      pop\n        /* \"#utility.yul\":961:1181   */\n      pop\n        /* \"#utility.yul\":1220:1222   */\n      0x20\n        /* \"#utility.yul\":1246:1299   */\n      tag_85\n        /* \"#utility.yul\":1291:1298   */\n      dup6\n        /* \"#utility.yul\":1282:1288   */\n      dup3\n        /* \"#utility.yul\":1271:1280   */\n      dup7\n        /* \"#utility.yul\":1267:1289   */\n      add\n        /* \"#utility.yul\":1246:1299   */\n      tag_77\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1236:1299   */\n      swap2\n      pop\n        /* \"#utility.yul\":1191:1309   */\n      pop\n        /* \"#utility.yul\":889:1316   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1322:1584   */\n    tag_13:\n        /* \"#utility.yul\":1381:1387   */\n      0x00\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1418:1427   */\n      dup3\n        /* \"#utility.yul\":1409:1416   */\n      dup5\n        /* \"#utility.yul\":1405:1428   */\n      sub\n        /* \"#utility.yul\":1401:1433   */\n      slt\n        /* \"#utility.yul\":1398:1400   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":1446:1447   */\n      0x00\n        /* \"#utility.yul\":1443:1444   */\n      dup1\n        /* \"#utility.yul\":1436:1448   */\n      revert\n        /* \"#utility.yul\":1398:1400   */\n    tag_87:\n        /* \"#utility.yul\":1489:1490   */\n      0x00\n        /* \"#utility.yul\":1514:1567   */\n      tag_88\n        /* \"#utility.yul\":1559:1566   */\n      dup5\n        /* \"#utility.yul\":1550:1556   */\n      dup3\n        /* \"#utility.yul\":1539:1548   */\n      dup6\n        /* \"#utility.yul\":1535:1557   */\n      add\n        /* \"#utility.yul\":1514:1567   */\n      tag_77\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1504:1567   */\n      swap2\n      pop\n        /* \"#utility.yul\":1460:1577   */\n      pop\n        /* \"#utility.yul\":1388:1584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1590:1708   */\n    tag_89:\n        /* \"#utility.yul\":1677:1701   */\n      tag_91\n        /* \"#utility.yul\":1695:1700   */\n      dup2\n        /* \"#utility.yul\":1677:1701   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1672:1675   */\n      dup3\n        /* \"#utility.yul\":1665:1702   */\n      mstore\n        /* \"#utility.yul\":1655:1708   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1714:1871   */\n    tag_93:\n        /* \"#utility.yul\":1819:1864   */\n      tag_95\n        /* \"#utility.yul\":1839:1863   */\n      tag_96\n        /* \"#utility.yul\":1857:1862   */\n      dup3\n        /* \"#utility.yul\":1839:1863   */\n      tag_92\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1819:1864   */\n      tag_97\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1814:1817   */\n      dup3\n        /* \"#utility.yul\":1807:1865   */\n      mstore\n        /* \"#utility.yul\":1797:1871   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1877:2415   */\n    tag_60:\n        /* \"#utility.yul\":2045:2048   */\n      0x00\n        /* \"#utility.yul\":2060:2135   */\n      tag_99\n        /* \"#utility.yul\":2131:2134   */\n      dup3\n        /* \"#utility.yul\":2122:2128   */\n      dup7\n        /* \"#utility.yul\":2060:2135   */\n      tag_93\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2160:2162   */\n      0x20\n        /* \"#utility.yul\":2155:2158   */\n      dup3\n        /* \"#utility.yul\":2151:2163   */\n      add\n        /* \"#utility.yul\":2144:2163   */\n      swap2\n      pop\n        /* \"#utility.yul\":2173:2248   */\n      tag_100\n        /* \"#utility.yul\":2244:2247   */\n      dup3\n        /* \"#utility.yul\":2235:2241   */\n      dup6\n        /* \"#utility.yul\":2173:2248   */\n      tag_93\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2273:2275   */\n      0x20\n        /* \"#utility.yul\":2268:2271   */\n      dup3\n        /* \"#utility.yul\":2264:2276   */\n      add\n        /* \"#utility.yul\":2257:2276   */\n      swap2\n      pop\n        /* \"#utility.yul\":2286:2361   */\n      tag_101\n        /* \"#utility.yul\":2357:2360   */\n      dup3\n        /* \"#utility.yul\":2348:2354   */\n      dup5\n        /* \"#utility.yul\":2286:2361   */\n      tag_93\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2386:2388   */\n      0x20\n        /* \"#utility.yul\":2381:2384   */\n      dup3\n        /* \"#utility.yul\":2377:2389   */\n      add\n        /* \"#utility.yul\":2370:2389   */\n      swap2\n      pop\n        /* \"#utility.yul\":2406:2409   */\n      dup2\n        /* \"#utility.yul\":2399:2409   */\n      swap1\n      pop\n        /* \"#utility.yul\":2049:2415   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2421:2643   */\n    tag_10:\n        /* \"#utility.yul\":2514:2518   */\n      0x00\n        /* \"#utility.yul\":2552:2554   */\n      0x20\n        /* \"#utility.yul\":2541:2550   */\n      dup3\n        /* \"#utility.yul\":2537:2555   */\n      add\n        /* \"#utility.yul\":2529:2555   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2636   */\n      tag_103\n        /* \"#utility.yul\":2633:2634   */\n      0x00\n        /* \"#utility.yul\":2622:2631   */\n      dup4\n        /* \"#utility.yul\":2618:2635   */\n      add\n        /* \"#utility.yul\":2609:2615   */\n      dup5\n        /* \"#utility.yul\":2565:2636   */\n      tag_89\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2519:2643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2649:2778   */\n    tag_69:\n        /* \"#utility.yul\":2683:2689   */\n      0x00\n        /* \"#utility.yul\":2710:2730   */\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2700:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_107\n        /* \"#utility.yul\":2767:2771   */\n      dup3\n        /* \"#utility.yul\":2759:2765   */\n      dup3\n        /* \"#utility.yul\":2739:2772   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2690:2778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:2859   */\n    tag_106:\n        /* \"#utility.yul\":2817:2823   */\n      0x00\n        /* \"#utility.yul\":2850:2852   */\n      0x40\n        /* \"#utility.yul\":2844:2853   */\n      mload\n        /* \"#utility.yul\":2834:2853   */\n      swap1\n      pop\n        /* \"#utility.yul\":2824:2859   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2865:3173   */\n    tag_68:\n        /* \"#utility.yul\":2927:2931   */\n      0x00\n        /* \"#utility.yul\":3017:3035   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3009:3015   */\n      dup3\n        /* \"#utility.yul\":3006:3036   */\n      gt\n        /* \"#utility.yul\":3003:3005   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":3039:3057   */\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3003:3005   */\n    tag_111:\n        /* \"#utility.yul\":3077:3106   */\n      tag_114\n        /* \"#utility.yul\":3099:3105   */\n      dup3\n        /* \"#utility.yul\":3077:3106   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3069:3106   */\n      swap1\n      pop\n        /* \"#utility.yul\":3161:3165   */\n      0x20\n        /* \"#utility.yul\":3155:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3166   */\n      add\n        /* \"#utility.yul\":3143:3166   */\n      swap1\n      pop\n        /* \"#utility.yul\":2932:3173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3179:3364   */\n    tag_24:\n        /* \"#utility.yul\":3219:3220   */\n      0x00\n        /* \"#utility.yul\":3236:3256   */\n      tag_117\n        /* \"#utility.yul\":3254:3255   */\n      dup3\n        /* \"#utility.yul\":3236:3256   */\n      tag_92\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3231:3256   */\n      swap2\n      pop\n        /* \"#utility.yul\":3270:3290   */\n      tag_118\n        /* \"#utility.yul\":3288:3289   */\n      dup4\n        /* \"#utility.yul\":3270:3290   */\n      tag_92\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3265:3290   */\n      swap3\n      pop\n        /* \"#utility.yul\":3309:3310   */\n      dup3\n        /* \"#utility.yul\":3299:3301   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":3314:3332   */\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3299:3301   */\n    tag_119:\n        /* \"#utility.yul\":3356:3357   */\n      dup3\n        /* \"#utility.yul\":3353:3354   */\n      dup3\n        /* \"#utility.yul\":3349:3358   */\n      div\n        /* \"#utility.yul\":3344:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3221:3364   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3370:3718   */\n    tag_22:\n        /* \"#utility.yul\":3410:3417   */\n      0x00\n        /* \"#utility.yul\":3433:3453   */\n      tag_123\n        /* \"#utility.yul\":3451:3452   */\n      dup3\n        /* \"#utility.yul\":3433:3453   */\n      tag_92\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3428:3453   */\n      swap2\n      pop\n        /* \"#utility.yul\":3467:3487   */\n      tag_124\n        /* \"#utility.yul\":3485:3486   */\n      dup4\n        /* \"#utility.yul\":3467:3487   */\n      tag_92\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3462:3487   */\n      swap3\n      pop\n        /* \"#utility.yul\":3655:3656   */\n      dup2\n        /* \"#utility.yul\":3587:3653   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3583:3657   */\n      div\n        /* \"#utility.yul\":3580:3581   */\n      dup4\n        /* \"#utility.yul\":3577:3658   */\n      gt\n        /* \"#utility.yul\":3572:3573   */\n      dup3\n        /* \"#utility.yul\":3565:3574   */\n      iszero\n        /* \"#utility.yul\":3558:3575   */\n      iszero\n        /* \"#utility.yul\":3554:3659   */\n      and\n        /* \"#utility.yul\":3551:3553   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":3662:3680   */\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3551:3553   */\n    tag_125:\n        /* \"#utility.yul\":3710:3711   */\n      dup3\n        /* \"#utility.yul\":3707:3708   */\n      dup3\n        /* \"#utility.yul\":3703:3712   */\n      mul\n        /* \"#utility.yul\":3692:3712   */\n      swap1\n      pop\n        /* \"#utility.yul\":3418:3718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3724:3915   */\n    tag_34:\n        /* \"#utility.yul\":3764:3768   */\n      0x00\n        /* \"#utility.yul\":3784:3804   */\n      tag_129\n        /* \"#utility.yul\":3802:3803   */\n      dup3\n        /* \"#utility.yul\":3784:3804   */\n      tag_92\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3779:3804   */\n      swap2\n      pop\n        /* \"#utility.yul\":3818:3838   */\n      tag_130\n        /* \"#utility.yul\":3836:3837   */\n      dup4\n        /* \"#utility.yul\":3818:3838   */\n      tag_92\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3813:3838   */\n      swap3\n      pop\n        /* \"#utility.yul\":3857:3858   */\n      dup3\n        /* \"#utility.yul\":3854:3855   */\n      dup3\n        /* \"#utility.yul\":3851:3859   */\n      lt\n        /* \"#utility.yul\":3848:3850   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3862:3880   */\n      tag_132\n      tag_127\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3848:3850   */\n    tag_131:\n        /* \"#utility.yul\":3907:3908   */\n      dup3\n        /* \"#utility.yul\":3904:3905   */\n      dup3\n        /* \"#utility.yul\":3900:3909   */\n      sub\n        /* \"#utility.yul\":3892:3909   */\n      swap1\n      pop\n        /* \"#utility.yul\":3769:3915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:3998   */\n    tag_92:\n        /* \"#utility.yul\":3958:3965   */\n      0x00\n        /* \"#utility.yul\":3987:3992   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      swap1\n      pop\n        /* \"#utility.yul\":3966:3998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4004:4158   */\n    tag_72:\n        /* \"#utility.yul\":4088:4094   */\n      dup3\n        /* \"#utility.yul\":4083:4086   */\n      dup2\n        /* \"#utility.yul\":4078:4081   */\n      dup4\n        /* \"#utility.yul\":4065:4095   */\n      calldatacopy\n        /* \"#utility.yul\":4150:4151   */\n      0x00\n        /* \"#utility.yul\":4141:4147   */\n      dup4\n        /* \"#utility.yul\":4136:4139   */\n      dup4\n        /* \"#utility.yul\":4132:4148   */\n      add\n        /* \"#utility.yul\":4125:4152   */\n      mstore\n        /* \"#utility.yul\":4055:4158   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4164:4445   */\n    tag_108:\n        /* \"#utility.yul\":4247:4274   */\n      tag_136\n        /* \"#utility.yul\":4269:4273   */\n      dup3\n        /* \"#utility.yul\":4247:4274   */\n      tag_115\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4239:4245   */\n      dup2\n        /* \"#utility.yul\":4235:4275   */\n      add\n        /* \"#utility.yul\":4377:4383   */\n      dup2\n        /* \"#utility.yul\":4365:4375   */\n      dup2\n        /* \"#utility.yul\":4362:4384   */\n      lt\n        /* \"#utility.yul\":4341:4359   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4329:4339   */\n      dup3\n        /* \"#utility.yul\":4326:4360   */\n      gt\n        /* \"#utility.yul\":4323:4385   */\n      or\n        /* \"#utility.yul\":4320:4322   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":4388:4406   */\n      tag_138\n      tag_113\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4320:4322   */\n    tag_137:\n        /* \"#utility.yul\":4428:4438   */\n      dup1\n        /* \"#utility.yul\":4424:4426   */\n      0x40\n        /* \"#utility.yul\":4417:4439   */\n      mstore\n        /* \"#utility.yul\":4207:4445   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4451:4684   */\n    tag_37:\n        /* \"#utility.yul\":4490:4493   */\n      0x00\n        /* \"#utility.yul\":4513:4537   */\n      tag_140\n        /* \"#utility.yul\":4531:4536   */\n      dup3\n        /* \"#utility.yul\":4513:4537   */\n      tag_92\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4504:4537   */\n      swap2\n      pop\n        /* \"#utility.yul\":4559:4625   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4552:4557   */\n      dup3\n        /* \"#utility.yul\":4549:4626   */\n      eq\n        /* \"#utility.yul\":4546:4548   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":4629:4647   */\n      tag_142\n      tag_127\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4546:4548   */\n    tag_141:\n        /* \"#utility.yul\":4676:4677   */\n      0x01\n        /* \"#utility.yul\":4669:4674   */\n      dup3\n        /* \"#utility.yul\":4665:4678   */\n      add\n        /* \"#utility.yul\":4658:4678   */\n      swap1\n      pop\n        /* \"#utility.yul\":4494:4684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4690:4769   */\n    tag_97:\n        /* \"#utility.yul\":4729:4736   */\n      0x00\n        /* \"#utility.yul\":4758:4763   */\n      dup2\n        /* \"#utility.yul\":4747:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4737:4769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4775:4951   */\n    tag_62:\n        /* \"#utility.yul\":4807:4808   */\n      0x00\n        /* \"#utility.yul\":4824:4844   */\n      tag_145\n        /* \"#utility.yul\":4842:4843   */\n      dup3\n        /* \"#utility.yul\":4824:4844   */\n      tag_92\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4819:4844   */\n      swap2\n      pop\n        /* \"#utility.yul\":4858:4878   */\n      tag_146\n        /* \"#utility.yul\":4876:4877   */\n      dup4\n        /* \"#utility.yul\":4858:4878   */\n      tag_92\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4853:4878   */\n      swap3\n      pop\n        /* \"#utility.yul\":4897:4898   */\n      dup3\n        /* \"#utility.yul\":4887:4889   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":4902:4920   */\n      tag_148\n      tag_121\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4887:4889   */\n    tag_147:\n        /* \"#utility.yul\":4943:4944   */\n      dup3\n        /* \"#utility.yul\":4940:4941   */\n      dup3\n        /* \"#utility.yul\":4936:4945   */\n      mod\n        /* \"#utility.yul\":4931:4945   */\n      swap1\n      pop\n        /* \"#utility.yul\":4809:4951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4957:5137   */\n    tag_127:\n        /* \"#utility.yul\":5005:5082   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5002:5003   */\n      0x00\n        /* \"#utility.yul\":4995:5083   */\n      mstore\n        /* \"#utility.yul\":5102:5106   */\n      0x11\n        /* \"#utility.yul\":5099:5100   */\n      0x04\n        /* \"#utility.yul\":5092:5107   */\n      mstore\n        /* \"#utility.yul\":5126:5130   */\n      0x24\n        /* \"#utility.yul\":5123:5124   */\n      0x00\n        /* \"#utility.yul\":5116:5131   */\n      revert\n        /* \"#utility.yul\":5143:5323   */\n    tag_121:\n        /* \"#utility.yul\":5191:5268   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5188:5189   */\n      0x00\n        /* \"#utility.yul\":5181:5269   */\n      mstore\n        /* \"#utility.yul\":5288:5292   */\n      0x12\n        /* \"#utility.yul\":5285:5286   */\n      0x04\n        /* \"#utility.yul\":5278:5293   */\n      mstore\n        /* \"#utility.yul\":5312:5316   */\n      0x24\n        /* \"#utility.yul\":5309:5310   */\n      0x00\n        /* \"#utility.yul\":5302:5317   */\n      revert\n        /* \"#utility.yul\":5329:5509   */\n    tag_113:\n        /* \"#utility.yul\":5377:5454   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5374:5375   */\n      0x00\n        /* \"#utility.yul\":5367:5455   */\n      mstore\n        /* \"#utility.yul\":5474:5478   */\n      0x41\n        /* \"#utility.yul\":5471:5472   */\n      0x04\n        /* \"#utility.yul\":5464:5479   */\n      mstore\n        /* \"#utility.yul\":5498:5502   */\n      0x24\n        /* \"#utility.yul\":5495:5496   */\n      0x00\n        /* \"#utility.yul\":5488:5503   */\n      revert\n        /* \"#utility.yul\":5515:5617   */\n    tag_115:\n        /* \"#utility.yul\":5556:5562   */\n      0x00\n        /* \"#utility.yul\":5607:5609   */\n      0x1f\n        /* \"#utility.yul\":5603:5610   */\n      not\n        /* \"#utility.yul\":5598:5600   */\n      0x1f\n        /* \"#utility.yul\":5591:5596   */\n      dup4\n        /* \"#utility.yul\":5587:5601   */\n      add\n        /* \"#utility.yul\":5583:5611   */\n      and\n        /* \"#utility.yul\":5573:5611   */\n      swap1\n      pop\n        /* \"#utility.yul\":5563:5617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5745   */\n    tag_80:\n        /* \"#utility.yul\":5696:5720   */\n      tag_154\n        /* \"#utility.yul\":5714:5719   */\n      dup2\n        /* \"#utility.yul\":5696:5720   */\n      tag_92\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5689:5694   */\n      dup2\n        /* \"#utility.yul\":5686:5721   */\n      eq\n        /* \"#utility.yul\":5676:5678   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":5735:5736   */\n      0x00\n        /* \"#utility.yul\":5732:5733   */\n      dup1\n        /* \"#utility.yul\":5725:5737   */\n      revert\n        /* \"#utility.yul\":5676:5678   */\n    tag_155:\n        /* \"#utility.yul\":5666:5745   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122049256bf8c3aecc43e6eab047f799a48f2d52c70b6eb55303c01018cd5479192564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:6"
															},
															"nodeType": "YulIf",
															"src": "243:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:6",
														"type": ""
													}
												],
												"src": "156:284:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:6",
														"type": ""
													}
												],
												"src": "446:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:6",
														"type": ""
													}
												],
												"src": "548:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:6"
															},
															"nodeType": "YulIf",
															"src": "733:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:6",
														"type": ""
													}
												],
												"src": "680:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161083d38038061083d8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b61072f8061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063aa93c0ee1461003b578063b79d5db41461006b575b600080fd5b61005560048036038101906100509190610366565b61009b565b6040516100629190610446565b60405180910390f35b610085600480360381019061008091906103ba565b6100eb565b6040516100929190610446565b60405180910390f35b6000806100a78461014b565b905060006100b484610257565b9050670de0b6b3a7640000600a82846100cd91906104e8565b6100d791906104b7565b6100e191906104e8565b9250505092915050565b600080600190505b60058111610140576000610106826102a5565b905080841061012257808461011b9190610542565b935061012c565b8192505050610146565b508080610138906105c0565b9150506100f3565b50600090505b919050565b600080828051906020012090507f8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f38114610247577f181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310811461023e577f6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f178114610235577fb2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb811461022a577fb5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd8114610222576000610225565b60c85b61022d565b60e15b60ff16610239565b61012c5b610242565b6101c25b61024b565b6102a35b61ffff16915050919050565b600060018214610298576002821461029057600382146102885760048214610280576000610283565b60505b61028b565b602a5b610293565b60165b61029b565b600f5b60ff169050919050565b60006103e84244846040516020016102bf93929190610409565b6040516020818303038152906040528051906020012060001c6102e29190610613565b9050919050565b60006102fc6102f784610486565b610461565b90508281526020810184848401111561031457600080fd5b61031f848285610580565b509392505050565b600082601f83011261033857600080fd5b81356103488482602086016102e9565b91505092915050565b600081359050610360816106e2565b92915050565b6000806040838503121561037957600080fd5b600083013567ffffffffffffffff81111561039357600080fd5b61039f85828601610327565b92505060206103b085828601610351565b9150509250929050565b6000602082840312156103cc57600080fd5b60006103da84828501610351565b91505092915050565b6103ec81610576565b82525050565b6104036103fe82610576565b610609565b82525050565b600061041582866103f2565b60208201915061042582856103f2565b60208201915061043582846103f2565b602082019150819050949350505050565b600060208201905061045b60008301846103e3565b92915050565b600061046b61047c565b9050610477828261058f565b919050565b6000604051905090565b600067ffffffffffffffff8211156104a1576104a06106a2565b5b6104aa826106d1565b9050602081019050919050565b60006104c282610576565b91506104cd83610576565b9250826104dd576104dc610673565b5b828204905092915050565b60006104f382610576565b91506104fe83610576565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561053757610536610644565b5b828202905092915050565b600061054d82610576565b915061055883610576565b92508282101561056b5761056a610644565b5b828203905092915050565b6000819050919050565b82818337600083830152505050565b610598826106d1565b810181811067ffffffffffffffff821117156105b7576105b66106a2565b5b80604052505050565b60006105cb82610576565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105fe576105fd610644565b5b600182019050919050565b6000819050919050565b600061061e82610576565b915061062983610576565b92508261063957610638610673565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6106eb81610576565b81146106f657600080fd5b5056fea264697066735822122049256bf8c3aecc43e6eab047f799a48f2d52c70b6eb55303c01018cd5479192564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x83D CODESIZE SUB DUP1 PUSH2 0x83D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x72F DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA93C0EE EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB79D5DB4 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x3BA JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA7 DUP5 PUSH2 0x14B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4 DUP5 PUSH2 0x257 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0xA DUP3 DUP5 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 DUP2 GT PUSH2 0x140 JUMPI PUSH1 0x0 PUSH2 0x106 DUP3 PUSH2 0x2A5 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT PUSH2 0x122 JUMPI DUP1 DUP5 PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C JUMP JUMPDEST DUP2 SWAP3 POP POP POP PUSH2 0x146 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x138 SWAP1 PUSH2 0x5C0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF3 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x8C57226533EC41D2857120DF9ACE6DFF88130D9B32385E09C9828F75027730F3 DUP2 EQ PUSH2 0x247 JUMPI PUSH32 0x181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310 DUP2 EQ PUSH2 0x23E JUMPI PUSH32 0x6764D804D57285AE9D4C42CC380377D3D0EE9B90FF9EECCAA32D3B2E3E8D7F17 DUP2 EQ PUSH2 0x235 JUMPI PUSH32 0xB2C1AAAF9F516585466C9876E2EAF06EE68751AAD537B2A6FA22F473D03B58EB DUP2 EQ PUSH2 0x22A JUMPI PUSH32 0xB5333297A8BD10E190CB97FB1EE0F49587C8B2E015370E943C69FD680DABC6BD DUP2 EQ PUSH2 0x222 JUMPI PUSH1 0x0 PUSH2 0x225 JUMP JUMPDEST PUSH1 0xC8 JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0xE1 JUMPDEST PUSH1 0xFF AND PUSH2 0x239 JUMP JUMPDEST PUSH2 0x12C JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH2 0x1C2 JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH2 0x2A3 JUMPDEST PUSH2 0xFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x298 JUMPI PUSH1 0x2 DUP3 EQ PUSH2 0x290 JUMPI PUSH1 0x3 DUP3 EQ PUSH2 0x288 JUMPI PUSH1 0x4 DUP3 EQ PUSH2 0x280 JUMPI PUSH1 0x0 PUSH2 0x283 JUMP JUMPDEST PUSH1 0x50 JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH1 0x2A JUMPDEST PUSH2 0x293 JUMP JUMPDEST PUSH1 0x16 JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH1 0xF JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 TIMESTAMP DIFFICULTY DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x613 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC PUSH2 0x2F7 DUP5 PUSH2 0x486 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31F DUP5 DUP3 DUP6 PUSH2 0x580 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x348 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x360 DUP2 PUSH2 0x6E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B0 DUP6 DUP3 DUP7 ADD PUSH2 0x351 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DA DUP5 DUP3 DUP6 ADD PUSH2 0x351 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EC DUP2 PUSH2 0x576 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x403 PUSH2 0x3FE DUP3 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415 DUP3 DUP7 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x425 DUP3 DUP6 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x435 DUP3 DUP5 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46B PUSH2 0x47C JUMP JUMPDEST SWAP1 POP PUSH2 0x477 DUP3 DUP3 PUSH2 0x58F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4A1 JUMPI PUSH2 0x4A0 PUSH2 0x6A2 JUMP JUMPDEST JUMPDEST PUSH2 0x4AA DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CD DUP4 PUSH2 0x576 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4DD JUMPI PUSH2 0x4DC PUSH2 0x673 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FE DUP4 PUSH2 0x576 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x537 JUMPI PUSH2 0x536 PUSH2 0x644 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH2 0x558 DUP4 PUSH2 0x576 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x644 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x6D1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5B7 JUMPI PUSH2 0x5B6 PUSH2 0x6A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5FE JUMPI PUSH2 0x5FD PUSH2 0x644 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH2 0x629 DUP4 PUSH2 0x576 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x673 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6EB DUP2 PUSH2 0x576 JUMP JUMPDEST DUP2 EQ PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0x25 PUSH12 0xF8C3AECC43E6EAB047F799A4 DUP16 0x2D MSTORE 0xC7 SIGNEXTEND PUSH15 0xB55303C01018CD5479192564736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "146:3534:1:-:0;;;540:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;595:5;577:4;;:24;;;;;;;;;;;;;;;;;;540:68;146:3534;;7:143:6;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;146:3534:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5748:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "91:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "101:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "168:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "126:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "110:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "110:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "192:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "199:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "185:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "185:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "185:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "215:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "230:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "237:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "226:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "219:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "280:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "292:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "282:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "282:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "282:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "261:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "257:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:16:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "275:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "254:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:25:6"
															},
															"nodeType": "YulIf",
															"src": "251:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "329:3:6"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "334:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "339:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "305:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "305:41:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "64:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "69:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "77:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "85:5:6",
														"type": ""
													}
												],
												"src": "7:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "434:211:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "483:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "492:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "495:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "485:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "485:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "485:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "462:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "470:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "477:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "454:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "454:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "447:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "447:35:6"
															},
															"nodeType": "YulIf",
															"src": "444:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "508:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "535:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "522:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "512:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "551:88:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "620:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "608:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "608:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "627:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "635:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "560:47:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:79:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "551:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "412:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "420:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "428:5:6",
														"type": ""
													}
												],
												"src": "372:273:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "703:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "713:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "735:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "722:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "722:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "713:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "778:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "751:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "681:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "689:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "697:5:6",
														"type": ""
													}
												],
												"src": "651:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:427:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "935:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "944:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "947:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "937:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "937:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "910:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "919:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "906:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "902:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:32:6"
															},
															"nodeType": "YulIf",
															"src": "899:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "961:220:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "976:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1007:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1018:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1003:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1003:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "990:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "990:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "980:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1068:16:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1077:1:6",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1080:1:6",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1070:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1070:12:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1070:12:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1048:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1037:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1037:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "1034:2:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1098:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1143:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1154:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1139:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1139:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1163:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1108:30:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1098:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1191:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1206:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1220:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1210:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1236:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1271:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1282:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1267:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1267:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1291:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1246:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1236:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "851:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "862:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "874:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "882:6:6",
														"type": ""
													}
												],
												"src": "796:520:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1388:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1434:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1443:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1446:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1436:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1436:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1409:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1418:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1430:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1401:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:32:6"
															},
															"nodeType": "YulIf",
															"src": "1398:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1460:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1475:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1489:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1479:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1504:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1539:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1550:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1559:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1514:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1514:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1504:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1358:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1369:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1381:6:6",
														"type": ""
													}
												],
												"src": "1322:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1655:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1672:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1695:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1677:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1677:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1665:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1665:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1643:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1650:3:6",
														"type": ""
													}
												],
												"src": "1590:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1797:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1814:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1839:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1839:24:6"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1819:19:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1819:45:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1807:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1807:58:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1792:3:6",
														"type": ""
													}
												],
												"src": "1714:157:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2049:366:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2131:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2060:61:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:75:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2060:75:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2144:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2155:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2151:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:12:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2144:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2235:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2244:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2173:61:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:75:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:75:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2257:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2268:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2264:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:12:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2257:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2348:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2357:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2286:61:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:75:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:75:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2370:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2381:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2386:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2377:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:12:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2399:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2406:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2012:3:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2018:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2026:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2034:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2045:3:6",
														"type": ""
													}
												],
												"src": "1877:538:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2519:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2529:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2541:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2537:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2537:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2529:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2609:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2622:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2633:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2618:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2618:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2565:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2565:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2491:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2503:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2514:4:6",
														"type": ""
													}
												],
												"src": "2421:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2690:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2700:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2710:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2759:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2767:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2739:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2674:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2683:6:6",
														"type": ""
													}
												],
												"src": "2649:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2834:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2850:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2817:6:6",
														"type": ""
													}
												],
												"src": "2784:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2932:241:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3037:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3039:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3039:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3039:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3009:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3017:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3006:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3006:30:6"
															},
															"nodeType": "YulIf",
															"src": "3003:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3069:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3099:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3077:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3069:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3143:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3155:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3161:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3143:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2916:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2927:4:6",
														"type": ""
													}
												],
												"src": "2865:308:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3221:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3231:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3254:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3236:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3236:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3231:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3265:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3288:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3270:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3265:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3312:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3314:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3314:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3314:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3309:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3302:9:6"
															},
															"nodeType": "YulIf",
															"src": "3299:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3344:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3353:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3356:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3344:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3210:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3213:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3219:1:6",
														"type": ""
													}
												],
												"src": "3179:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3418:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3428:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3451:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3433:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3428:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3462:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3485:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3467:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3462:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3660:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3662:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3662:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3662:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3572:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3565:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3565:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3558:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3558:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3580:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3587:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3655:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3583:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3583:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3577:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3577:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3554:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3554:105:6"
															},
															"nodeType": "YulIf",
															"src": "3551:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3692:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3707:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3710:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3703:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3692:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3401:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3404:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3410:7:6",
														"type": ""
													}
												],
												"src": "3370:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3769:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3779:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3802:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3784:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3784:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3779:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3813:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3836:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3818:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3813:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3860:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3862:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3862:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3862:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3854:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3857:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3851:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3851:8:6"
															},
															"nodeType": "YulIf",
															"src": "3848:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3892:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3904:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3907:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3892:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3755:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3758:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3764:4:6",
														"type": ""
													}
												],
												"src": "3724:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3966:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3976:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3987:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3976:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3948:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3958:7:6",
														"type": ""
													}
												],
												"src": "3921:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:103:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4078:3:6"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4083:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4088:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4065:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4065:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4065:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4136:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4141:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4132:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4132:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4150:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4125:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4125:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4125:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4037:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4042:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4047:6:6",
														"type": ""
													}
												],
												"src": "4004:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4217:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4239:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "4269:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4247:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4247:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4221:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4386:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4388:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4388:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4388:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4329:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4326:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4326:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4365:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4377:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4362:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4323:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:62:6"
															},
															"nodeType": "YulIf",
															"src": "4320:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4428:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4417:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4417:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4193:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4201:4:6",
														"type": ""
													}
												],
												"src": "4164:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:190:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4531:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4513:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4504:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4629:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4552:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4559:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4549:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4549:77:6"
															},
															"nodeType": "YulIf",
															"src": "4546:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4658:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4669:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4676:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4658:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4480:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4490:3:6",
														"type": ""
													}
												],
												"src": "4451:233:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4747:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4758:5:6"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "4747:7:6"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4719:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "4729:7:6",
														"type": ""
													}
												],
												"src": "4690:79:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:142:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4819:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4842:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4824:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4824:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4819:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4853:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4876:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4858:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4858:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4853:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4900:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4902:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4902:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4902:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4897:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4890:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:9:6"
															},
															"nodeType": "YulIf",
															"src": "4887:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4931:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4940:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4943:1:6"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "4936:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4936:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4931:1:6"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4798:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4801:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4807:1:6",
														"type": ""
													}
												],
												"src": "4775:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4985:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5002:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5005:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4995:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4995:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5099:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5102:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5092:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5123:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5126:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5116:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5116:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4957:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5171:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5191:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5181:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5181:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5181:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5288:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5278:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5278:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5278:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5309:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5312:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5302:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5302:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5143:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5357:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5374:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5377:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5367:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5471:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5474:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5464:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5464:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5464:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5495:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5498:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5488:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5488:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5488:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5329:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5563:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5573:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5591:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5598:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5587:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5607:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5603:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5603:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5583:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5583:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5573:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5546:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5556:6:6",
														"type": ""
													}
												],
												"src": "5515:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5666:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5723:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5732:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5735:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5725:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5725:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5725:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5689:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5714:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5696:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5696:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5686:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:43:6"
															},
															"nodeType": "YulIf",
															"src": "5676:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5659:5:6",
														"type": ""
													}
												],
												"src": "5623:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063aa93c0ee1461003b578063b79d5db41461006b575b600080fd5b61005560048036038101906100509190610366565b61009b565b6040516100629190610446565b60405180910390f35b610085600480360381019061008091906103ba565b6100eb565b6040516100929190610446565b60405180910390f35b6000806100a78461014b565b905060006100b484610257565b9050670de0b6b3a7640000600a82846100cd91906104e8565b6100d791906104b7565b6100e191906104e8565b9250505092915050565b600080600190505b60058111610140576000610106826102a5565b905080841061012257808461011b9190610542565b935061012c565b8192505050610146565b508080610138906105c0565b9150506100f3565b50600090505b919050565b600080828051906020012090507f8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f38114610247577f181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310811461023e577f6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f178114610235577fb2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb811461022a577fb5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd8114610222576000610225565b60c85b61022d565b60e15b60ff16610239565b61012c5b610242565b6101c25b61024b565b6102a35b61ffff16915050919050565b600060018214610298576002821461029057600382146102885760048214610280576000610283565b60505b61028b565b602a5b610293565b60165b61029b565b600f5b60ff169050919050565b60006103e84244846040516020016102bf93929190610409565b6040516020818303038152906040528051906020012060001c6102e29190610613565b9050919050565b60006102fc6102f784610486565b610461565b90508281526020810184848401111561031457600080fd5b61031f848285610580565b509392505050565b600082601f83011261033857600080fd5b81356103488482602086016102e9565b91505092915050565b600081359050610360816106e2565b92915050565b6000806040838503121561037957600080fd5b600083013567ffffffffffffffff81111561039357600080fd5b61039f85828601610327565b92505060206103b085828601610351565b9150509250929050565b6000602082840312156103cc57600080fd5b60006103da84828501610351565b91505092915050565b6103ec81610576565b82525050565b6104036103fe82610576565b610609565b82525050565b600061041582866103f2565b60208201915061042582856103f2565b60208201915061043582846103f2565b602082019150819050949350505050565b600060208201905061045b60008301846103e3565b92915050565b600061046b61047c565b9050610477828261058f565b919050565b6000604051905090565b600067ffffffffffffffff8211156104a1576104a06106a2565b5b6104aa826106d1565b9050602081019050919050565b60006104c282610576565b91506104cd83610576565b9250826104dd576104dc610673565b5b828204905092915050565b60006104f382610576565b91506104fe83610576565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561053757610536610644565b5b828202905092915050565b600061054d82610576565b915061055883610576565b92508282101561056b5761056a610644565b5b828203905092915050565b6000819050919050565b82818337600083830152505050565b610598826106d1565b810181811067ffffffffffffffff821117156105b7576105b66106a2565b5b80604052505050565b60006105cb82610576565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105fe576105fd610644565b5b600182019050919050565b6000819050919050565b600061061e82610576565b915061062983610576565b92508261063957610638610673565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6106eb81610576565b81146106f657600080fd5b5056fea264697066735822122049256bf8c3aecc43e6eab047f799a48f2d52c70b6eb55303c01018cd5479192564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA93C0EE EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB79D5DB4 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x3BA JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA7 DUP5 PUSH2 0x14B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4 DUP5 PUSH2 0x257 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0xA DUP3 DUP5 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x4E8 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 DUP2 GT PUSH2 0x140 JUMPI PUSH1 0x0 PUSH2 0x106 DUP3 PUSH2 0x2A5 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT PUSH2 0x122 JUMPI DUP1 DUP5 PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C JUMP JUMPDEST DUP2 SWAP3 POP POP POP PUSH2 0x146 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x138 SWAP1 PUSH2 0x5C0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF3 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x8C57226533EC41D2857120DF9ACE6DFF88130D9B32385E09C9828F75027730F3 DUP2 EQ PUSH2 0x247 JUMPI PUSH32 0x181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310 DUP2 EQ PUSH2 0x23E JUMPI PUSH32 0x6764D804D57285AE9D4C42CC380377D3D0EE9B90FF9EECCAA32D3B2E3E8D7F17 DUP2 EQ PUSH2 0x235 JUMPI PUSH32 0xB2C1AAAF9F516585466C9876E2EAF06EE68751AAD537B2A6FA22F473D03B58EB DUP2 EQ PUSH2 0x22A JUMPI PUSH32 0xB5333297A8BD10E190CB97FB1EE0F49587C8B2E015370E943C69FD680DABC6BD DUP2 EQ PUSH2 0x222 JUMPI PUSH1 0x0 PUSH2 0x225 JUMP JUMPDEST PUSH1 0xC8 JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0xE1 JUMPDEST PUSH1 0xFF AND PUSH2 0x239 JUMP JUMPDEST PUSH2 0x12C JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH2 0x1C2 JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH2 0x2A3 JUMPDEST PUSH2 0xFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x298 JUMPI PUSH1 0x2 DUP3 EQ PUSH2 0x290 JUMPI PUSH1 0x3 DUP3 EQ PUSH2 0x288 JUMPI PUSH1 0x4 DUP3 EQ PUSH2 0x280 JUMPI PUSH1 0x0 PUSH2 0x283 JUMP JUMPDEST PUSH1 0x50 JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH1 0x2A JUMPDEST PUSH2 0x293 JUMP JUMPDEST PUSH1 0x16 JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH1 0xF JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 TIMESTAMP DIFFICULTY DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x613 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC PUSH2 0x2F7 DUP5 PUSH2 0x486 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31F DUP5 DUP3 DUP6 PUSH2 0x580 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x348 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x360 DUP2 PUSH2 0x6E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B0 DUP6 DUP3 DUP7 ADD PUSH2 0x351 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DA DUP5 DUP3 DUP6 ADD PUSH2 0x351 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EC DUP2 PUSH2 0x576 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x403 PUSH2 0x3FE DUP3 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x415 DUP3 DUP7 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x425 DUP3 DUP6 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x435 DUP3 DUP5 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46B PUSH2 0x47C JUMP JUMPDEST SWAP1 POP PUSH2 0x477 DUP3 DUP3 PUSH2 0x58F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4A1 JUMPI PUSH2 0x4A0 PUSH2 0x6A2 JUMP JUMPDEST JUMPDEST PUSH2 0x4AA DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CD DUP4 PUSH2 0x576 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4DD JUMPI PUSH2 0x4DC PUSH2 0x673 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FE DUP4 PUSH2 0x576 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x537 JUMPI PUSH2 0x536 PUSH2 0x644 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH2 0x558 DUP4 PUSH2 0x576 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x644 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x598 DUP3 PUSH2 0x6D1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5B7 JUMPI PUSH2 0x5B6 PUSH2 0x6A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5FE JUMPI PUSH2 0x5FD PUSH2 0x644 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP3 PUSH2 0x576 JUMP JUMPDEST SWAP2 POP PUSH2 0x629 DUP4 PUSH2 0x576 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x673 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6EB DUP2 PUSH2 0x576 JUMP JUMPDEST DUP2 EQ PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0x25 PUSH12 0xF8C3AECC43E6EAB047F799A4 DUP16 0x2D MSTORE 0xC7 SIGNEXTEND PUSH15 0xB55303C01018CD5479192564736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "146:3534:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1768:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:335;742:7;765:19;787:32;813:5;787:25;:32::i;:::-;765:54;;829:19;851:32;877:5;851:25;:32::i;:::-;829:54;;938:4;932:2;917:11;903;:25;;;;:::i;:::-;902:32;;;;:::i;:::-;901:41;;;;:::i;:::-;894:48;;;;614:335;;;;:::o;1768:407::-;1876:7;1904:9;1916:1;1904:13;;1899:251;1924:1;1919;:6;1899:251;;1946:20;1969:26;1993:1;1969:23;:26::i;:::-;1946:49;;2024:12;2014:6;:22;2010:130;;2066:12;2056:22;;;;;:::i;:::-;;;2010:130;;;2124:1;2117:8;;;;;;2010:130;1899:251;1927:3;;;;;:::i;:::-;;;;1899:251;;;;2167:1;2160:8;;1768:407;;;;:::o;1241:521::-;1361:7;1384:18;1421:5;1405:23;;;;;;1384:44;;229:22;1460:10;:23;:285;;294:22;1492:10;:23;:253;;354:17;1556:10;:18;:189;;418:26;1615:10;:27;:130;;484:19;1683:10;:20;:62;;1744:1;1683:62;;;1722:3;1683:62;1615:130;;;1661:3;1615:130;1556:189;;;;;1593:3;1556:189;1492:253;;;1534:3;1492:253;1460:285;;;1486:3;1460:285;1439:316;;;;;1241:521;;;:::o;955:280::-;1069:7;1122:1;1113:5;:10;:105;;1140:1;1131:5;:10;:87;;1158:1;1149:5;:10;:69;;1176:1;1167:5;:10;:51;;1217:1;1167:51;;;1196:2;1167:51;1149:69;;;1162:2;1149:69;1131:87;;;1144:2;1131:87;1113:105;;;1126:2;1113:105;1092:136;;;;955:280;;;:::o;3258:420::-;3376:7;3667:4;3516:15;3557:16;3599:11;3474:158;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3443:207;;;;;;3418:246;;:253;;;;:::i;:::-;3399:272;;3258:420;;;:::o;7:345:6:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;372:273::-;428:5;477:3;470:4;462:6;458:17;454:27;444:2;;495:1;492;485:12;444:2;535:6;522:20;560:79;635:3;627:6;620:4;612:6;608:17;560:79;:::i;:::-;551:88;;434:211;;;;;:::o;651:139::-;697:5;735:6;722:20;713:29;;751:33;778:5;751:33;:::i;:::-;703:87;;;;:::o;796:520::-;874:6;882;931:2;919:9;910:7;906:23;902:32;899:2;;;947:1;944;937:12;899:2;1018:1;1007:9;1003:17;990:31;1048:18;1040:6;1037:30;1034:2;;;1080:1;1077;1070:12;1034:2;1108:63;1163:7;1154:6;1143:9;1139:22;1108:63;:::i;:::-;1098:73;;961:220;1220:2;1246:53;1291:7;1282:6;1271:9;1267:22;1246:53;:::i;:::-;1236:63;;1191:118;889:427;;;;;:::o;1322:262::-;1381:6;1430:2;1418:9;1409:7;1405:23;1401:32;1398:2;;;1446:1;1443;1436:12;1398:2;1489:1;1514:53;1559:7;1550:6;1539:9;1535:22;1514:53;:::i;:::-;1504:63;;1460:117;1388:196;;;;:::o;1590:118::-;1677:24;1695:5;1677:24;:::i;:::-;1672:3;1665:37;1655:53;;:::o;1714:157::-;1819:45;1839:24;1857:5;1839:24;:::i;:::-;1819:45;:::i;:::-;1814:3;1807:58;1797:74;;:::o;1877:538::-;2045:3;2060:75;2131:3;2122:6;2060:75;:::i;:::-;2160:2;2155:3;2151:12;2144:19;;2173:75;2244:3;2235:6;2173:75;:::i;:::-;2273:2;2268:3;2264:12;2257:19;;2286:75;2357:3;2348:6;2286:75;:::i;:::-;2386:2;2381:3;2377:12;2370:19;;2406:3;2399:10;;2049:366;;;;;;:::o;2421:222::-;2514:4;2552:2;2541:9;2537:18;2529:26;;2565:71;2633:1;2622:9;2618:17;2609:6;2565:71;:::i;:::-;2519:124;;;;:::o;2649:129::-;2683:6;2710:20;;:::i;:::-;2700:30;;2739:33;2767:4;2759:6;2739:33;:::i;:::-;2690:88;;;:::o;2784:75::-;2817:6;2850:2;2844:9;2834:19;;2824:35;:::o;2865:308::-;2927:4;3017:18;3009:6;3006:30;3003:2;;;3039:18;;:::i;:::-;3003:2;3077:29;3099:6;3077:29;:::i;:::-;3069:37;;3161:4;3155;3151:15;3143:23;;2932:241;;;:::o;3179:185::-;3219:1;3236:20;3254:1;3236:20;:::i;:::-;3231:25;;3270:20;3288:1;3270:20;:::i;:::-;3265:25;;3309:1;3299:2;;3314:18;;:::i;:::-;3299:2;3356:1;3353;3349:9;3344:14;;3221:143;;;;:::o;3370:348::-;3410:7;3433:20;3451:1;3433:20;:::i;:::-;3428:25;;3467:20;3485:1;3467:20;:::i;:::-;3462:25;;3655:1;3587:66;3583:74;3580:1;3577:81;3572:1;3565:9;3558:17;3554:105;3551:2;;;3662:18;;:::i;:::-;3551:2;3710:1;3707;3703:9;3692:20;;3418:300;;;;:::o;3724:191::-;3764:4;3784:20;3802:1;3784:20;:::i;:::-;3779:25;;3818:20;3836:1;3818:20;:::i;:::-;3813:25;;3857:1;3854;3851:8;3848:2;;;3862:18;;:::i;:::-;3848:2;3907:1;3904;3900:9;3892:17;;3769:146;;;;:::o;3921:77::-;3958:7;3987:5;3976:16;;3966:32;;;:::o;4004:154::-;4088:6;4083:3;4078;4065:30;4150:1;4141:6;4136:3;4132:16;4125:27;4055:103;;;:::o;4164:281::-;4247:27;4269:4;4247:27;:::i;:::-;4239:6;4235:40;4377:6;4365:10;4362:22;4341:18;4329:10;4326:34;4323:62;4320:2;;;4388:18;;:::i;:::-;4320:2;4428:10;4424:2;4417:22;4207:238;;;:::o;4451:233::-;4490:3;4513:24;4531:5;4513:24;:::i;:::-;4504:33;;4559:66;4552:5;4549:77;4546:2;;;4629:18;;:::i;:::-;4546:2;4676:1;4669:5;4665:13;4658:20;;4494:190;;;:::o;4690:79::-;4729:7;4758:5;4747:16;;4737:32;;;:::o;4775:176::-;4807:1;4824:20;4842:1;4824:20;:::i;:::-;4819:25;;4858:20;4876:1;4858:20;:::i;:::-;4853:25;;4897:1;4887:2;;4902:18;;:::i;:::-;4887:2;4943:1;4940;4936:9;4931:14;;4809:142;;;;:::o;4957:180::-;5005:77;5002:1;4995:88;5102:4;5099:1;5092:15;5126:4;5123:1;5116:15;5143:180;5191:77;5188:1;5181:88;5288:4;5285:1;5278:15;5312:4;5309:1;5302:15;5329:180;5377:77;5374:1;5367:88;5474:4;5471:1;5464:15;5498:4;5495:1;5488:15;5515:102;5556:6;5607:2;5603:7;5598:2;5591:5;5587:14;5583:28;5573:38;;5563:54;;;:::o;5623:122::-;5696:24;5714:5;5696:24;:::i;:::-;5689:5;5686:35;5676:2;;5735:1;5732;5725:12;5676:2;5666:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "367800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateItemIndex(uint256)": "infinite",
								"calculateTokenAmount(string,uint256)": "infinite"
							},
							"internal": {
								"calculateBasicGradeAmount(string memory)": "infinite",
								"calculateBasicLevelAmount(uint256)": "170",
								"calculatePower(string memory,uint256)": "infinite",
								"makeRandomNumberForItem(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 3680,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 540,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 608,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 540,
									"end": 608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 540,
									"end": 608,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 540,
									"end": 608,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 540,
									"end": 608,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 540,
									"end": 608,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 540,
									"end": 608,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 540,
									"end": 608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 595,
									"end": 600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 577,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 581,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 577,
									"end": 601,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 577,
									"end": 601,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 577,
									"end": 601,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 577,
									"end": 601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 540,
									"end": 608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 585,
									"end": 592,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 3680,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049256bf8c3aecc43e6eab047f799a48f2d52c70b6eb55303c01018cd5479192564736f6c63430008040033",
									".code": [
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "AA93C0EE"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "B79D5DB4"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 614,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 787,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 787,
											"end": 819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 787,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 765,
											"end": 819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 765,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 877,
											"end": 882,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 851,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 851,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 851,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 829,
											"end": 883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 938,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 917,
											"end": 928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 903,
											"end": 914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 903,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 903,
											"end": 928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 903,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 903,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 903,
											"end": 928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 928,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 903,
											"end": 928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 901,
											"end": 942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 901,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 901,
											"end": 942,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 901,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 901,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 894,
											"end": 942,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1917,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1919,
											"end": 1920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1969,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2036,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2010,
											"end": 2140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2010,
											"end": 2140,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2140,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2010,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2117,
											"end": 2125,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2140,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2010,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1241,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1241,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1428,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 251,
											"name": "PUSH",
											"source": 1,
											"value": "8C57226533EC41D2857120DF9ACE6DFF88130D9B32385E09C9828F75027730F3"
										},
										{
											"begin": 1460,
											"end": 1470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1483,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1460,
											"end": 1745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 294,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310"
										},
										{
											"begin": 1492,
											"end": 1502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 354,
											"end": 371,
											"name": "PUSH",
											"source": 1,
											"value": "6764D804D57285AE9D4C42CC380377D3D0EE9B90FF9EECCAA32D3B2E3E8D7F17"
										},
										{
											"begin": 1556,
											"end": 1566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 418,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "B2C1AAAF9F516585466C9876E2EAF06EE68751AAD537B2A6FA22F473D03B58EB"
										},
										{
											"begin": 1615,
											"end": 1625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1615,
											"end": 1745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH",
											"source": 1,
											"value": "B5333297A8BD10E190CB97FB1EE0F49587C8B2E015370E943C69FD680DABC6BD"
										},
										{
											"begin": 1683,
											"end": 1693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1703,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1683,
											"end": 1745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1683,
											"end": 1745,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1683,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1725,
											"name": "PUSH",
											"source": 1,
											"value": "C8"
										},
										{
											"begin": 1683,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1683,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1615,
											"end": 1745,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1615,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1664,
											"name": "PUSH",
											"source": 1,
											"value": "E1"
										},
										{
											"begin": 1615,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1615,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "12C"
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1556,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1492,
											"end": 1745,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "1C2"
										},
										{
											"begin": 1492,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1492,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1460,
											"end": 1745,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1460,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1489,
											"name": "PUSH",
											"source": 1,
											"value": "2A3"
										},
										{
											"begin": 1460,
											"end": 1745,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1460,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1755,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 1439,
											"end": 1755,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 955,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1113,
											"end": 1118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1123,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1113,
											"end": 1218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1131,
											"end": 1218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1149,
											"end": 1154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1159,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1149,
											"end": 1218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1177,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1149,
											"end": 1218,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1149,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 1149,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1149,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1131,
											"end": 1218,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1131,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1131,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1131,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1113,
											"end": 1218,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1113,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1128,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1113,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1113,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1092,
											"end": 1228,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3258,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3258,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3671,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 3516,
											"end": 3531,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3573,
											"name": "DIFFICULTY",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3610,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 3632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3443,
											"end": 3650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3650,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3664,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3418,
											"end": 3671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3418,
											"end": 3671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3418,
											"end": 3671,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3418,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3678,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 85,
											"end": 90,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 168,
											"end": 174,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 101,
											"end": 176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 101,
											"end": 176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 192,
											"end": 197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 237,
											"end": 241,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 226,
											"end": 242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 278,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 266,
											"end": 272,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 261,
											"end": 264,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 257,
											"end": 273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 254,
											"end": 279,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 253,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 292,
											"end": 293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 290,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 282,
											"end": 294,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 253,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 305,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 334,
											"end": 337,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 332,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 305,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 372,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 372,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 428,
											"end": 433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 470,
											"end": 474,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 462,
											"end": 468,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 458,
											"end": 475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 454,
											"end": 481,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 444,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 444,
											"end": 446,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 495,
											"end": 496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 497,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 444,
											"end": 446,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 444,
											"end": 446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 522,
											"end": 542,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 635,
											"end": 638,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 627,
											"end": 633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 620,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 618,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 608,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 651,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 651,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 697,
											"end": 702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 722,
											"end": 742,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 778,
											"end": 783,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 796,
											"end": 1316,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 796,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 928,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 906,
											"end": 929,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 899,
											"end": 901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 937,
											"end": 949,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 899,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1018,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1016,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1021,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1152,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1171,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1280,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1299,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1322,
											"end": 1584,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1322,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1381,
											"end": 1387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1427,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1428,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1433,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1446,
											"end": 1447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1559,
											"end": 1566,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1556,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1548,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1557,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1514,
											"end": 1567,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1567,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1514,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1460,
											"end": 1577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1584,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1584,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1584,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1590,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1695,
											"end": 1700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1708,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1871,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1714,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1839,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1857,
											"end": 1862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1839,
											"end": 1863,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1839,
											"end": 1863,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1839,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1819,
											"end": 1864,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1819,
											"end": 1864,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1819,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1807,
											"end": 1865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1871,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1877,
											"end": 2415,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1877,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2060,
											"end": 2135,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2060,
											"end": 2135,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2060,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2162,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2244,
											"end": 2247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2241,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2173,
											"end": 2248,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2173,
											"end": 2248,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2173,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2357,
											"end": 2360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2286,
											"end": 2361,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2361,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2286,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2415,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2415,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2415,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2421,
											"end": 2643,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2421,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2631,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2565,
											"end": 2636,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2565,
											"end": 2636,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2565,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2643,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2643,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2643,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2649,
											"end": 2778,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2649,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2767,
											"end": 2771,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2778,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2784,
											"end": 2859,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2784,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2852,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2859,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2865,
											"end": 3173,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2865,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3035,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3009,
											"end": 3015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3036,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3077,
											"end": 3106,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3077,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3173,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3179,
											"end": 3364,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3179,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3270,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3290,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3299,
											"end": 3301,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3301,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3299,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3364,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3364,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3370,
											"end": 3718,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3370,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3451,
											"end": 3452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3433,
											"end": 3453,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3433,
											"end": 3453,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3433,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3485,
											"end": 3486,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3655,
											"end": 3656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3653,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3583,
											"end": 3657,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3580,
											"end": 3581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3658,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3573,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3574,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3659,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3712,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3418,
											"end": 3718,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3418,
											"end": 3718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3418,
											"end": 3718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3418,
											"end": 3718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3418,
											"end": 3718,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3724,
											"end": 3915,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3724,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3779,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3836,
											"end": 3837,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3818,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3838,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3859,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3908,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3915,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3915,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3915,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3921,
											"end": 3998,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3921,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3998,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4004,
											"end": 4158,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4004,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4081,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4147,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4136,
											"end": 4139,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4152,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4158,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4164,
											"end": 4445,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4164,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4247,
											"end": 4274,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4247,
											"end": 4274,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4247,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4235,
											"end": 4275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4359,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4329,
											"end": 4339,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4360,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4323,
											"end": 4385,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4428,
											"end": 4438,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4445,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4451,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4531,
											"end": 4536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4625,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4552,
											"end": 4557,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4629,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4629,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4629,
											"end": 4647,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4629,
											"end": 4647,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4629,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4677,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4669,
											"end": 4674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4665,
											"end": 4678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4684,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4690,
											"end": 4769,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4690,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4769,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4769,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4775,
											"end": 4951,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4775,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4824,
											"end": 4844,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4824,
											"end": 4844,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4824,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4876,
											"end": 4877,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4858,
											"end": 4878,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4878,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4858,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4898,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4887,
											"end": 4889,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4902,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4902,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4902,
											"end": 4920,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4920,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4902,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 4889,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4887,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4945,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4951,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4951,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4951,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4957,
											"end": 5137,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4957,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5082,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5002,
											"end": 5003,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5131,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5143,
											"end": 5323,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5143,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5268,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5188,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5292,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5285,
											"end": 5286,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5278,
											"end": 5293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5316,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5509,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5329,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5454,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5374,
											"end": 5375,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5478,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5471,
											"end": 5472,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5464,
											"end": 5479,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5495,
											"end": 5496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5503,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5515,
											"end": 5617,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5515,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5609,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5603,
											"end": 5610,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5600,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5591,
											"end": 5596,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 5611,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5617,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5623,
											"end": 5745,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5623,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5714,
											"end": 5719,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5696,
											"end": 5720,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5696,
											"end": 5720,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5696,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 5721,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5725,
											"end": 5737,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5666,
											"end": 5745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5666,
											"end": 5745,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"calculateItemIndex(uint256)": "b79d5db4",
							"calculateTokenAmount(string,uint256)": "aa93c0ee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"calculateItemIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/utils/LevelDiagram.sol\":\"LevelDiagram\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0x320246d398001c87c0856d9b80a9892a6b3060495448912fa63623204acc400a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efa42f5a34077ec4e7504c678b7afd5628ba5891f70f452b87fd371e21a84ff4\",\"dweb:/ipfs/QmQPYaaYFmAEF9TZJjpc8HVi2T6Vy2TpLLFDsPUD7inngC\"]},\"Hero/utils/LevelDiagram.sol\":{\"keccak256\":\"0x3b98f2a19bed6d2c418121c107adbc3cafdd3aa359b7f67d280d70b4fb12a25f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f93e5d0e1bcaf99fa9ca6c8bbacf0548d02a8af98e8466617f651df8a4aec435\",\"dweb:/ipfs/QmVNZ3vUEthzEh7XYfyoqha6oqWgqzv29ZHNGg4Uku4J61\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "item",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IKIP37Full)556"
							}
						],
						"types": {
							"t_contract(IKIP37Full)556": {
								"encoding": "inplace",
								"label": "contract IKIP37Full",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP13.sol": {
				"IKIP13": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP13.sol\":\"IKIP13\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37.sol": {
				"IKIP37": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37.sol\":\"IKIP37\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"IKIP37Full": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37Full.sol\":\"IKIP37Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"IKIP37MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37MetadataURI.sol\":\"IKIP37MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Hero/interface/ILevelDiagram.sol": {
				"ast": {
					"absolutePath": "Hero/interface/ILevelDiagram.sol",
					"exportedSymbols": {
						"ILevelDiagram": [
							48
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "ILevelDiagram",
							"nameLocation": "74:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "aa93c0ee",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "104:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "139:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "125:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "125:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "154:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "146:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:36:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "222:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "221:9:0"
									},
									"scope": 48,
									"src": "95:136:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicLevelAmount",
									"nameLocation": "246:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "280:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "272:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:15:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "350:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:9:0"
									},
									"scope": 48,
									"src": "237:122:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicGradeAmount",
									"nameLocation": "374:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "414:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "400:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "400:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:21:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "484:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:9:0"
									},
									"scope": 48,
									"src": "365:128:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"functionSelector": "b79d5db4",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateItemIndex",
									"nameLocation": "508:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "535:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "527:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:16:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:0"
									},
									"scope": 48,
									"src": "499:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePower",
									"nameLocation": "630:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "659:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "645:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "645:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "674:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:36:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "744:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:9:0"
									},
									"scope": 48,
									"src": "621:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makeRandomNumberForItem",
									"nameLocation": "768:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "800:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "792:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:21:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "876:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:9:0"
									},
									"scope": 48,
									"src": "759:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 49,
							"src": "56:831:0",
							"usedErrors": []
						}
					],
					"src": "32:855:0"
				},
				"id": 0
			},
			"Hero/utils/LevelDiagram.sol": {
				"ast": {
					"absolutePath": "Hero/utils/LevelDiagram.sol",
					"exportedSymbols": {
						"IKIP13": [
							414
						],
						"IKIP37": [
							532
						],
						"IKIP37Full": [
							556
						],
						"IKIP37MetadataURI": [
							569
						],
						"ILevelDiagram": [
							48
						],
						"LevelDiagram": [
							402
						]
					},
					"id": 403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 50,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37Full.sol",
							"file": "../../interface/IKIP37/IKIP37Full.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 403,
							"sourceUnit": 557,
							"src": "56:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Hero/interface/ILevelDiagram.sol",
							"file": "../interface/ILevelDiagram.sol",
							"id": 52,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 403,
							"sourceUnit": 49,
							"src": "104:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 53,
										"name": "ILevelDiagram",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 48,
										"src": "171:13:1"
									},
									"id": 54,
									"nodeType": "InheritanceSpecifier",
									"src": "171:13:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 402,
							"linearizedBaseContracts": [
								402,
								48
							],
							"name": "LevelDiagram",
							"nameLocation": "155:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 59,
									"mutability": "constant",
									"name": "MYTHOLOGY",
									"nameLocation": "217:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 402,
									"src": "192:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 55,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "192:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d7974686f6c6f6779",
												"id": 57,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "239:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f3",
													"typeString": "literal_string \"Mythology\""
												},
												"value": "Mythology"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f3",
													"typeString": "literal_string \"Mythology\""
												}
											],
											"id": 56,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "229:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "229:22:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 64,
									"mutability": "constant",
									"name": "LEGENDARY",
									"nameLocation": "282:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 402,
									"src": "257:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 60,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "257:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4c6567656e64617279",
												"id": 62,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "304:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310",
													"typeString": "literal_string \"Legendary\""
												},
												"value": "Legendary"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310",
													"typeString": "literal_string \"Legendary\""
												}
											],
											"id": 61,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "294:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "294:22:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 69,
									"mutability": "constant",
									"name": "EPIC",
									"nameLocation": "347:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 402,
									"src": "322:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 65,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "322:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "45706963",
												"id": 67,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "364:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17",
													"typeString": "literal_string \"Epic\""
												},
												"value": "Epic"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17",
													"typeString": "literal_string \"Epic\""
												}
											],
											"id": 66,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "354:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 68,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "354:17:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 74,
									"mutability": "constant",
									"name": "ADMINISTRATOR",
									"nameLocation": "402:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 402,
									"src": "377:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 70,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "377:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41646d696e6973747261746f72",
												"id": 72,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "428:15:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb",
													"typeString": "literal_string \"Administrator\""
												},
												"value": "Administrator"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb",
													"typeString": "literal_string \"Administrator\""
												}
											],
											"id": 71,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "418:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 73,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "418:26:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 79,
									"mutability": "constant",
									"name": "NORMAL",
									"nameLocation": "475:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 402,
									"src": "450:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 75,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "450:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4e6f726d616c",
												"id": 77,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "494:8:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd",
													"typeString": "literal_string \"Normal\""
												},
												"value": "Normal"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd",
													"typeString": "literal_string \"Normal\""
												}
											],
											"id": 76,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "484:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "484:19:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 82,
									"mutability": "mutable",
									"name": "item",
									"nameLocation": "529:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 402,
									"src": "510:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP37Full_$556",
										"typeString": "contract IKIP37Full"
									},
									"typeName": {
										"id": 81,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 80,
											"name": "IKIP37Full",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 556,
											"src": "510:10:1"
										},
										"referencedDeclaration": 556,
										"src": "510:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP37Full_$556",
											"typeString": "contract IKIP37Full"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "567:41:1",
										"statements": [
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 87,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "577:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$556",
															"typeString": "contract IKIP37Full"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 89,
																"name": "_item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "595:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 88,
															"name": "IKIP37Full",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "584:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP37Full_$556_$",
																"typeString": "type(contract IKIP37Full)"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "584:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$556",
															"typeString": "contract IKIP37Full"
														}
													},
													"src": "577:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$556",
														"typeString": "contract IKIP37Full"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "577:24:1"
											}
										]
									},
									"id": 94,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_item",
												"nameLocation": "560:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "552:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:15:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:1"
									},
									"scope": 402,
									"src": "540:68:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "755:194:1",
										"statements": [
											{
												"assignments": [
													105
												],
												"declarations": [
													{
														"constant": false,
														"id": 105,
														"mutability": "mutable",
														"name": "gradeAmount",
														"nameLocation": "773:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 126,
														"src": "765:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"arguments": [
														{
															"id": 107,
															"name": "grade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "813:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 106,
														"name": "calculateBasicGradeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															205
														],
														"referencedDeclaration": 205,
														"src": "787:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) pure returns (uint256)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "765:54:1"
											},
											{
												"assignments": [
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "levelAmount",
														"nameLocation": "837:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 126,
														"src": "829:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "829:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"arguments": [
														{
															"id": 113,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "877:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "calculateBasicLevelAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															159
														],
														"referencedDeclaration": 159,
														"src": "851:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "829:54:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 116,
																				"name": "gradeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "903:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 117,
																				"name": "levelAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 111,
																				"src": "917:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "903:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 119,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "902:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "932:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "902:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 122,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "901:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "938:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "901:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 103,
												"id": 125,
												"nodeType": "Return",
												"src": "894:48:1"
											}
										]
									},
									"functionSelector": "aa93c0ee",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "623:20:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "716:8:1"
									},
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "658:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "644:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 95,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "644:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "673:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "665:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:36:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "742:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:9:1"
									},
									"scope": 402,
									"src": "614:335:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										17
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "1082:153:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 135,
																	"name": "level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "1113:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1122:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1113:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 139,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1140:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1131:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 143,
																			"name": "level",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "1149:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1158:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "1149:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 147,
																				"name": "level",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "1167:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1176:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "1167:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1217:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "1167:51:1",
																		"trueExpression": {
																			"hexValue": "3830",
																			"id": 150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1196:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_80_by_1",
																				"typeString": "int_const 80"
																			},
																			"value": "80"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1149:69:1",
																	"trueExpression": {
																		"hexValue": "3432",
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1162:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_42_by_1",
																			"typeString": "int_const 42"
																		},
																		"value": "42"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1131:87:1",
																"trueExpression": {
																	"hexValue": "3232",
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1144:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_22_by_1",
																		"typeString": "int_const 22"
																	},
																	"value": "22"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1113:105:1",
															"trueExpression": {
																"hexValue": "3135",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1126:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 156,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1099:129:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 134,
												"id": 157,
												"nodeType": "Return",
												"src": "1092:136:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicLevelAmount",
									"nameLocation": "964:25:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 131,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1043:8:1"
									},
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "998:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "990:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:9:1"
									},
									"scope": 402,
									"src": "955:280:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										24
									],
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1374:388:1",
										"statements": [
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"mutability": "mutable",
														"name": "gradeCheck",
														"nameLocation": "1392:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 204,
														"src": "1384:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 167,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1384:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 172,
																	"name": "grade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1421:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1415:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 170,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1415:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1415:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 169,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1405:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1405:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1384:44:1"
											},
											{
												"expression": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 176,
																	"name": "gradeCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "1460:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 177,
																	"name": "MYTHOLOGY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1474:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1460:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 180,
																		"name": "gradeCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 168,
																		"src": "1492:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 181,
																		"name": "LEGENDARY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "1506:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "1492:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 184,
																			"name": "gradeCheck",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 168,
																			"src": "1556:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 185,
																			"name": "EPIC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 69,
																			"src": "1570:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "1556:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 188,
																				"name": "gradeCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "1615:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 189,
																				"name": "ADMINISTRATOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 74,
																				"src": "1629:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "1615:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"id": 194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 192,
																					"name": "gradeCheck",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 168,
																					"src": "1683:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 193,
																					"name": "NORMAL",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 79,
																					"src": "1697:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"src": "1683:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1744:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "1683:62:1",
																			"trueExpression": {
																				"hexValue": "323030",
																				"id": 195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1722:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_200_by_1",
																					"typeString": "int_const 200"
																				},
																				"value": "200"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "1615:130:1",
																		"trueExpression": {
																			"hexValue": "323235",
																			"id": 191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1661:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225_by_1",
																				"typeString": "int_const 225"
																			},
																			"value": "225"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1556:189:1",
																	"trueExpression": {
																		"hexValue": "333030",
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1593:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		},
																		"value": "300"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1492:253:1",
																"trueExpression": {
																	"hexValue": "343530",
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1534:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	},
																	"value": "450"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1460:285:1",
															"trueExpression": {
																"hexValue": "363735",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1486:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_675_by_1",
																	"typeString": "int_const 675"
																},
																"value": "675"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"id": 202,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1446:309:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 166,
												"id": 203,
												"nodeType": "Return",
												"src": "1439:316:1"
											}
										]
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicGradeAmount",
									"nameLocation": "1250:25:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 163,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1335:8:1"
									},
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "1290:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1276:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 160,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1276:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:21:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1361:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:9:1"
									},
									"scope": 402,
									"src": "1241:521:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1889:286:1",
										"statements": [
											{
												"body": {
													"id": 241,
													"nodeType": "Block",
													"src": "1932:218:1",
													"statements": [
														{
															"assignments": [
																224
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 224,
																	"mutability": "mutable",
																	"name": "randomNumber",
																	"nameLocation": "1954:12:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 241,
																	"src": "1946:20:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 223,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 228,
															"initialValue": {
																"arguments": [
																	{
																		"id": 226,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "1993:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 225,
																	"name": "makeRandomNumberForItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		401
																	],
																	"referencedDeclaration": 401,
																	"src": "1969:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1969:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1946:49:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 229,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "2014:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 230,
																	"name": "randomNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "2024:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2014:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 239,
																"nodeType": "Block",
																"src": "2099:41:1",
																"statements": [
																	{
																		"expression": {
																			"id": 237,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "2124:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 212,
																		"id": 238,
																		"nodeType": "Return",
																		"src": "2117:8:1"
																	}
																]
															},
															"id": 240,
															"nodeType": "IfStatement",
															"src": "2010:130:1",
															"trueBody": {
																"id": 236,
																"nodeType": "Block",
																"src": "2038:55:1",
																"statements": [
																	{
																		"expression": {
																			"id": 234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 232,
																				"name": "_power",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 207,
																				"src": "2056:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 233,
																				"name": "randomNumber",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "2066:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2056:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 235,
																		"nodeType": "ExpressionStatement",
																		"src": "2056:22:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "1919:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "35",
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1924:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1919:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 242,
												"initializationExpression": {
													"assignments": [
														214
													],
													"declarations": [
														{
															"constant": false,
															"id": 214,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1912:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 242,
															"src": "1904:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 213,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1904:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 216,
													"initialValue": {
														"hexValue": "31",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1916:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1904:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1927:3:1",
														"subExpression": {
															"id": 220,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "1927:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 222,
													"nodeType": "ExpressionStatement",
													"src": "1927:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1899:251:1"
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2167:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 212,
												"id": 244,
												"nodeType": "Return",
												"src": "2160:8:1"
											}
										]
									},
									"functionSelector": "b79d5db4",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateItemIndex",
									"nameLocation": "1777:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1850:8:1"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "1804:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1796:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:16:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1876:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:9:1"
									},
									"scope": 402,
									"src": "1768:407:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2318:934:1",
										"statements": [
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "gradeCheck",
														"nameLocation": "2336:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "2328:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 256,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 264,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 261,
																	"name": "grade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "2365:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2359:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 259,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2359:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2359:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 258,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2349:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2349:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2328:44:1"
											},
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "basicPower",
														"nameLocation": "2391:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "2383:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2383:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 267,
																	"name": "gradeCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2418:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 268,
																	"name": "MYTHOLOGY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "2432:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2418:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 271,
																		"name": "gradeCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "2450:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 272,
																		"name": "LEGENDARY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "2464:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "2450:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 275,
																			"name": "gradeCheck",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "2514:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 276,
																			"name": "EPIC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 69,
																			"src": "2528:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "2514:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 279,
																				"name": "gradeCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 257,
																				"src": "2573:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 280,
																				"name": "ADMINISTRATOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 74,
																				"src": "2587:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2573:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"id": 285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 283,
																					"name": "gradeCheck",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 257,
																					"src": "2641:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 284,
																					"name": "NORMAL",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 79,
																					"src": "2655:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"src": "2641:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2702:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "2641:62:1",
																			"trueExpression": {
																				"hexValue": "313030",
																				"id": 286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2680:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "2573:130:1",
																		"trueExpression": {
																			"hexValue": "313530",
																			"id": 282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2619:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_150_by_1",
																				"typeString": "int_const 150"
																			},
																			"value": "150"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "2514:189:1",
																	"trueExpression": {
																		"hexValue": "323030",
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2551:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "2450:253:1",
																"trueExpression": {
																	"hexValue": "333030",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"value": "300"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2418:285:1",
															"trueExpression": {
																"hexValue": "343530",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2444:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_450_by_1",
																	"typeString": "int_const 450"
																},
																"value": "450"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"id": 293,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2404:309:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2383:330:1"
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "levelCheck",
														"nameLocation": "2732:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "2724:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2724:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 297,
																	"name": "level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "2759:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2768:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2759:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 301,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "2777:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2786:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2777:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 305,
																			"name": "level",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 250,
																			"src": "2795:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2804:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "2795:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 309,
																				"name": "level",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 250,
																				"src": "2813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2822:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "2813:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 313,
																					"name": "level",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 250,
																					"src": "2863:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 314,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2872:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "2863:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2913:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "2863:51:1",
																			"trueExpression": {
																				"hexValue": "3730",
																				"id": 316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2892:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_70_by_1",
																					"typeString": "int_const 70"
																				},
																				"value": "70"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "2813:101:1",
																		"trueExpression": {
																			"hexValue": "3430",
																			"id": 312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2842:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_40_by_1",
																				"typeString": "int_const 40"
																			},
																			"value": "40"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "2795:119:1",
																	"trueExpression": {
																		"hexValue": "3235",
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2808:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_25_by_1",
																			"typeString": "int_const 25"
																		},
																		"value": "25"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "2777:137:1",
																"trueExpression": {
																	"hexValue": "3135",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2790:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "15"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2759:155:1",
															"trueExpression": {
																"hexValue": "3130",
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2772:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 323,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2745:179:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2724:200:1"
											},
											{
												"assignments": [
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "itemPower",
														"nameLocation": "2943:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "2935:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 325,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2935:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 328,
												"initialValue": {
													"hexValue": "30",
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2955:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2935:21:1"
											},
											{
												"body": {
													"id": 363,
													"nodeType": "Block",
													"src": "3000:184:1",
													"statements": [
														{
															"assignments": [
																340
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 340,
																	"mutability": "mutable",
																	"name": "balanceOf",
																	"nameLocation": "3022:9:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 363,
																	"src": "3014:17:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 339,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3014:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 347,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 343,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3049:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3049:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 345,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "3061:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 341,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 82,
																		"src": "3034:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IKIP37Full_$556",
																			"typeString": "contract IKIP37Full"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 496,
																	"src": "3034:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view external returns (uint256)"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3034:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3014:49:1"
														},
														{
															"assignments": [
																349
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 349,
																	"mutability": "mutable",
																	"name": "basicItemPower",
																	"nameLocation": "3085:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 363,
																	"src": "3077:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 348,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3077:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 353,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 350,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "3102:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3106:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3102:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3077:30:1"
														},
														{
															"expression": {
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 354,
																	"name": "itemPower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "3121:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 355,
																		"name": "itemPower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "3133:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 356,
																					"name": "basicItemPower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 349,
																					"src": "3146:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 357,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 340,
																					"src": "3163:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3146:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 359,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3145:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3133:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3121:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ExpressionStatement",
															"src": "3121:52:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 333,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2987:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "35",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2992:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "2987:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 364,
												"initializationExpression": {
													"assignments": [
														330
													],
													"declarations": [
														{
															"constant": false,
															"id": 330,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2980:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 364,
															"src": "2972:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 329,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2972:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 332,
													"initialValue": {
														"hexValue": "31",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2972:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2995:3:1",
														"subExpression": {
															"id": 336,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "2995:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"nodeType": "ExpressionStatement",
													"src": "2995:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2967:217:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 365,
																				"name": "basicPower",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "3203:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 366,
																				"name": "itemPower",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "3216:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3203:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 368,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3202:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 369,
																	"name": "levelCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "3229:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3202:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 371,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3201:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3243:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "3201:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 255,
												"id": 374,
												"nodeType": "Return",
												"src": "3194:51:1"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePower",
									"nameLocation": "2190:14:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2279:8:1"
									},
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "2219:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2205:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2205:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "2234:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2226:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2204:36:1"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2305:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:9:1"
									},
									"scope": 402,
									"src": "2181:1071:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										47
									],
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "3389:289:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 389,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3516:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3516:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 391,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3557:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "difficulty",
																				"nodeType": "MemberAccess",
																				"src": "3557:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 393,
																				"name": "_tokenIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 378,
																				"src": "3599:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 387,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3474:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "3474:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3474:158:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 386,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "3443:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3443:207:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 384,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3418:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3418:246:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3667:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "3418:253:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 383,
												"id": 399,
												"nodeType": "Return",
												"src": "3399:272:1"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeRandomNumberForItem",
									"nameLocation": "3267:23:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 380,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3350:8:1"
									},
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "3299:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3291:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3291:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3290:21:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3376:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3375:9:1"
									},
									"scope": 402,
									"src": "3258:420:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 403,
							"src": "146:3534:1",
							"usedErrors": []
						}
					],
					"src": "32:3649:1"
				},
				"id": 1
			},
			"interface/IKIP13.sol": {
				"ast": {
					"absolutePath": "interface/IKIP13.sol",
					"exportedSymbols": {
						"IKIP13": [
							414
						]
					},
					"id": 415,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 404,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "258:22:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 405,
								"nodeType": "StructuredDocumentation",
								"src": "282:142:2",
								"text": " @dev Interface of the KIP13 standard as defined in the KIP.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard"
							},
							"fullyImplemented": false,
							"id": 414,
							"linearizedBaseContracts": [
								414
							],
							"name": "IKIP13",
							"nameLocation": "435:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "448:387:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n to learn more about how these ids are created.\n Requirements:\n - implementation of this function call must use less than 30 000 gas"
									},
									"functionSelector": "01ffc9a7",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "849:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "874:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "867:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 407,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "867:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:20:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "910:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "910:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:6:2"
									},
									"scope": 414,
									"src": "840:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 415,
							"src": "425:493:2",
							"usedErrors": []
						}
					],
					"src": "258:661:2"
				},
				"id": 2
			},
			"interface/IKIP37/IKIP37.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37.sol",
					"exportedSymbols": {
						"IKIP13": [
							414
						],
						"IKIP37": [
							532
						]
					},
					"id": 533,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 416,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:3"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 533,
							"sourceUnit": 415,
							"src": "56:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 418,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 414,
										"src": "101:6:3"
									},
									"id": 419,
									"nodeType": "InheritanceSpecifier",
									"src": "101:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 532,
							"linearizedBaseContracts": [
								532,
								414
							],
							"name": "IKIP37",
							"nameLocation": "91:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 431,
									"name": "TransferSingle",
									"nameLocation": "120:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "160:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "144:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "195:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "179:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "226:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "210:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": false,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "247:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "239:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "268:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "260:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:146:3"
									},
									"src": "114:167:3"
								},
								{
									"anonymous": false,
									"id": 445,
									"name": "TransferBatch",
									"nameLocation": "292:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "331:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "315:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "366:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "350:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "397:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "381:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "410:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 438,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "410:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 439,
													"nodeType": "ArrayTypeName",
													"src": "410:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": false,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "434:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "434:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 442,
													"nodeType": "ArrayTypeName",
													"src": "434:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:152:3"
									},
									"src": "286:172:3"
								},
								{
									"anonymous": false,
									"id": 453,
									"name": "ApprovalForAll",
									"nameLocation": "469:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "509:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "493:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "541:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "525:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "565:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "560:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:97:3"
									},
									"src": "463:118:3"
								},
								{
									"anonymous": false,
									"id": 459,
									"name": "URI",
									"nameLocation": "592:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "603:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "596:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "627:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "611:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:36:3"
									},
									"src": "586:46:3"
								},
								{
									"functionSelector": "f242432a",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "647:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "681:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "673:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "704:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "696:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "725:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "717:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "746:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "738:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "777:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "762:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:125:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:0:3"
									},
									"scope": 532,
									"src": "638:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2eb2c2d6",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "813:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "852:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "844:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "875:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "867:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "907:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "888:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 477,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "888:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 478,
													"nodeType": "ArrayTypeName",
													"src": "888:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "921:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 480,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "921:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 481,
													"nodeType": "ArrayTypeName",
													"src": "921:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "972:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "957:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 483,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "957:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:149:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:3"
									},
									"scope": 532,
									"src": "804:189:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00fdd58e",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1026:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1018:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1042:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1034:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:29:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1094:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:3"
									},
									"scope": 532,
									"src": "999:104:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e1273f4",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1118:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "_owners",
												"nameLocation": "1152:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1133:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 497,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1133:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 498,
													"nodeType": "ArrayTypeName",
													"src": "1133:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "1180:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1161:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 500,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1161:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 501,
													"nodeType": "ArrayTypeName",
													"src": "1161:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:53:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1233:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 504,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1233:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 505,
													"nodeType": "ArrayTypeName",
													"src": "1233:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:18:3"
									},
									"scope": 532,
									"src": "1109:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1266:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1292:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1284:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1308:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1303:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1303:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:35:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:3"
									},
									"scope": 532,
									"src": "1257:71:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1343:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1368:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1360:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1384:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1376:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:35:3"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1442:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:6:3"
									},
									"scope": 532,
									"src": "1334:114:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bd85b039",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1463:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1483:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1475:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:13:3"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1511:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:3"
									},
									"scope": 532,
									"src": "1454:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 533,
							"src": "81:1441:3",
							"usedErrors": []
						}
					],
					"src": "32:1491:3"
				},
				"id": 3
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37Full.sol",
					"exportedSymbols": {
						"IKIP13": [
							414
						],
						"IKIP37": [
							532
						],
						"IKIP37Full": [
							556
						],
						"IKIP37MetadataURI": [
							569
						]
					},
					"id": 557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 534,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:4"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
							"file": "./IKIP37MetadataURI.sol",
							"id": 535,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 557,
							"sourceUnit": 570,
							"src": "56:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 536,
										"name": "IKIP37MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 569,
										"src": "115:17:4"
									},
									"id": 537,
									"nodeType": "InheritanceSpecifier",
									"src": "115:17:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 556,
							"linearizedBaseContracts": [
								556,
								569,
								532,
								414
							],
							"name": "IKIP37Full",
							"nameLocation": "101:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "156e29f6",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "148:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "170:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "162:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "193:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "185:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "219:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "211:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:80:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:4"
									},
									"scope": 556,
									"src": "139:103:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f5298aca",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "257:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "279:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "271:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "302:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "294:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "328:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "320:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:80:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:4"
									},
									"scope": 556,
									"src": "248:103:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 557,
							"src": "91:262:4",
							"usedErrors": []
						}
					],
					"src": "32:322:4"
				},
				"id": 4
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
					"exportedSymbols": {
						"IKIP13": [
							414
						],
						"IKIP37": [
							532
						],
						"IKIP37MetadataURI": [
							569
						]
					},
					"id": 570,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 558,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:5"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37.sol",
							"file": "./IKIP37.sol",
							"id": 559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 570,
							"sourceUnit": 533,
							"src": "56:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 560,
										"name": "IKIP37",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 532,
										"src": "111:6:5"
									},
									"id": 561,
									"nodeType": "InheritanceSpecifier",
									"src": "111:6:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 569,
							"linearizedBaseContracts": [
								569,
								532,
								414
							],
							"name": "IKIP37MetadataURI",
							"nameLocation": "90:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0e89341c",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "133:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "145:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "137:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:12:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "172:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 565,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "172:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:15:5"
									},
									"scope": 569,
									"src": "124:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 570,
							"src": "80:109:5",
							"usedErrors": []
						}
					],
					"src": "32:158:5"
				},
				"id": 5
			}
		}
	}
}