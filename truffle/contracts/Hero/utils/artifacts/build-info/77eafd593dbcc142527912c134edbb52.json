{
	"id": "77eafd593dbcc142527912c134edbb52",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Hero/utils/HeroController.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../utils/SafeMath.sol\";\n\nimport \"../interface/IHeroNFT.sol\";\nimport \"../interface/ILevelDiagram.sol\";\n\nimport \"../../interface/IKIP7/IKIP7.sol\";\nimport \"../../interface/IKIP37/IKIP37Full.sol\";\n\ncontract HeroController {\n    using SafeMath for *;\n\n    IHeroNFT private heroNFT;\n    IKIP7 private token;\n    IKIP37Full private item;\n    ILevelDiagram private levelDiagram;\n\n    address payable private coreOwner;\n    address depositAddress;\n    address miningAddress;\n\n    bool private paused;\n    bool private miningPaused;\n\n    uint256 public priceOfKlay;\n    uint256 public priceOfToken;\n    uint256 private constant DECIMALS = 1e18;\n\n    modifier notPaused() {\n        require(!paused, \"Paused State\");\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\");\n        _;\n    }\n\n    constructor() {\n        paused = true;\n        miningPaused = true;\n        coreOwner = payable(msg.sender);\n    }\n\n        // ILevelDiagram private levelDiagram;\n\n    function initialize(\n        address _heroNFT,\n        address _token,\n        address _item,\n        address _levelDiagram,\n        address _depositAddress,\n        address _miningAddress,\n        uint256 _klay,\n        uint256 _tokenPrice\n    ) external onlyOwner {\n        priceOfKlay = _klay.mul(DECIMALS);\n        priceOfToken = _tokenPrice.mul(DECIMALS);\n\n        heroNFT = IHeroNFT(_heroNFT);\n        token = IKIP7(_token);\n        item = IKIP37Full(_item);\n        levelDiagram = ILevelDiagram(_levelDiagram);\n\n        depositAddress = _depositAddress;\n        miningAddress = _miningAddress;\n    }\n\n    function changePaused() external onlyOwner {\n        paused = !paused;\n    }\n\n    function changeMiningPaused() external onlyOwner {\n        miningPaused = !miningPaused;\n    }\n\n    // **** view Function ****\n\n    function getOwner() public view returns (address payable) {\n        return coreOwner;\n    }\n\n    function getPaused() public view returns (bool) {\n        return paused;\n    }\n\n    function getMiningPaused() public view returns (bool) {\n        return miningPaused;\n    }\n\n    function getItem() public view returns (IKIP37Full) {\n        return item;\n    }\n\n    function getToken() public view returns (IKIP7) {\n        return token;\n    }\n\n    function getHeroNFT() public view returns (IHeroNFT) {\n        return heroNFT;\n    }\n\n    function _currentTime() internal view returns (uint256) {\n        return block.timestamp;\n    }\n}\n"
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37MetadataURI.sol\";\n\ninterface IKIP37Full is IKIP37MetadataURI {\n    function mint(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n\n    function burn(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n}\n"
			},
			"interface/IKIP7/IKIP7.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP7 standard as defined in the KIP.\n * See http://kips.klaytn.com/KIPs/kip-7-fungible_token\n */\ninterface IKIP7 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev  Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(address recipient, uint256 amount) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external;\n}\n"
			},
			"Hero/interface/ILevelDiagram.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nabstract contract ILevelDiagram {\n     function calculateTokenAmount(string memory grade, uint256 level)\n        public\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateBasicLevelAmount(uint256 level)\n        internal\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateBasicGradeAmount(string memory grade)\n        internal\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateItemIndex(uint256 _power)\n        internal\n        view\n        virtual\n        returns (uint256);\n\n    function calculatePower(string memory grade, uint256 level)\n        internal\n        view\n        virtual\n        returns (uint256);\n\n    function makeRandomNumberForItem(uint256 _tokenIndex)\n        internal\n        view\n        virtual\n        returns (uint256);\n}"
			},
			"Hero/interface/IHeroNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../interface/IKIP17/IKIP17.sol\";\n\ninterface IHeroNFT is IKIP17 {\n    function mint(address _to) external;\n\n    function burn(uint256 _tokenId) external;\n\n    function setContract(address _heroCore) external;\n\n    function getHeroCore() external view returns (address);\n\n    function getTokenIndex() external view returns (uint256);\n}\n"
			},
			"utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37.sol\";\n\ninterface IKIP37MetadataURI is IKIP37 {\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"interface/IKIP17/IKIP17.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/IKIP17.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/IERC721.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IKIP17 is IKIP13 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed approved,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId)\n        external\n        view\n        returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator)\n        external\n        view\n        returns (bool);\n}\n"
			},
			"interface/IKIP37/IKIP37.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\ninterface IKIP37 is IKIP13 {\n    event TransferSingle(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256 _id,\n        uint256 _value\n    );\n    event TransferBatch(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256[] _ids,\n        uint256[] _values\n    );\n    event ApprovalForAll(\n        address indexed _owner,\n        address indexed _operator,\n        bool _approved\n    );\n    event URI(string _value, uint256 indexed _id);\n\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _id,\n        uint256 _value,\n        bytes calldata _data\n    ) external;\n\n    function safeBatchTransferFrom(\n        address _from,\n        address _to,\n        uint256[] calldata _ids,\n        uint256[] calldata _values,\n        bytes calldata _data\n    ) external;\n\n    function balanceOf(address _owner, uint256 _id)\n        external\n        view\n        returns (uint256);\n\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    function isApprovedForAll(address _owner, address _operator)\n        external\n        view\n        returns (bool);\n\n    function totalSupply(uint256 _id) external view returns (uint256);\n}\n"
			},
			"interface/IKIP13.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP13 standard as defined in the KIP.\n *\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\n */\ninterface IKIP13 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`.\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n     * to learn more about how these ids are created.\n     *\n     * Requirements:\n     *\n     * - implementation of this function call must use less than 30 000 gas\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Hero/interface/IHeroNFT.sol": {
				"IHeroNFT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHeroCore",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_heroCore",
									"type": "address"
								}
							],
							"name": "setContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"getHeroCore()": "bcbb72c8",
							"getTokenIndex()": "295d3ee8",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address)": "6a627842",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setContract(address)": "75f890ab",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHeroCore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heroCore\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/interface/IHeroNFT.sol\":\"IHeroNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/IHeroNFT.sol\":{\"keccak256\":\"0x28719918b6bcd5da2fc05c963dd0c407c3d256a41ba787fd7dd05cfb8e0eefbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922cc5d0a7c86837ac8697ee76295642fb8ca35453f7e2b20392dc4d3403e651\",\"dweb:/ipfs/QmPYwhoSmrcTJDR8HgQKH4nTfauncjRUMBDWJTAY99ygX5\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/interface/ILevelDiagram.sol": {
				"ILevelDiagram": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateTokenAmount(string,uint256)": "aa93c0ee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/interface/ILevelDiagram.sol\":\"ILevelDiagram\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0xc0fbbbe5dc964f6f965fc1abde3b5cc387b9ec09527a147f261bfdead58a3b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9303cf1617cff14dbcd02dea01cdb5e5306e0c6196f31208f1ffce1bf4de3466\",\"dweb:/ipfs/QmWJrmzoPuR8oDUQ56pm2Z4DrvTVr7frpsLtGdWdAHsEi6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/utils/HeroController.sol": {
				"HeroController": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "changeMiningPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "changePaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHeroNFT",
							"outputs": [
								{
									"internalType": "contract IHeroNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getItem",
							"outputs": [
								{
									"internalType": "contract IKIP37Full",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMiningPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getToken",
							"outputs": [
								{
									"internalType": "contract IKIP7",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_heroNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_item",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_levelDiagram",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_depositAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_miningAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_klay",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfKlay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Hero/utils/HeroController.sol\":261:2538  contract HeroController {... */\n  mstore(0x40, 0x80)\n    /* \"Hero/utils/HeroController.sol\":911:1025  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Hero/utils/HeroController.sol\":944:948  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":935:941  paused */\n  0x06\n  0x14\n    /* \"Hero/utils/HeroController.sol\":935:948  paused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":973:977  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":958:970  miningPaused */\n  0x06\n  0x15\n    /* \"Hero/utils/HeroController.sol\":958:977  miningPaused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":1007:1017  msg.sender */\n  caller\n    /* \"Hero/utils/HeroController.sol\":987:996  coreOwner */\n  0x04\n  0x00\n    /* \"Hero/utils/HeroController.sol\":987:1018  coreOwner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":261:2538  contract HeroController {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Hero/utils/HeroController.sol\":261:2538  contract HeroController {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7cac00ee\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x7cac00ee\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9eb4eae5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc412eaba\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc740671f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xee72b8cc\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x1b9cbdfb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21df0da7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x28919df6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a1a8080\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6805b84b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Hero/utils/HeroController.sol\":627:654  uint256 public priceOfToken */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2268:2345  function getToken() public view returns (IKIP7) {... */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2086:2176  function getMiningPaused() public view returns (bool) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":595:621  uint256 public priceOfKlay */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2002:2080  function getPaused() public view returns (bool) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2351:2435  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1905:1996  function getOwner() public view returns (address payable) {... */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1691:1767  function changePaused() external onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"Hero/utils/HeroController.sol\":2182:2262  function getItem() public view returns (IKIP37Full) {... */\n    tag_11:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1079:1685  function initialize(... */\n    tag_12:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"Hero/utils/HeroController.sol\":1773:1867  function changeMiningPaused() external onlyOwner {... */\n    tag_13:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Hero/utils/HeroController.sol\":627:654  uint256 public priceOfToken */\n    tag_16:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2268:2345  function getToken() public view returns (IKIP7) {... */\n    tag_20:\n        /* \"Hero/utils/HeroController.sol\":2309:2314  IKIP7 */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2333:2338  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2326:2338  return token */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2268:2345  function getToken() public view returns (IKIP7) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2086:2176  function getMiningPaused() public view returns (bool) {... */\n    tag_24:\n        /* \"Hero/utils/HeroController.sol\":2134:2138  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2157:2169  miningPaused */\n      0x06\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":2150:2169  return miningPaused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2086:2176  function getMiningPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":595:621  uint256 public priceOfKlay */\n    tag_28:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2002:2080  function getPaused() public view returns (bool) {... */\n    tag_31:\n        /* \"Hero/utils/HeroController.sol\":2044:2048  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2067:2073  paused */\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":2060:2073  return paused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2002:2080  function getPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2351:2435  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_34:\n        /* \"Hero/utils/HeroController.sol\":2394:2402  IHeroNFT */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2421:2428  heroNFT */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2414:2428  return heroNFT */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2351:2435  function getHeroNFT() public view returns (IHeroNFT) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1905:1996  function getOwner() public view returns (address payable) {... */\n    tag_38:\n        /* \"Hero/utils/HeroController.sol\":1946:1961  address payable */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1980:1989  coreOwner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":1973:1989  return coreOwner */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1905:1996  function getOwner() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1691:1767  function changePaused() external onlyOwner {... */\n    tag_42:\n        /* \"Hero/utils/HeroController.sol\":847:856  coreOwner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:843  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":825:887  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"Hero/utils/HeroController.sol\":1754:1760  paused */\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1753:1760  !paused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1744:1750  paused */\n      0x06\n      0x14\n        /* \"Hero/utils/HeroController.sol\":1744:1760  paused = !paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1691:1767  function changePaused() external onlyOwner {... */\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2182:2262  function getItem() public view returns (IKIP37Full) {... */\n    tag_44:\n        /* \"Hero/utils/HeroController.sol\":2222:2232  IKIP37Full */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2251:2255  item */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2244:2255  return item */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2182:2262  function getItem() public view returns (IKIP37Full) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1079:1685  function initialize(... */\n    tag_50:\n        /* \"Hero/utils/HeroController.sol\":847:856  coreOwner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:843  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":825:887  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_61\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"Hero/utils/HeroController.sol\":1369:1388  _klay.mul(DECIMALS) */\n      tag_68\n        /* \"Hero/utils/HeroController.sol\":696:700  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1369:1374  _klay */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1369:1378  _klay.mul */\n      tag_69\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1369:1388  _klay.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"Hero/utils/HeroController.sol\":1355:1366  priceOfKlay */\n      0x07\n        /* \"Hero/utils/HeroController.sol\":1355:1388  priceOfKlay = _klay.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1413:1438  _tokenPrice.mul(DECIMALS) */\n      tag_70\n        /* \"Hero/utils/HeroController.sol\":696:700  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1413:1424  _tokenPrice */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1413:1428  _tokenPrice.mul */\n      tag_69\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1413:1438  _tokenPrice.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"Hero/utils/HeroController.sol\":1398:1410  priceOfToken */\n      0x08\n        /* \"Hero/utils/HeroController.sol\":1398:1438  priceOfToken = _tokenPrice.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1468:1476  _heroNFT */\n      dup8\n        /* \"Hero/utils/HeroController.sol\":1449:1456  heroNFT */\n      0x00\n      dup1\n        /* \"Hero/utils/HeroController.sol\":1449:1477  heroNFT = IHeroNFT(_heroNFT) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1501:1507  _token */\n      dup7\n        /* \"Hero/utils/HeroController.sol\":1487:1492  token */\n      0x01\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1487:1508  token = IKIP7(_token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1536:1541  _item */\n      dup6\n        /* \"Hero/utils/HeroController.sol\":1518:1522  item */\n      0x02\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1518:1542  item = IKIP37Full(_item) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1581:1594  _levelDiagram */\n      dup5\n        /* \"Hero/utils/HeroController.sol\":1552:1564  levelDiagram */\n      0x03\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1552:1595  levelDiagram = ILevelDiagram(_levelDiagram) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1623:1638  _depositAddress */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1606:1620  depositAddress */\n      0x05\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1606:1638  depositAddress = _depositAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1664:1678  _miningAddress */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1648:1661  miningAddress */\n      0x06\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1648:1678  miningAddress = _miningAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1079:1685  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1773:1867  function changeMiningPaused() external onlyOwner {... */\n    tag_52:\n        /* \"Hero/utils/HeroController.sol\":847:856  coreOwner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:843  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":825:887  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_61\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"Hero/utils/HeroController.sol\":1848:1860  miningPaused */\n      0x06\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1847:1860  !miningPaused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1832:1844  miningPaused */\n      0x06\n      0x15\n        /* \"Hero/utils/HeroController.sol\":1832:1860  miningPaused = !miningPaused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1773:1867  function changeMiningPaused() external onlyOwner {... */\n      jump\t// out\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"utils/SafeMath.sol\":341:348  uint256 */\n      0x00\n        /* \"utils/SafeMath.sol\":371:372  b */\n      dup2\n        /* \"utils/SafeMath.sol\":367:368  a */\n      dup4\n        /* \"utils/SafeMath.sol\":367:372  a * b */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"utils/SafeMath.sol\":360:372  return a * b */\n      swap1\n      pop\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_79:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_81\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_83:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_85\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:1579   */\n    tag_49:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":467:473   */\n      0x00\n        /* \"#utility.yul\":475:481   */\n      dup1\n        /* \"#utility.yul\":524:527   */\n      0x0100\n        /* \"#utility.yul\":512:521   */\n      dup10\n        /* \"#utility.yul\":503:510   */\n      dup12\n        /* \"#utility.yul\":499:522   */\n      sub\n        /* \"#utility.yul\":495:528   */\n      slt\n        /* \"#utility.yul\":492:494   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":541:542   */\n      0x00\n        /* \"#utility.yul\":538:539   */\n      dup1\n        /* \"#utility.yul\":531:543   */\n      revert\n        /* \"#utility.yul\":492:494   */\n    tag_88:\n        /* \"#utility.yul\":584:585   */\n      0x00\n        /* \"#utility.yul\":609:662   */\n      tag_89\n        /* \"#utility.yul\":654:661   */\n      dup12\n        /* \"#utility.yul\":645:651   */\n      dup3\n        /* \"#utility.yul\":634:643   */\n      dup13\n        /* \"#utility.yul\":630:652   */\n      add\n        /* \"#utility.yul\":609:662   */\n      tag_79\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":599:662   */\n      swap9\n      pop\n        /* \"#utility.yul\":555:672   */\n      pop\n        /* \"#utility.yul\":711:713   */\n      0x20\n        /* \"#utility.yul\":737:790   */\n      tag_90\n        /* \"#utility.yul\":782:789   */\n      dup12\n        /* \"#utility.yul\":773:779   */\n      dup3\n        /* \"#utility.yul\":762:771   */\n      dup13\n        /* \"#utility.yul\":758:780   */\n      add\n        /* \"#utility.yul\":737:790   */\n      tag_79\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":727:790   */\n      swap8\n      pop\n        /* \"#utility.yul\":682:800   */\n      pop\n        /* \"#utility.yul\":839:841   */\n      0x40\n        /* \"#utility.yul\":865:918   */\n      tag_91\n        /* \"#utility.yul\":910:917   */\n      dup12\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":890:899   */\n      dup13\n        /* \"#utility.yul\":886:908   */\n      add\n        /* \"#utility.yul\":865:918   */\n      tag_79\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":855:918   */\n      swap7\n      pop\n        /* \"#utility.yul\":810:928   */\n      pop\n        /* \"#utility.yul\":967:969   */\n      0x60\n        /* \"#utility.yul\":993:1046   */\n      tag_92\n        /* \"#utility.yul\":1038:1045   */\n      dup12\n        /* \"#utility.yul\":1029:1035   */\n      dup3\n        /* \"#utility.yul\":1018:1027   */\n      dup13\n        /* \"#utility.yul\":1014:1036   */\n      add\n        /* \"#utility.yul\":993:1046   */\n      tag_79\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":983:1046   */\n      swap6\n      pop\n        /* \"#utility.yul\":938:1056   */\n      pop\n        /* \"#utility.yul\":1095:1098   */\n      0x80\n        /* \"#utility.yul\":1122:1175   */\n      tag_93\n        /* \"#utility.yul\":1167:1174   */\n      dup12\n        /* \"#utility.yul\":1158:1164   */\n      dup3\n        /* \"#utility.yul\":1147:1156   */\n      dup13\n        /* \"#utility.yul\":1143:1165   */\n      add\n        /* \"#utility.yul\":1122:1175   */\n      tag_79\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1112:1175   */\n      swap5\n      pop\n        /* \"#utility.yul\":1066:1185   */\n      pop\n        /* \"#utility.yul\":1224:1227   */\n      0xa0\n        /* \"#utility.yul\":1251:1304   */\n      tag_94\n        /* \"#utility.yul\":1296:1303   */\n      dup12\n        /* \"#utility.yul\":1287:1293   */\n      dup3\n        /* \"#utility.yul\":1276:1285   */\n      dup13\n        /* \"#utility.yul\":1272:1294   */\n      add\n        /* \"#utility.yul\":1251:1304   */\n      tag_79\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1241:1304   */\n      swap4\n      pop\n        /* \"#utility.yul\":1195:1314   */\n      pop\n        /* \"#utility.yul\":1353:1356   */\n      0xc0\n        /* \"#utility.yul\":1380:1433   */\n      tag_95\n        /* \"#utility.yul\":1425:1432   */\n      dup12\n        /* \"#utility.yul\":1416:1422   */\n      dup3\n        /* \"#utility.yul\":1405:1414   */\n      dup13\n        /* \"#utility.yul\":1401:1423   */\n      add\n        /* \"#utility.yul\":1380:1433   */\n      tag_83\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1370:1433   */\n      swap3\n      pop\n        /* \"#utility.yul\":1324:1443   */\n      pop\n        /* \"#utility.yul\":1482:1485   */\n      0xe0\n        /* \"#utility.yul\":1509:1562   */\n      tag_96\n        /* \"#utility.yul\":1554:1561   */\n      dup12\n        /* \"#utility.yul\":1545:1551   */\n      dup3\n        /* \"#utility.yul\":1534:1543   */\n      dup13\n        /* \"#utility.yul\":1530:1552   */\n      add\n        /* \"#utility.yul\":1509:1562   */\n      tag_83\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1499:1562   */\n      swap2\n      pop\n        /* \"#utility.yul\":1453:1572   */\n      pop\n        /* \"#utility.yul\":482:1579   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1585:1727   */\n    tag_97:\n        /* \"#utility.yul\":1688:1720   */\n      tag_99\n        /* \"#utility.yul\":1714:1719   */\n      dup2\n        /* \"#utility.yul\":1688:1720   */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1721   */\n      mstore\n        /* \"#utility.yul\":1666:1727   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1733:1842   */\n    tag_101:\n        /* \"#utility.yul\":1814:1835   */\n      tag_103\n        /* \"#utility.yul\":1829:1834   */\n      dup2\n        /* \"#utility.yul\":1814:1835   */\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1809:1812   */\n      dup3\n        /* \"#utility.yul\":1802:1836   */\n      mstore\n        /* \"#utility.yul\":1792:1842   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1848:2009   */\n    tag_105:\n        /* \"#utility.yul\":1950:2002   */\n      tag_107\n        /* \"#utility.yul\":1996:2001   */\n      dup2\n        /* \"#utility.yul\":1950:2002   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1945:1948   */\n      dup3\n        /* \"#utility.yul\":1938:2003   */\n      mstore\n        /* \"#utility.yul\":1928:2009   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2015:2182   */\n    tag_109:\n        /* \"#utility.yul\":2120:2175   */\n      tag_111\n        /* \"#utility.yul\":2169:2174   */\n      dup2\n        /* \"#utility.yul\":2120:2175   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2115:2118   */\n      dup3\n        /* \"#utility.yul\":2108:2176   */\n      mstore\n        /* \"#utility.yul\":2098:2182   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2188:2345   */\n    tag_113:\n        /* \"#utility.yul\":2288:2338   */\n      tag_115\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2288:2338   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2283:2286   */\n      dup3\n        /* \"#utility.yul\":2276:2339   */\n      mstore\n        /* \"#utility.yul\":2266:2345   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2351:2717   */\n    tag_117:\n        /* \"#utility.yul\":2493:2496   */\n      0x00\n        /* \"#utility.yul\":2514:2581   */\n      tag_119\n        /* \"#utility.yul\":2578:2580   */\n      0x1a\n        /* \"#utility.yul\":2573:2576   */\n      dup4\n        /* \"#utility.yul\":2514:2581   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2507:2581   */\n      swap2\n      pop\n        /* \"#utility.yul\":2590:2683   */\n      tag_121\n        /* \"#utility.yul\":2679:2682   */\n      dup3\n        /* \"#utility.yul\":2590:2683   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2708:2710   */\n      0x20\n        /* \"#utility.yul\":2703:2706   */\n      dup3\n        /* \"#utility.yul\":2699:2711   */\n      add\n        /* \"#utility.yul\":2692:2711   */\n      swap1\n      pop\n        /* \"#utility.yul\":2497:2717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2723:2841   */\n    tag_123:\n        /* \"#utility.yul\":2810:2834   */\n      tag_125\n        /* \"#utility.yul\":2828:2833   */\n      dup2\n        /* \"#utility.yul\":2810:2834   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2805:2808   */\n      dup3\n        /* \"#utility.yul\":2798:2835   */\n      mstore\n        /* \"#utility.yul\":2788:2841   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2847:3101   */\n    tag_40:\n        /* \"#utility.yul\":2956:2960   */\n      0x00\n        /* \"#utility.yul\":2994:2996   */\n      0x20\n        /* \"#utility.yul\":2983:2992   */\n      dup3\n        /* \"#utility.yul\":2979:2997   */\n      add\n        /* \"#utility.yul\":2971:2997   */\n      swap1\n      pop\n        /* \"#utility.yul\":3007:3094   */\n      tag_128\n        /* \"#utility.yul\":3091:3092   */\n      0x00\n        /* \"#utility.yul\":3080:3089   */\n      dup4\n        /* \"#utility.yul\":3076:3093   */\n      add\n        /* \"#utility.yul\":3067:3073   */\n      dup5\n        /* \"#utility.yul\":3007:3094   */\n      tag_97\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2961:3101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3107:3317   */\n    tag_26:\n        /* \"#utility.yul\":3194:3198   */\n      0x00\n        /* \"#utility.yul\":3232:3234   */\n      0x20\n        /* \"#utility.yul\":3221:3230   */\n      dup3\n        /* \"#utility.yul\":3217:3235   */\n      add\n        /* \"#utility.yul\":3209:3235   */\n      swap1\n      pop\n        /* \"#utility.yul\":3245:3310   */\n      tag_130\n        /* \"#utility.yul\":3307:3308   */\n      0x00\n        /* \"#utility.yul\":3296:3305   */\n      dup4\n        /* \"#utility.yul\":3292:3309   */\n      add\n        /* \"#utility.yul\":3283:3289   */\n      dup5\n        /* \"#utility.yul\":3245:3310   */\n      tag_101\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3199:3317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3323:3575   */\n    tag_36:\n        /* \"#utility.yul\":3431:3435   */\n      0x00\n        /* \"#utility.yul\":3469:3471   */\n      0x20\n        /* \"#utility.yul\":3458:3467   */\n      dup3\n        /* \"#utility.yul\":3454:3472   */\n      add\n        /* \"#utility.yul\":3446:3472   */\n      swap1\n      pop\n        /* \"#utility.yul\":3482:3568   */\n      tag_132\n        /* \"#utility.yul\":3565:3566   */\n      0x00\n        /* \"#utility.yul\":3554:3563   */\n      dup4\n        /* \"#utility.yul\":3550:3567   */\n      add\n        /* \"#utility.yul\":3541:3547   */\n      dup5\n        /* \"#utility.yul\":3482:3568   */\n      tag_105\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3436:3575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3581:3839   */\n    tag_46:\n        /* \"#utility.yul\":3692:3696   */\n      0x00\n        /* \"#utility.yul\":3730:3732   */\n      0x20\n        /* \"#utility.yul\":3719:3728   */\n      dup3\n        /* \"#utility.yul\":3715:3733   */\n      add\n        /* \"#utility.yul\":3707:3733   */\n      swap1\n      pop\n        /* \"#utility.yul\":3743:3832   */\n      tag_134\n        /* \"#utility.yul\":3829:3830   */\n      0x00\n        /* \"#utility.yul\":3818:3827   */\n      dup4\n        /* \"#utility.yul\":3814:3831   */\n      add\n        /* \"#utility.yul\":3805:3811   */\n      dup5\n        /* \"#utility.yul\":3743:3832   */\n      tag_109\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3697:3839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3845:4093   */\n    tag_22:\n        /* \"#utility.yul\":3951:3955   */\n      0x00\n        /* \"#utility.yul\":3989:3991   */\n      0x20\n        /* \"#utility.yul\":3978:3987   */\n      dup3\n        /* \"#utility.yul\":3974:3992   */\n      add\n        /* \"#utility.yul\":3966:3992   */\n      swap1\n      pop\n        /* \"#utility.yul\":4002:4086   */\n      tag_136\n        /* \"#utility.yul\":4083:4084   */\n      0x00\n        /* \"#utility.yul\":4072:4081   */\n      dup4\n        /* \"#utility.yul\":4068:4085   */\n      add\n        /* \"#utility.yul\":4059:4065   */\n      dup5\n        /* \"#utility.yul\":4002:4086   */\n      tag_113\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3956:4093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4099:4518   */\n    tag_61:\n        /* \"#utility.yul\":4265:4269   */\n      0x00\n        /* \"#utility.yul\":4303:4305   */\n      0x20\n        /* \"#utility.yul\":4292:4301   */\n      dup3\n        /* \"#utility.yul\":4288:4306   */\n      add\n        /* \"#utility.yul\":4280:4306   */\n      swap1\n      pop\n        /* \"#utility.yul\":4352:4361   */\n      dup2\n        /* \"#utility.yul\":4346:4350   */\n      dup2\n        /* \"#utility.yul\":4342:4362   */\n      sub\n        /* \"#utility.yul\":4338:4339   */\n      0x00\n        /* \"#utility.yul\":4327:4336   */\n      dup4\n        /* \"#utility.yul\":4323:4340   */\n      add\n        /* \"#utility.yul\":4316:4363   */\n      mstore\n        /* \"#utility.yul\":4380:4511   */\n      tag_138\n        /* \"#utility.yul\":4506:4510   */\n      dup2\n        /* \"#utility.yul\":4380:4511   */\n      tag_117\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4372:4511   */\n      swap1\n      pop\n        /* \"#utility.yul\":4270:4518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4524:4746   */\n    tag_18:\n        /* \"#utility.yul\":4617:4621   */\n      0x00\n        /* \"#utility.yul\":4655:4657   */\n      0x20\n        /* \"#utility.yul\":4644:4653   */\n      dup3\n        /* \"#utility.yul\":4640:4658   */\n      add\n        /* \"#utility.yul\":4632:4658   */\n      swap1\n      pop\n        /* \"#utility.yul\":4668:4739   */\n      tag_140\n        /* \"#utility.yul\":4736:4737   */\n      0x00\n        /* \"#utility.yul\":4725:4734   */\n      dup4\n        /* \"#utility.yul\":4721:4738   */\n      add\n        /* \"#utility.yul\":4712:4718   */\n      dup5\n        /* \"#utility.yul\":4668:4739   */\n      tag_123\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4622:4746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4752:4921   */\n    tag_120:\n        /* \"#utility.yul\":4836:4847   */\n      0x00\n        /* \"#utility.yul\":4870:4876   */\n      dup3\n        /* \"#utility.yul\":4865:4868   */\n      dup3\n        /* \"#utility.yul\":4858:4877   */\n      mstore\n        /* \"#utility.yul\":4910:4914   */\n      0x20\n        /* \"#utility.yul\":4905:4908   */\n      dup3\n        /* \"#utility.yul\":4901:4915   */\n      add\n        /* \"#utility.yul\":4886:4915   */\n      swap1\n      pop\n        /* \"#utility.yul\":4848:4921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4927:5275   */\n    tag_77:\n        /* \"#utility.yul\":4967:4974   */\n      0x00\n        /* \"#utility.yul\":4990:5010   */\n      tag_143\n        /* \"#utility.yul\":5008:5009   */\n      dup3\n        /* \"#utility.yul\":4990:5010   */\n      tag_126\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4985:5010   */\n      swap2\n      pop\n        /* \"#utility.yul\":5024:5044   */\n      tag_144\n        /* \"#utility.yul\":5042:5043   */\n      dup4\n        /* \"#utility.yul\":5024:5044   */\n      tag_126\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5019:5044   */\n      swap3\n      pop\n        /* \"#utility.yul\":5212:5213   */\n      dup2\n        /* \"#utility.yul\":5144:5210   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5140:5214   */\n      div\n        /* \"#utility.yul\":5137:5138   */\n      dup4\n        /* \"#utility.yul\":5134:5215   */\n      gt\n        /* \"#utility.yul\":5129:5130   */\n      dup3\n        /* \"#utility.yul\":5122:5131   */\n      iszero\n        /* \"#utility.yul\":5115:5132   */\n      iszero\n        /* \"#utility.yul\":5111:5216   */\n      and\n        /* \"#utility.yul\":5108:5110   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":5219:5237   */\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5108:5110   */\n    tag_145:\n        /* \"#utility.yul\":5267:5268   */\n      dup3\n        /* \"#utility.yul\":5264:5265   */\n      dup3\n        /* \"#utility.yul\":5260:5269   */\n      mul\n        /* \"#utility.yul\":5249:5269   */\n      swap1\n      pop\n        /* \"#utility.yul\":4975:5275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5281:5377   */\n    tag_148:\n        /* \"#utility.yul\":5318:5325   */\n      0x00\n        /* \"#utility.yul\":5347:5371   */\n      tag_150\n        /* \"#utility.yul\":5365:5370   */\n      dup3\n        /* \"#utility.yul\":5347:5371   */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5336:5371   */\n      swap1\n      pop\n        /* \"#utility.yul\":5326:5377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5383:5487   */\n    tag_100:\n        /* \"#utility.yul\":5428:5435   */\n      0x00\n        /* \"#utility.yul\":5457:5481   */\n      tag_153\n        /* \"#utility.yul\":5475:5480   */\n      dup3\n        /* \"#utility.yul\":5457:5481   */\n      tag_151\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5446:5481   */\n      swap1\n      pop\n        /* \"#utility.yul\":5436:5487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5493:5583   */\n    tag_104:\n        /* \"#utility.yul\":5527:5534   */\n      0x00\n        /* \"#utility.yul\":5570:5575   */\n      dup2\n        /* \"#utility.yul\":5563:5576   */\n      iszero\n        /* \"#utility.yul\":5556:5577   */\n      iszero\n        /* \"#utility.yul\":5545:5577   */\n      swap1\n      pop\n        /* \"#utility.yul\":5535:5583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5589:5715   */\n    tag_151:\n        /* \"#utility.yul\":5626:5633   */\n      0x00\n        /* \"#utility.yul\":5666:5708   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5659:5664   */\n      dup3\n        /* \"#utility.yul\":5655:5709   */\n      and\n        /* \"#utility.yul\":5644:5709   */\n      swap1\n      pop\n        /* \"#utility.yul\":5634:5715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5721:5798   */\n    tag_126:\n        /* \"#utility.yul\":5758:5765   */\n      0x00\n        /* \"#utility.yul\":5787:5792   */\n      dup2\n        /* \"#utility.yul\":5776:5792   */\n      swap1\n      pop\n        /* \"#utility.yul\":5766:5798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5804:5960   */\n    tag_108:\n        /* \"#utility.yul\":5869:5878   */\n      0x00\n        /* \"#utility.yul\":5902:5954   */\n      tag_158\n        /* \"#utility.yul\":5948:5953   */\n      dup3\n        /* \"#utility.yul\":5902:5954   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5889:5954   */\n      swap1\n      pop\n        /* \"#utility.yul\":5879:5960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5966:6094   */\n    tag_159:\n        /* \"#utility.yul\":6031:6040   */\n      0x00\n        /* \"#utility.yul\":6064:6088   */\n      tag_161\n        /* \"#utility.yul\":6082:6087   */\n      dup3\n        /* \"#utility.yul\":6064:6088   */\n      tag_151\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":6051:6088   */\n      swap1\n      pop\n        /* \"#utility.yul\":6041:6094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6100:6262   */\n    tag_112:\n        /* \"#utility.yul\":6168:6177   */\n      0x00\n        /* \"#utility.yul\":6201:6256   */\n      tag_163\n        /* \"#utility.yul\":6250:6255   */\n      dup3\n        /* \"#utility.yul\":6201:6256   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":6188:6256   */\n      swap1\n      pop\n        /* \"#utility.yul\":6178:6262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6268:6399   */\n    tag_164:\n        /* \"#utility.yul\":6336:6345   */\n      0x00\n        /* \"#utility.yul\":6369:6393   */\n      tag_166\n        /* \"#utility.yul\":6387:6392   */\n      dup3\n        /* \"#utility.yul\":6369:6393   */\n      tag_151\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":6356:6393   */\n      swap1\n      pop\n        /* \"#utility.yul\":6346:6399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6405:6557   */\n    tag_116:\n        /* \"#utility.yul\":6468:6477   */\n      0x00\n        /* \"#utility.yul\":6501:6551   */\n      tag_168\n        /* \"#utility.yul\":6545:6550   */\n      dup3\n        /* \"#utility.yul\":6501:6551   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6488:6551   */\n      swap1\n      pop\n        /* \"#utility.yul\":6478:6557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6689   */\n    tag_169:\n        /* \"#utility.yul\":6626:6635   */\n      0x00\n        /* \"#utility.yul\":6659:6683   */\n      tag_171\n        /* \"#utility.yul\":6677:6682   */\n      dup3\n        /* \"#utility.yul\":6659:6683   */\n      tag_151\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6646:6683   */\n      swap1\n      pop\n        /* \"#utility.yul\":6636:6689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6695:6875   */\n    tag_147:\n        /* \"#utility.yul\":6743:6820   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6740:6741   */\n      0x00\n        /* \"#utility.yul\":6733:6821   */\n      mstore\n        /* \"#utility.yul\":6840:6844   */\n      0x11\n        /* \"#utility.yul\":6837:6838   */\n      0x04\n        /* \"#utility.yul\":6830:6845   */\n      mstore\n        /* \"#utility.yul\":6864:6868   */\n      0x24\n        /* \"#utility.yul\":6861:6862   */\n      0x00\n        /* \"#utility.yul\":6854:6869   */\n      revert\n        /* \"#utility.yul\":6881:7057   */\n    tag_122:\n        /* \"#utility.yul\":7021:7049   */\n      0x4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000\n        /* \"#utility.yul\":7017:7018   */\n      0x00\n        /* \"#utility.yul\":7009:7015   */\n      dup3\n        /* \"#utility.yul\":7005:7019   */\n      add\n        /* \"#utility.yul\":6998:7050   */\n      mstore\n        /* \"#utility.yul\":6987:7057   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7063:7185   */\n    tag_82:\n        /* \"#utility.yul\":7136:7160   */\n      tag_175\n        /* \"#utility.yul\":7154:7159   */\n      dup2\n        /* \"#utility.yul\":7136:7160   */\n      tag_148\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":7129:7134   */\n      dup2\n        /* \"#utility.yul\":7126:7161   */\n      eq\n        /* \"#utility.yul\":7116:7118   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":7175:7176   */\n      0x00\n        /* \"#utility.yul\":7172:7173   */\n      dup1\n        /* \"#utility.yul\":7165:7177   */\n      revert\n        /* \"#utility.yul\":7116:7118   */\n    tag_176:\n        /* \"#utility.yul\":7106:7185   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7191:7313   */\n    tag_86:\n        /* \"#utility.yul\":7264:7288   */\n      tag_178\n        /* \"#utility.yul\":7282:7287   */\n      dup2\n        /* \"#utility.yul\":7264:7288   */\n      tag_126\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":7257:7262   */\n      dup2\n        /* \"#utility.yul\":7254:7289   */\n      eq\n        /* \"#utility.yul\":7244:7246   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":7303:7304   */\n      0x00\n        /* \"#utility.yul\":7300:7301   */\n      dup1\n        /* \"#utility.yul\":7293:7305   */\n      revert\n        /* \"#utility.yul\":7244:7246   */\n    tag_179:\n        /* \"#utility.yul\":7234:7313   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209ea7c4a7860d9a011e074aa191884327da75e62679b1cfa91c138a0de37f8fb464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001600660146101000a81548160ff0219169083151502179055506001600660156101000a81548160ff02191690831515021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610aa6806100976000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637cac00ee116100715780637cac00ee14610144578063893d20e8146101625780639eb4eae514610180578063c412eaba1461018a578063c740671f146101a8578063ee72b8cc146101c4576100a9565b80631b9cbdfb146100ae57806321df0da7146100cc57806328919df6146100ea5780633a1a8080146101085780636805b84b14610126575b600080fd5b6100b66101ce565b6040516100c3919061089e565b60405180910390f35b6100d46101d4565b6040516100e19190610863565b60405180910390f35b6100f26101fe565b6040516100ff9190610812565b60405180910390f35b610110610215565b60405161011d919061089e565b60405180910390f35b61012e61021b565b60405161013b9190610812565b60405180910390f35b61014c610232565b604051610159919061082d565b60405180910390f35b61016a61025b565b60405161017791906107f7565b60405180910390f35b610188610285565b005b610192610341565b60405161019f9190610848565b60405180910390f35b6101c260048036038101906101bd91906106c8565b61036b565b005b6101cc6105cc565b005b60085481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660159054906101000a900460ff16905090565b60075481565b6000600660149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c9061087e565b60405180910390fd5b600660149054906101000a900460ff1615600660146101000a81548160ff021916908315150217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f29061087e565b60405180910390fd5b610416670de0b6b3a76400008361068890919063ffffffff16565b600781905550610437670de0b6b3a76400008261068890919063ffffffff16565b600881905550876000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106539061087e565b60405180910390fd5b600660159054906101000a900460ff1615600660156101000a81548160ff021916908315150217905550565b6000818361069691906108ca565b905092915050565b6000813590506106ad81610a42565b92915050565b6000813590506106c281610a59565b92915050565b600080600080600080600080610100898b0312156106e557600080fd5b60006106f38b828c0161069e565b98505060206107048b828c0161069e565b97505060406107158b828c0161069e565b96505060606107268b828c0161069e565b95505060806107378b828c0161069e565b94505060a06107488b828c0161069e565b93505060c06107598b828c016106b3565b92505060e061076a8b828c016106b3565b9150509295985092959890939650565b61078381610936565b82525050565b61079281610948565b82525050565b6107a18161097e565b82525050565b6107b0816109a2565b82525050565b6107bf816109c6565b82525050565b60006107d2601a836108b9565b91506107dd82610a19565b602082019050919050565b6107f181610974565b82525050565b600060208201905061080c600083018461077a565b92915050565b60006020820190506108276000830184610789565b92915050565b60006020820190506108426000830184610798565b92915050565b600060208201905061085d60008301846107a7565b92915050565b600060208201905061087860008301846107b6565b92915050565b60006020820190508181036000830152610897816107c5565b9050919050565b60006020820190506108b360008301846107e8565b92915050565b600082825260208201905092915050565b60006108d582610974565b91506108e083610974565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610919576109186109ea565b5b828202905092915050565b600061092f82610954565b9050919050565b600061094182610954565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061098982610990565b9050919050565b600061099b82610954565b9050919050565b60006109ad826109b4565b9050919050565b60006109bf82610954565b9050919050565b60006109d1826109d8565b9050919050565b60006109e382610954565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b610a4b81610924565b8114610a5657600080fd5b50565b610a6281610974565b8114610a6d57600080fd5b5056fea26469706673582212209ea7c4a7860d9a011e074aa191884327da75e62679b1cfa91c138a0de37f8fb464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xAA6 DUP1 PUSH2 0x97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CAC00EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xC740671F EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1C4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x416 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x688 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x437 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x688 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x6 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6AD DUP2 PUSH2 0xA42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C2 DUP2 PUSH2 0xA59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F3 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x704 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x715 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x726 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x737 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x748 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x759 DUP12 DUP3 DUP13 ADD PUSH2 0x6B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x76A DUP12 DUP3 DUP13 ADD PUSH2 0x6B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x783 DUP2 PUSH2 0x936 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x792 DUP2 PUSH2 0x948 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x97E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0x9A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7BF DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 PUSH1 0x1A DUP4 PUSH2 0x8B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP3 PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F1 DUP2 PUSH2 0x974 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x827 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x789 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x842 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x798 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x878 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x897 DUP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D5 DUP3 PUSH2 0x974 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E0 DUP4 PUSH2 0x974 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x919 JUMPI PUSH2 0x918 PUSH2 0x9EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92F DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x941 DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x989 DUP3 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99B DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP3 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BF DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP3 PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E3 DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xA4B DUP2 PUSH2 0x924 JUMP JUMPDEST DUP2 EQ PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA62 DUP2 PUSH2 0x974 JUMP JUMPDEST DUP2 EQ PUSH2 0xA6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xA7 0xC4 0xA7 DUP7 0xD SWAP11 ADD 0x1E SMOD 0x4A LOG1 SWAP2 DUP9 NUMBER 0x27 0xDA PUSH22 0xE62679B1CFA91C138A0DE37F8FB464736F6C63430008 DIV STOP CALLER ",
							"sourceMap": "261:2277:2:-:0;;;911:114;;;;;;;;;;944:4;935:6;;:13;;;;;;;;;;;;;;;;;;973:4;958:12;;:19;;;;;;;;;;;;;;;;;;1007:10;987:9;;:31;;;;;;;;;;;;;;;;;;261:2277;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7316:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "7:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:10",
														"type": ""
													}
												],
												"src": "152:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:1097:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "529:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "538:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "541:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "531:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "531:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "531:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "503:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "512:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "524:3:10",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "495:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:33:10"
															},
															"nodeType": "YulIf",
															"src": "492:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "555:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "570:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "574:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "599:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "634:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "645:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "630:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "654:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "609:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "599:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "682:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "697:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "711:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "701:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "727:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "762:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "773:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "758:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "758:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "782:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "737:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "727:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "810:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "825:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "829:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "855:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "890:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "901:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "886:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "886:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "910:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "865:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "865:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "855:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "938:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "953:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "967:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "957:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "983:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1018:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1029:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1014:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1014:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1038:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "993:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "993:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "983:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1066:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1081:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1095:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1085:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1112:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1147:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1158:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1143:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1143:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1167:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1122:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1122:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1112:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1195:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1210:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1224:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1214:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1241:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1276:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1287:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1272:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1272:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1296:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1251:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "1241:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1324:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1339:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1353:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1343:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1370:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1405:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1416:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1401:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1401:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1425:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1380:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1380:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "1370:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1453:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1468:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:3:10",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1472:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1499:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1534:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1545:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1530:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1530:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1554:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1509:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "451:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "459:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "467:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"src": "297:1282:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1714:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1688:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1688:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1676:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1654:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1661:3:10",
														"type": ""
													}
												],
												"src": "1585:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1792:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1809:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1829:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1814:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1814:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1802:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1802:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1787:3:10",
														"type": ""
													}
												],
												"src": "1733:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1928:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1945:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1996:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1950:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1950:52:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:65:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1916:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1923:3:10",
														"type": ""
													}
												],
												"src": "1848:161:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2115:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2169:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP37Full_$580_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2120:48:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2120:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2108:68:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP37Full_$580_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2086:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2093:3:10",
														"type": ""
													}
												],
												"src": "2015:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2266:79:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2283:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP7_$711_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2288:43:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:50:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2276:63:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP7_$711_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2254:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2261:3:10",
														"type": ""
													}
												],
												"src": "2188:157:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2497:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2507:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2573:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2578:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2514:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2514:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2507:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2679:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																	"nodeType": "YulIdentifier",
																	"src": "2590:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2590:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2692:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2703:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2708:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2699:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2699:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2692:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2485:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2493:3:10",
														"type": ""
													}
												],
												"src": "2351:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2788:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2805:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2828:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2810:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2810:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2798:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2776:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2783:3:10",
														"type": ""
													}
												],
												"src": "2723:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2961:140:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2971:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2983:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2994:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2979:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2979:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2971:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3067:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3080:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3091:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3076:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3007:59:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3007:87:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3007:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2933:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2945:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2956:4:10",
														"type": ""
													}
												],
												"src": "2847:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3199:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3209:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3221:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3232:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3217:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3209:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3283:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3296:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3307:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3292:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3245:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3245:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3183:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3194:4:10",
														"type": ""
													}
												],
												"src": "3107:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3436:139:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3446:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3458:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3469:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3454:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3446:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3541:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3554:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3565:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3550:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3482:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3482:86:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3482:86:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3408:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3420:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3431:4:10",
														"type": ""
													}
												],
												"src": "3323:252:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3697:142:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3707:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3719:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3730:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3715:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3715:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3707:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3805:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3818:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3829:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3814:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3814:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP37Full_$580_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3743:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:89:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:89:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP37Full_$580__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3669:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3681:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3692:4:10",
														"type": ""
													}
												],
												"src": "3581:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3956:137:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3966:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3978:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3974:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3966:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4059:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4072:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4083:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4068:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP7_$711_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4002:56:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4002:84:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4002:84:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP7_$711__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3928:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3940:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3951:4:10",
														"type": ""
													}
												],
												"src": "3845:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4270:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4280:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4288:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4280:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4346:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4352:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4342:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4342:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4372:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4506:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4380:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4372:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4250:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4265:4:10",
														"type": ""
													}
												],
												"src": "4099:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4622:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4632:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4644:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4655:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4640:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4640:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4632:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4712:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4725:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4736:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4721:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4721:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4668:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4668:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4594:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4606:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4617:4:10",
														"type": ""
													}
												],
												"src": "4524:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4848:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4865:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4870:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4858:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4858:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4858:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4886:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4905:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4910:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4901:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4901:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4886:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4820:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4825:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4836:11:10",
														"type": ""
													}
												],
												"src": "4752:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:300:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4985:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5008:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4990:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4985:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5019:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5042:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5024:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5024:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5019:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5217:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5219:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5219:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5219:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5129:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5122:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5122:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5115:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5115:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5137:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5144:66:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5212:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5140:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5140:74:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5134:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5134:81:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5111:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5111:105:10"
															},
															"nodeType": "YulIf",
															"src": "5108:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5249:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5264:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5267:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5260:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5249:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4958:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4961:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4967:7:10",
														"type": ""
													}
												],
												"src": "4927:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5326:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5336:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5365:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5347:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5347:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5336:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5308:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5318:7:10",
														"type": ""
													}
												],
												"src": "5281:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5436:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5446:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5475:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5457:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5457:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5446:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5418:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5428:7:10",
														"type": ""
													}
												],
												"src": "5383:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5535:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5545:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5570:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5563:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5563:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5545:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5517:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5527:7:10",
														"type": ""
													}
												],
												"src": "5493:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5634:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5644:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5659:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5655:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5644:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5616:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5626:7:10",
														"type": ""
													}
												],
												"src": "5589:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5766:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5776:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5787:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5776:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5748:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5758:7:10",
														"type": ""
													}
												],
												"src": "5721:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5879:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5889:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5948:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5902:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5902:52:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5889:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5859:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5869:9:10",
														"type": ""
													}
												],
												"src": "5804:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6041:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6051:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6082:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6064:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6064:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6051:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6021:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6031:9:10",
														"type": ""
													}
												],
												"src": "5966:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6178:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6188:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6250:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP37Full_$580_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6201:48:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6201:55:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6188:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$580_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6158:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6168:9:10",
														"type": ""
													}
												],
												"src": "6100:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6346:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6356:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6387:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6369:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6369:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6356:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$580_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6326:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6336:9:10",
														"type": ""
													}
												],
												"src": "6268:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6478:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6488:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6545:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP7_$711_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6501:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6501:50:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6488:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$711_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6458:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6468:9:10",
														"type": ""
													}
												],
												"src": "6405:152:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6636:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6646:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6677:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6659:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6646:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$711_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6616:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6626:9:10",
														"type": ""
													}
												],
												"src": "6563:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6723:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6740:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6743:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6733:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6733:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6837:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6840:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6830:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6830:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6861:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6864:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6854:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6854:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6854:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6695:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6987:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7009:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7017:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7005:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7005:14:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7021:28:10",
																		"type": "",
																		"value": "HeroCore Error : onlyOwner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6998:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6998:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6979:6:10",
														"type": ""
													}
												],
												"src": "6881:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7106:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7163:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7172:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7175:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7165:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7165:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7165:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7129:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7154:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7136:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7136:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7126:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7126:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7119:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7119:43:10"
															},
															"nodeType": "YulIf",
															"src": "7116:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7099:5:10",
														"type": ""
													}
												],
												"src": "7063:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7234:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7291:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7300:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7303:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7293:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7293:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7293:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7257:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7282:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7264:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7264:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7254:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7254:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7247:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:43:10"
															},
															"nodeType": "YulIf",
															"src": "7244:2:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7227:5:10",
														"type": ""
													}
												],
												"src": "7191:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IHeroNFT_$30_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP37Full_$580_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP37Full_$580_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP7_$711_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP7_$711_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP37Full_$580__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP37Full_$580_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP7_$711__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP7_$711_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IHeroNFT_$30_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$580_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP37Full_$580_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$580_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$711_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP7_$711_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$711_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"HeroCore Error : onlyOwner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80637cac00ee116100715780637cac00ee14610144578063893d20e8146101625780639eb4eae514610180578063c412eaba1461018a578063c740671f146101a8578063ee72b8cc146101c4576100a9565b80631b9cbdfb146100ae57806321df0da7146100cc57806328919df6146100ea5780633a1a8080146101085780636805b84b14610126575b600080fd5b6100b66101ce565b6040516100c3919061089e565b60405180910390f35b6100d46101d4565b6040516100e19190610863565b60405180910390f35b6100f26101fe565b6040516100ff9190610812565b60405180910390f35b610110610215565b60405161011d919061089e565b60405180910390f35b61012e61021b565b60405161013b9190610812565b60405180910390f35b61014c610232565b604051610159919061082d565b60405180910390f35b61016a61025b565b60405161017791906107f7565b60405180910390f35b610188610285565b005b610192610341565b60405161019f9190610848565b60405180910390f35b6101c260048036038101906101bd91906106c8565b61036b565b005b6101cc6105cc565b005b60085481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660159054906101000a900460ff16905090565b60075481565b6000600660149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c9061087e565b60405180910390fd5b600660149054906101000a900460ff1615600660146101000a81548160ff021916908315150217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f29061087e565b60405180910390fd5b610416670de0b6b3a76400008361068890919063ffffffff16565b600781905550610437670de0b6b3a76400008261068890919063ffffffff16565b600881905550876000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106539061087e565b60405180910390fd5b600660159054906101000a900460ff1615600660156101000a81548160ff021916908315150217905550565b6000818361069691906108ca565b905092915050565b6000813590506106ad81610a42565b92915050565b6000813590506106c281610a59565b92915050565b600080600080600080600080610100898b0312156106e557600080fd5b60006106f38b828c0161069e565b98505060206107048b828c0161069e565b97505060406107158b828c0161069e565b96505060606107268b828c0161069e565b95505060806107378b828c0161069e565b94505060a06107488b828c0161069e565b93505060c06107598b828c016106b3565b92505060e061076a8b828c016106b3565b9150509295985092959890939650565b61078381610936565b82525050565b61079281610948565b82525050565b6107a18161097e565b82525050565b6107b0816109a2565b82525050565b6107bf816109c6565b82525050565b60006107d2601a836108b9565b91506107dd82610a19565b602082019050919050565b6107f181610974565b82525050565b600060208201905061080c600083018461077a565b92915050565b60006020820190506108276000830184610789565b92915050565b60006020820190506108426000830184610798565b92915050565b600060208201905061085d60008301846107a7565b92915050565b600060208201905061087860008301846107b6565b92915050565b60006020820190508181036000830152610897816107c5565b9050919050565b60006020820190506108b360008301846107e8565b92915050565b600082825260208201905092915050565b60006108d582610974565b91506108e083610974565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610919576109186109ea565b5b828202905092915050565b600061092f82610954565b9050919050565b600061094182610954565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061098982610990565b9050919050565b600061099b82610954565b9050919050565b60006109ad826109b4565b9050919050565b60006109bf82610954565b9050919050565b60006109d1826109d8565b9050919050565b60006109e382610954565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b610a4b81610924565b8114610a5657600080fd5b50565b610a6281610974565b8114610a6d57600080fd5b5056fea26469706673582212209ea7c4a7860d9a011e074aa191884327da75e62679b1cfa91c138a0de37f8fb464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CAC00EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xC740671F EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1C4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x416 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x688 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x437 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x688 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x6 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x8CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6AD DUP2 PUSH2 0xA42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C2 DUP2 PUSH2 0xA59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F3 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x704 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x715 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x726 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x737 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x748 DUP12 DUP3 DUP13 ADD PUSH2 0x69E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x759 DUP12 DUP3 DUP13 ADD PUSH2 0x6B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x76A DUP12 DUP3 DUP13 ADD PUSH2 0x6B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x783 DUP2 PUSH2 0x936 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x792 DUP2 PUSH2 0x948 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x97E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0x9A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7BF DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 PUSH1 0x1A DUP4 PUSH2 0x8B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP3 PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F1 DUP2 PUSH2 0x974 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x827 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x789 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x842 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x798 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x878 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x897 DUP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D5 DUP3 PUSH2 0x974 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E0 DUP4 PUSH2 0x974 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x919 JUMPI PUSH2 0x918 PUSH2 0x9EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92F DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x941 DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x989 DUP3 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99B DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP3 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BF DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP3 PUSH2 0x9D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E3 DUP3 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xA4B DUP2 PUSH2 0x924 JUMP JUMPDEST DUP2 EQ PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA62 DUP2 PUSH2 0x974 JUMP JUMPDEST DUP2 EQ PUSH2 0xA6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xA7 0xC4 0xA7 DUP7 0xD SWAP11 ADD 0x1E SMOD 0x4A LOG1 SWAP2 DUP9 NUMBER 0x27 0xDA PUSH22 0xE62679B1CFA91C138A0DE37F8FB464736F6C63430008 DIV STOP CALLER ",
							"sourceMap": "261:2277:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2268:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2086:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;595:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2002:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2351:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1905:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1691:76;;;:::i;:::-;;2182:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1079:606;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1773:94;;;:::i;:::-;;627:27;;;;:::o;2268:77::-;2309:5;2333;;;;;;;;;;;2326:12;;2268:77;:::o;2086:90::-;2134:4;2157:12;;;;;;;;;;;2150:19;;2086:90;:::o;595:26::-;;;;:::o;2002:78::-;2044:4;2067:6;;;;;;;;;;;2060:13;;2002:78;:::o;2351:84::-;2394:8;2421:7;;;;;;;;;;;2414:14;;2351:84;:::o;1905:91::-;1946:15;1980:9;;;;;;;;;;;1973:16;;1905:91;:::o;1691:76::-;847:9;;;;;;;;;;;833:23;;:10;:23;;;825:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1754:6:::1;;;;;;;;;;;1753:7;1744:6;;:16;;;;;;;;;;;;;;;;;;1691:76::o:0;2182:80::-;2222:10;2251:4;;;;;;;;;;;2244:11;;2182:80;:::o;1079:606::-;847:9;;;;;;;;;;;833:23;;:10;:23;;;825:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1369:19:::1;696:4;1369:5;:9;;:19;;;;:::i;:::-;1355:11;:33;;;;1413:25;696:4;1413:11;:15;;:25;;;;:::i;:::-;1398:12;:40;;;;1468:8;1449:7;::::0;:28:::1;;;;;;;;;;;;;;;;;;1501:6;1487:5;;:21;;;;;;;;;;;;;;;;;;1536:5;1518:4;;:24;;;;;;;;;;;;;;;;;;1581:13;1552:12;;:43;;;;;;;;;;;;;;;;;;1623:15;1606:14;;:32;;;;;;;;;;;;;;;;;;1664:14;1648:13;;:30;;;;;;;;;;;;;;;;;;1079:606:::0;;;;;;;;:::o;1773:94::-;847:9;;;;;;;;;;;833:23;;:10;:23;;;825:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1848:12:::1;;;;;;;;;;;1847:13;1832:12;;:28;;;;;;;;;;;;;;;;;;1773:94::o:0;283:96:9:-;341:7;371:1;367;:5;;;;:::i;:::-;360:12;;283:96;;;;:::o;7:139:10:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:1282::-;419:6;427;435;443;451;459;467;475;524:3;512:9;503:7;499:23;495:33;492:2;;;541:1;538;531:12;492:2;584:1;609:53;654:7;645:6;634:9;630:22;609:53;:::i;:::-;599:63;;555:117;711:2;737:53;782:7;773:6;762:9;758:22;737:53;:::i;:::-;727:63;;682:118;839:2;865:53;910:7;901:6;890:9;886:22;865:53;:::i;:::-;855:63;;810:118;967:2;993:53;1038:7;1029:6;1018:9;1014:22;993:53;:::i;:::-;983:63;;938:118;1095:3;1122:53;1167:7;1158:6;1147:9;1143:22;1122:53;:::i;:::-;1112:63;;1066:119;1224:3;1251:53;1296:7;1287:6;1276:9;1272:22;1251:53;:::i;:::-;1241:63;;1195:119;1353:3;1380:53;1425:7;1416:6;1405:9;1401:22;1380:53;:::i;:::-;1370:63;;1324:119;1482:3;1509:53;1554:7;1545:6;1534:9;1530:22;1509:53;:::i;:::-;1499:63;;1453:119;482:1097;;;;;;;;;;;:::o;1585:142::-;1688:32;1714:5;1688:32;:::i;:::-;1683:3;1676:45;1666:61;;:::o;1733:109::-;1814:21;1829:5;1814:21;:::i;:::-;1809:3;1802:34;1792:50;;:::o;1848:161::-;1950:52;1996:5;1950:52;:::i;:::-;1945:3;1938:65;1928:81;;:::o;2015:167::-;2120:55;2169:5;2120:55;:::i;:::-;2115:3;2108:68;2098:84;;:::o;2188:157::-;2288:50;2332:5;2288:50;:::i;:::-;2283:3;2276:63;2266:79;;:::o;2351:366::-;2493:3;2514:67;2578:2;2573:3;2514:67;:::i;:::-;2507:74;;2590:93;2679:3;2590:93;:::i;:::-;2708:2;2703:3;2699:12;2692:19;;2497:220;;;:::o;2723:118::-;2810:24;2828:5;2810:24;:::i;:::-;2805:3;2798:37;2788:53;;:::o;2847:254::-;2956:4;2994:2;2983:9;2979:18;2971:26;;3007:87;3091:1;3080:9;3076:17;3067:6;3007:87;:::i;:::-;2961:140;;;;:::o;3107:210::-;3194:4;3232:2;3221:9;3217:18;3209:26;;3245:65;3307:1;3296:9;3292:17;3283:6;3245:65;:::i;:::-;3199:118;;;;:::o;3323:252::-;3431:4;3469:2;3458:9;3454:18;3446:26;;3482:86;3565:1;3554:9;3550:17;3541:6;3482:86;:::i;:::-;3436:139;;;;:::o;3581:258::-;3692:4;3730:2;3719:9;3715:18;3707:26;;3743:89;3829:1;3818:9;3814:17;3805:6;3743:89;:::i;:::-;3697:142;;;;:::o;3845:248::-;3951:4;3989:2;3978:9;3974:18;3966:26;;4002:84;4083:1;4072:9;4068:17;4059:6;4002:84;:::i;:::-;3956:137;;;;:::o;4099:419::-;4265:4;4303:2;4292:9;4288:18;4280:26;;4352:9;4346:4;4342:20;4338:1;4327:9;4323:17;4316:47;4380:131;4506:4;4380:131;:::i;:::-;4372:139;;4270:248;;;:::o;4524:222::-;4617:4;4655:2;4644:9;4640:18;4632:26;;4668:71;4736:1;4725:9;4721:17;4712:6;4668:71;:::i;:::-;4622:124;;;;:::o;4752:169::-;4836:11;4870:6;4865:3;4858:19;4910:4;4905:3;4901:14;4886:29;;4848:73;;;;:::o;4927:348::-;4967:7;4990:20;5008:1;4990:20;:::i;:::-;4985:25;;5024:20;5042:1;5024:20;:::i;:::-;5019:25;;5212:1;5144:66;5140:74;5137:1;5134:81;5129:1;5122:9;5115:17;5111:105;5108:2;;;5219:18;;:::i;:::-;5108:2;5267:1;5264;5260:9;5249:20;;4975:300;;;;:::o;5281:96::-;5318:7;5347:24;5365:5;5347:24;:::i;:::-;5336:35;;5326:51;;;:::o;5383:104::-;5428:7;5457:24;5475:5;5457:24;:::i;:::-;5446:35;;5436:51;;;:::o;5493:90::-;5527:7;5570:5;5563:13;5556:21;5545:32;;5535:48;;;:::o;5589:126::-;5626:7;5666:42;5659:5;5655:54;5644:65;;5634:81;;;:::o;5721:77::-;5758:7;5787:5;5776:16;;5766:32;;;:::o;5804:156::-;5869:9;5902:52;5948:5;5902:52;:::i;:::-;5889:65;;5879:81;;;:::o;5966:128::-;6031:9;6064:24;6082:5;6064:24;:::i;:::-;6051:37;;6041:53;;;:::o;6100:162::-;6168:9;6201:55;6250:5;6201:55;:::i;:::-;6188:68;;6178:84;;;:::o;6268:131::-;6336:9;6369:24;6387:5;6369:24;:::i;:::-;6356:37;;6346:53;;;:::o;6405:152::-;6468:9;6501:50;6545:5;6501:50;:::i;:::-;6488:63;;6478:79;;;:::o;6563:126::-;6626:9;6659:24;6677:5;6659:24;:::i;:::-;6646:37;;6636:53;;;:::o;6695:180::-;6743:77;6740:1;6733:88;6840:4;6837:1;6830:15;6864:4;6861:1;6854:15;6881:176;7021:28;7017:1;7009:6;7005:14;6998:52;6987:70;:::o;7063:122::-;7136:24;7154:5;7136:24;:::i;:::-;7129:5;7126:35;7116:2;;7175:1;7172;7165:12;7116:2;7106:79;:::o;7191:122::-;7264:24;7282:5;7264:24;:::i;:::-;7257:5;7254:35;7244:2;;7303:1;7300;7293:12;7244:2;7234:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "545200",
								"executionCost": "63281",
								"totalCost": "608481"
							},
							"external": {
								"changeMiningPaused()": "22930",
								"changePaused()": "22864",
								"getHeroNFT()": "1265",
								"getItem()": "1331",
								"getMiningPaused()": "1274",
								"getOwner()": "1244",
								"getPaused()": "1318",
								"getToken()": "1288",
								"initialize(address,address,address,address,address,address,uint256,uint256)": "infinite",
								"priceOfKlay()": "1196",
								"priceOfToken()": "1130"
							},
							"internal": {
								"_currentTime()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 261,
									"end": 2538,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 261,
									"end": 2538,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 261,
									"end": 2538,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 944,
									"end": 948,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 935,
									"end": 941,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 935,
									"end": 941,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 935,
									"end": 948,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 935,
									"end": 948,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 935,
									"end": 948,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 973,
									"end": 977,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 958,
									"end": 977,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 958,
									"end": 977,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 958,
									"end": 977,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1007,
									"end": 1017,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 987,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 987,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 261,
									"end": 2538,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 2538,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 261,
									"end": 2538,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 2538,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2538,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 261,
									"end": 2538,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2538,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ea7c4a7860d9a011e074aa191884327da75e62679b1cfa91c138a0de37f8fb464736f6c63430008040033",
									".code": [
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "7CAC00EE"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "7CAC00EE"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "9EB4EAE5"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "C412EABA"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "C740671F"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "EE72B8CC"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "1B9CBDFB"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "21DF0DA7"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "28919DF6"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "3A1A8080"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "6805B84B"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2538,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2138,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2421,
											"end": 2428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2435,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 843,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2262,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 843,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 696,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1369,
											"end": 1378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 696,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1413,
											"end": 1424,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1413,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1410,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1398,
											"end": 1438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1438,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1501,
											"end": 1507,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1594,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1552,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1638,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1678,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 843,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1832,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 341,
											"end": 348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 1579,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 297,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 524,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 512,
											"end": 521,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 499,
											"end": 522,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 495,
											"end": 528,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 492,
											"end": 494,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 492,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 492,
											"end": 494,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 531,
											"end": 543,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 492,
											"end": 494,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 492,
											"end": 494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 654,
											"end": 661,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 645,
											"end": 651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 634,
											"end": 643,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 630,
											"end": 652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 599,
											"end": 662,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 599,
											"end": 662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 555,
											"end": 672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 713,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 782,
											"end": 789,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 773,
											"end": 779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 762,
											"end": 771,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 758,
											"end": 780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 737,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 737,
											"end": 790,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 737,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 727,
											"end": 790,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 727,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 682,
											"end": 800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 839,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 890,
											"end": 899,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 886,
											"end": 908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 865,
											"end": 918,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 865,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 855,
											"end": 918,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 855,
											"end": 918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 810,
											"end": 928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 967,
											"end": 969,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 983,
											"end": 1046,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 983,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 938,
											"end": 1056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1098,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1167,
											"end": 1174,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1156,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1175,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1227,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1296,
											"end": 1303,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1285,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1272,
											"end": 1294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 1304,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 1304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1195,
											"end": 1314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1356,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1425,
											"end": 1432,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1443,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1482,
											"end": 1485,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1545,
											"end": 1551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1534,
											"end": 1543,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1585,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1585,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1714,
											"end": 1719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1727,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1733,
											"end": 1842,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1733,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1809,
											"end": 1812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1842,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1848,
											"end": 2009,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1848,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 1948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1938,
											"end": 2003,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 2009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 2009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 2009,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2182,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2015,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2169,
											"end": 2174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2115,
											"end": 2118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2182,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2345,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2188,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2345,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 2717,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2351,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2493,
											"end": 2496,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2578,
											"end": 2580,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2514,
											"end": 2581,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2514,
											"end": 2581,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2514,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2507,
											"end": 2581,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2507,
											"end": 2581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2679,
											"end": 2682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2590,
											"end": 2683,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2590,
											"end": 2683,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2590,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2710,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2497,
											"end": 2717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2497,
											"end": 2717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2497,
											"end": 2717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2497,
											"end": 2717,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2723,
											"end": 2841,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2723,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2828,
											"end": 2833,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2798,
											"end": 2835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2841,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2847,
											"end": 3101,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2956,
											"end": 2960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2971,
											"end": 2997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3091,
											"end": 3092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3089,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3073,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3007,
											"end": 3094,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3007,
											"end": 3094,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3007,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2961,
											"end": 3101,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2961,
											"end": 3101,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2961,
											"end": 3101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2961,
											"end": 3101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2961,
											"end": 3101,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3317,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3107,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3194,
											"end": 3198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3234,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3235,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3307,
											"end": 3308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3305,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3309,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3283,
											"end": 3289,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3245,
											"end": 3310,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3245,
											"end": 3310,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3245,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3317,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3317,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3317,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3323,
											"end": 3575,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3323,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3431,
											"end": 3435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3482,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3565,
											"end": 3566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3547,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3482,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3482,
											"end": 3568,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3482,
											"end": 3568,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3482,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3839,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 3581,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3692,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3732,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3728,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3743,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3829,
											"end": 3830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3827,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3811,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3743,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3743,
											"end": 3832,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3743,
											"end": 3832,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3743,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3839,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3839,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3839,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3845,
											"end": 4093,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3845,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 3955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 3992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 3992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4083,
											"end": 4084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4081,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 4002,
											"end": 4086,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4002,
											"end": 4086,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4002,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4093,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4093,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4093,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4099,
											"end": 4518,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 4099,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4362,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4339,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4336,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4363,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4380,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4506,
											"end": 4510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4380,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 4380,
											"end": 4511,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4380,
											"end": 4511,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4380,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4518,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4524,
											"end": 4746,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 4524,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4718,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4668,
											"end": 4739,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4668,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 4668,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4746,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4746,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4752,
											"end": 4921,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4752,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4877,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4905,
											"end": 4908,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4886,
											"end": 4915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4886,
											"end": 4915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4921,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4921,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4921,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4927,
											"end": 5275,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4927,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5008,
											"end": 5009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4990,
											"end": 5010,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4990,
											"end": 5010,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4990,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5042,
											"end": 5043,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 5024,
											"end": 5044,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5024,
											"end": 5044,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5024,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5044,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5212,
											"end": 5213,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5210,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5140,
											"end": 5214,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5138,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5215,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5129,
											"end": 5130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5131,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5132,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5111,
											"end": 5216,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5265,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5275,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5275,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5281,
											"end": 5377,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 5281,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5318,
											"end": 5325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5365,
											"end": 5370,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5347,
											"end": 5371,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5347,
											"end": 5371,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5347,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5326,
											"end": 5377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5326,
											"end": 5377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5326,
											"end": 5377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5326,
											"end": 5377,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5383,
											"end": 5487,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5383,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5475,
											"end": 5480,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5457,
											"end": 5481,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5457,
											"end": 5481,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5457,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5436,
											"end": 5487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5436,
											"end": 5487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5436,
											"end": 5487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5436,
											"end": 5487,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5493,
											"end": 5583,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5493,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5576,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5545,
											"end": 5577,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5545,
											"end": 5577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5583,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5583,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5715,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5589,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5708,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5659,
											"end": 5664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5644,
											"end": 5709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5644,
											"end": 5709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5634,
											"end": 5715,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5634,
											"end": 5715,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5634,
											"end": 5715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5634,
											"end": 5715,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5721,
											"end": 5798,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 5721,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5804,
											"end": 5960,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5804,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5948,
											"end": 5953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5902,
											"end": 5954,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5902,
											"end": 5954,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5902,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5889,
											"end": 5954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5889,
											"end": 5954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5960,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5966,
											"end": 6094,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5966,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6064,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 6082,
											"end": 6087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6064,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6064,
											"end": 6088,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6064,
											"end": 6088,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 6064,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6051,
											"end": 6088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6051,
											"end": 6088,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6041,
											"end": 6094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6041,
											"end": 6094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6041,
											"end": 6094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6041,
											"end": 6094,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6100,
											"end": 6262,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 6100,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 6201,
											"end": 6256,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6201,
											"end": 6256,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6201,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6262,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6268,
											"end": 6399,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 6268,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 6387,
											"end": 6392,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6369,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6369,
											"end": 6393,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6369,
											"end": 6393,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 6369,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6399,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6405,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 6405,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6501,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6545,
											"end": 6550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6501,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6501,
											"end": 6551,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6501,
											"end": 6551,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6501,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6557,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6563,
											"end": 6689,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6563,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6659,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6677,
											"end": 6682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6659,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6659,
											"end": 6683,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6659,
											"end": 6683,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6659,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6689,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6695,
											"end": 6875,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6695,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6820,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6740,
											"end": 6741,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6868,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6869,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6881,
											"end": 7057,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 6881,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7021,
											"end": 7049,
											"name": "PUSH",
											"source": 10,
											"value": "4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000"
										},
										{
											"begin": 7017,
											"end": 7018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6998,
											"end": 7050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7057,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7063,
											"end": 7185,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 7063,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 7154,
											"end": 7159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 7136,
											"end": 7160,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7136,
											"end": 7160,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 7136,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7134,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7126,
											"end": 7161,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7116,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7116,
											"end": 7118,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7116,
											"end": 7118,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7116,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7185,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7191,
											"end": 7313,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 7191,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 7264,
											"end": 7288,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7264,
											"end": 7288,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7264,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7257,
											"end": 7262,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7254,
											"end": 7289,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7244,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 7244,
											"end": 7246,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7305,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7244,
											"end": 7246,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 7244,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7234,
											"end": 7313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7234,
											"end": 7313,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeMiningPaused()": "ee72b8cc",
							"changePaused()": "9eb4eae5",
							"getHeroNFT()": "7cac00ee",
							"getItem()": "c412eaba",
							"getMiningPaused()": "28919df6",
							"getOwner()": "893d20e8",
							"getPaused()": "6805b84b",
							"getToken()": "21df0da7",
							"initialize(address,address,address,address,address,address,uint256,uint256)": "c740671f",
							"priceOfKlay()": "3a1a8080",
							"priceOfToken()": "1b9cbdfb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"changeMiningPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changePaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHeroNFT\",\"outputs\":[{\"internalType\":\"contract IHeroNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getItem\",\"outputs\":[{\"internalType\":\"contract IKIP37Full\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMiningPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IKIP7\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heroNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_levelDiagram\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_miningAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_klay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfKlay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/utils/HeroController.sol\":\"HeroController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/IHeroNFT.sol\":{\"keccak256\":\"0x28719918b6bcd5da2fc05c963dd0c407c3d256a41ba787fd7dd05cfb8e0eefbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922cc5d0a7c86837ac8697ee76295642fb8ca35453f7e2b20392dc4d3403e651\",\"dweb:/ipfs/QmPYwhoSmrcTJDR8HgQKH4nTfauncjRUMBDWJTAY99ygX5\"]},\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0xc0fbbbe5dc964f6f965fc1abde3b5cc387b9ec09527a147f261bfdead58a3b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9303cf1617cff14dbcd02dea01cdb5e5306e0c6196f31208f1ffce1bf4de3466\",\"dweb:/ipfs/QmWJrmzoPuR8oDUQ56pm2Z4DrvTVr7frpsLtGdWdAHsEi6\"]},\"Hero/utils/HeroController.sol\":{\"keccak256\":\"0xdc28a1e93cfb1085f618779d27b10dca0dd15a38f6b01dd4b348ebff86d5da42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fbe703022cb4e4e9601fde02d772bb59167ec1e158bb5bf9f1eb10984e83381\",\"dweb:/ipfs/QmY5LmSQ5Xvrnjdharg36in3gB94Wvyt5AR6SNPkhbbmfM\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]},\"interface/IKIP7/IKIP7.sol\":{\"keccak256\":\"0x5682f350cd2e8a78fc918639e421e7e81ca17576106687049595d84ca248346e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537a3ac6311e841c1fdb2b8b9270219bf6e7b2c91271f361c189dc90159a4bff\",\"dweb:/ipfs/QmRa5jJs3S3WjPPL4mWpXE2eGEk97gYR2S8yoDxtU8Tm68\"]},\"utils/SafeMath.sol\":{\"keccak256\":\"0x884e0eaf6a4a9779317975ad010c62f3a4bd66ed64334977bc7afba8d97fab58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61f2e9002f930fb312e3e6fe19753b1dedb5980b1baaef8914b794ba2a3106e\",\"dweb:/ipfs/QmYKxUyMMoak1sEdyQvq6hcEdsKtiAUunj1f51LBM6M8fm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "heroNFT",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IHeroNFT)30"
							},
							{
								"astId": 94,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IKIP7)711"
							},
							{
								"astId": 97,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "item",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IKIP37Full)580"
							},
							{
								"astId": 100,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "levelDiagram",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ILevelDiagram)79"
							},
							{
								"astId": 102,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "coreOwner",
								"offset": 0,
								"slot": "4",
								"type": "t_address_payable"
							},
							{
								"astId": 104,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "depositAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 106,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "miningAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 108,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "paused",
								"offset": 20,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 110,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "miningPaused",
								"offset": 21,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 112,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "priceOfKlay",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 114,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "priceOfToken",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IHeroNFT)30": {
								"encoding": "inplace",
								"label": "contract IHeroNFT",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP37Full)580": {
								"encoding": "inplace",
								"label": "contract IKIP37Full",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP7)711": {
								"encoding": "inplace",
								"label": "contract IKIP7",
								"numberOfBytes": "20"
							},
							"t_contract(ILevelDiagram)79": {
								"encoding": "inplace",
								"label": "contract ILevelDiagram",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP13.sol": {
				"IKIP13": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP13.sol\":\"IKIP13\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP17/IKIP17.sol": {
				"IKIP17": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP17/IKIP17.sol\":\"IKIP17\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37.sol": {
				"IKIP37": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37.sol\":\"IKIP37\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"IKIP37Full": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37Full.sol\":\"IKIP37Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"IKIP37MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37MetadataURI.sol\":\"IKIP37MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP7/IKIP7.sol": {
				"IKIP7": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"safeTransfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event."
							},
							"safeTransfer(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"safeTransfer(address,uint256)": "423f6cef",
							"safeTransfer(address,uint256,bytes)": "eb795549",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"safeTransfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event.\"},\"safeTransfer(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP7/IKIP7.sol\":\"IKIP7\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP7/IKIP7.sol\":{\"keccak256\":\"0x5682f350cd2e8a78fc918639e421e7e81ca17576106687049595d84ca248346e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537a3ac6311e841c1fdb2b8b9270219bf6e7b2c91271f361c189dc90159a4bff\",\"dweb:/ipfs/QmRa5jJs3S3WjPPL4mWpXE2eGEk97gYR2S8yoDxtU8Tm68\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/SafeMath.sol\":56:1294  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"utils/SafeMath.sol\":56:1294  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 ISZERO 0xC8 PUSH3 0xCEEC4D 0xAE 0xB0 0xFB ISZERO POP 0x2F SWAP8 0xB9 0x1F 0xD6 PUSH19 0xD2F6D61E11AB05EAD2217EE9910764736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:1238:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 ISZERO 0xC8 PUSH3 0xCEEC4D 0xAE 0xB0 0xFB ISZERO POP 0x2F SWAP8 0xB9 0x1F 0xD6 PUSH19 0xD2F6D61E11AB05EAD2217EE9910764736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:1238:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
									".code": [
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"utils/SafeMath.sol\":{\"keccak256\":\"0x884e0eaf6a4a9779317975ad010c62f3a4bd66ed64334977bc7afba8d97fab58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61f2e9002f930fb312e3e6fe19753b1dedb5980b1baaef8914b794ba2a3106e\",\"dweb:/ipfs/QmYKxUyMMoak1sEdyQvq6hcEdsKtiAUunj1f51LBM6M8fm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Hero/interface/IHeroNFT.sol": {
				"ast": {
					"absolutePath": "Hero/interface/IHeroNFT.sol",
					"exportedSymbols": {
						"IHeroNFT": [
							30
						],
						"IKIP13": [
							322
						],
						"IKIP17": [
							438
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"absolutePath": "interface/IKIP17/IKIP17.sol",
							"file": "../../interface/IKIP17/IKIP17.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 31,
							"sourceUnit": 439,
							"src": "56:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IKIP17",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 438,
										"src": "123:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "123:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 30,
							"linearizedBaseContracts": [
								30,
								438,
								322
							],
							"name": "IHeroNFT",
							"nameLocation": "111:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6a627842",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "145:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "158:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "150:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:13:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:0:0"
									},
									"scope": 30,
									"src": "136:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "187:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "200:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "192:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:18:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:0"
									},
									"scope": 30,
									"src": "178:41:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "75f890ab",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setContract",
									"nameLocation": "234:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_heroCore",
												"nameLocation": "254:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "246:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:19:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:0:0"
									},
									"scope": 30,
									"src": "225:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bcbb72c8",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHeroCore",
									"nameLocation": "289:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "326:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:9:0"
									},
									"scope": 30,
									"src": "280:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "295d3ee8",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenIndex",
									"nameLocation": "350:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "389:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:9:0"
									},
									"scope": 30,
									"src": "341:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "101:299:0",
							"usedErrors": []
						}
					],
					"src": "32:369:0"
				},
				"id": 0
			},
			"Hero/interface/ILevelDiagram.sol": {
				"ast": {
					"absolutePath": "Hero/interface/ILevelDiagram.sol",
					"exportedSymbols": {
						"ILevelDiagram": [
							79
						]
					},
					"id": 80,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "ILevelDiagram",
							"nameLocation": "74:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "aa93c0ee",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "104:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "139:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "125:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "125:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "154:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "146:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:36:1"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "222:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "221:9:1"
									},
									"scope": 79,
									"src": "95:136:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicLevelAmount",
									"nameLocation": "246:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "280:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "272:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:15:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "350:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:9:1"
									},
									"scope": 79,
									"src": "237:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicGradeAmount",
									"nameLocation": "374:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "414:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "400:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "400:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:21:1"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "484:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:9:1"
									},
									"scope": 79,
									"src": "365:128:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateItemIndex",
									"nameLocation": "508:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "535:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "527:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:16:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "606:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:1"
									},
									"scope": 79,
									"src": "499:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePower",
									"nameLocation": "630:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "659:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "645:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 63,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "645:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "674:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "666:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:36:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "744:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:9:1"
									},
									"scope": 79,
									"src": "621:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makeRandomNumberForItem",
									"nameLocation": "768:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "800:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "792:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:21:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "876:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:9:1"
									},
									"scope": 79,
									"src": "759:126:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 80,
							"src": "56:831:1",
							"usedErrors": []
						}
					],
					"src": "32:855:1"
				},
				"id": 1
			},
			"Hero/utils/HeroController.sol": {
				"ast": {
					"absolutePath": "Hero/utils/HeroController.sol",
					"exportedSymbols": {
						"HeroController": [
							310
						],
						"IHeroNFT": [
							30
						],
						"IKIP13": [
							322
						],
						"IKIP17": [
							438
						],
						"IKIP37": [
							556
						],
						"IKIP37Full": [
							580
						],
						"IKIP37MetadataURI": [
							593
						],
						"IKIP7": [
							711
						],
						"ILevelDiagram": [
							79
						],
						"SafeMath": [
							856
						]
					},
					"id": 311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 81,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"absolutePath": "utils/SafeMath.sol",
							"file": "../../utils/SafeMath.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 857,
							"src": "56:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Hero/interface/IHeroNFT.sol",
							"file": "../interface/IHeroNFT.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 31,
							"src": "92:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Hero/interface/ILevelDiagram.sol",
							"file": "../interface/ILevelDiagram.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 80,
							"src": "128:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IKIP7/IKIP7.sol",
							"file": "../../interface/IKIP7/IKIP7.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 712,
							"src": "170:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37Full.sol",
							"file": "../../interface/IKIP37/IKIP37Full.sol",
							"id": 86,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 581,
							"src": "212:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 310,
							"linearizedBaseContracts": [
								310
							],
							"name": "HeroController",
							"nameLocation": "270:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 88,
									"libraryName": {
										"id": 87,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 856,
										"src": "297:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "291:21:2"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "heroNFT",
									"nameLocation": "335:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "318:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IHeroNFT_$30",
										"typeString": "contract IHeroNFT"
									},
									"typeName": {
										"id": 90,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 89,
											"name": "IHeroNFT",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 30,
											"src": "318:8:2"
										},
										"referencedDeclaration": 30,
										"src": "318:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IHeroNFT_$30",
											"typeString": "contract IHeroNFT"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "362:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "348:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP7_$711",
										"typeString": "contract IKIP7"
									},
									"typeName": {
										"id": 93,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 92,
											"name": "IKIP7",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 711,
											"src": "348:5:2"
										},
										"referencedDeclaration": 711,
										"src": "348:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP7_$711",
											"typeString": "contract IKIP7"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "item",
									"nameLocation": "392:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "373:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP37Full_$580",
										"typeString": "contract IKIP37Full"
									},
									"typeName": {
										"id": 96,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 95,
											"name": "IKIP37Full",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 580,
											"src": "373:10:2"
										},
										"referencedDeclaration": 580,
										"src": "373:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP37Full_$580",
											"typeString": "contract IKIP37Full"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "levelDiagram",
									"nameLocation": "424:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "402:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILevelDiagram_$79",
										"typeString": "contract ILevelDiagram"
									},
									"typeName": {
										"id": 99,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 98,
											"name": "ILevelDiagram",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 79,
											"src": "402:13:2"
										},
										"referencedDeclaration": 79,
										"src": "402:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILevelDiagram_$79",
											"typeString": "contract ILevelDiagram"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "coreOwner",
									"nameLocation": "467:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "443:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 101,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "443:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 104,
									"mutability": "mutable",
									"name": "depositAddress",
									"nameLocation": "490:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "482:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 103,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "482:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 106,
									"mutability": "mutable",
									"name": "miningAddress",
									"nameLocation": "518:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "510:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 108,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "551:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "538:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 107,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "538:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 110,
									"mutability": "mutable",
									"name": "miningPaused",
									"nameLocation": "576:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "563:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 109,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "563:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3a1a8080",
									"id": 112,
									"mutability": "mutable",
									"name": "priceOfKlay",
									"nameLocation": "610:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "595:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "595:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b9cbdfb",
									"id": 114,
									"mutability": "mutable",
									"name": "priceOfToken",
									"nameLocation": "642:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "627:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 113,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "627:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 117,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "685:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "660:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 115,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "660:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "696:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "728:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "746:7:2",
															"subExpression": {
																"id": 120,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "747:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506175736564205374617465",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "755:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e92cd5d6dee16db56ebcf69b310fcfe1ea5001963f42c77d6d92785a76241b",
																"typeString": "literal_string \"Paused State\""
															},
															"value": "Paused State"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e92cd5d6dee16db56ebcf69b310fcfe1ea5001963f42c77d6d92785a76241b",
																"typeString": "literal_string \"Paused State\""
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "738:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "738:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "738:32:2"
											},
											{
												"id": 125,
												"nodeType": "PlaceholderStatement",
												"src": "780:1:2"
											}
										]
									},
									"id": 127,
									"name": "notPaused",
									"nameLocation": "716:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:2"
									},
									"src": "707:81:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "815:90:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 130,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "833:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "833:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 132,
																"name": "coreOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "847:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "833:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865726f436f7265204572726f72203a206f6e6c794f776e6572",
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "858:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																"typeString": "literal_string \"HeroCore Error : onlyOwner\""
															},
															"value": "HeroCore Error : onlyOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																"typeString": "literal_string \"HeroCore Error : onlyOwner\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "825:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "825:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "825:62:2"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "897:1:2"
											}
										]
									},
									"id": 139,
									"name": "onlyOwner",
									"nameLocation": "803:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:2"
									},
									"src": "794:111:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "925:100:2",
										"statements": [
											{
												"expression": {
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 142,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "935:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "944:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "935:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "935:13:2"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "miningPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "958:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "973:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "958:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "958:19:2"
											},
											{
												"expression": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "coreOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "987:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 153,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1007:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1007:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "999:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "999:8:2",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "999:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "987:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "987:31:2"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:2:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:0:2"
									},
									"scope": 310,
									"src": "911:114:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1345:340:2",
										"statements": [
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "priceOfKlay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "1355:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 183,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1379:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 181,
																"name": "_klay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "1369:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 755,
															"src": "1369:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1369:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1355:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1355:33:2"
											},
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "priceOfToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1398:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 190,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1429:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 188,
																"name": "_tokenPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "1413:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 755,
															"src": "1413:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1413:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1398:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "1398:40:2"
											},
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 194,
														"name": "heroNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "1449:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHeroNFT_$30",
															"typeString": "contract IHeroNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 196,
																"name": "_heroNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1468:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 195,
															"name": "IHeroNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1459:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IHeroNFT_$30_$",
																"typeString": "type(contract IHeroNFT)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1459:18:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHeroNFT_$30",
															"typeString": "contract IHeroNFT"
														}
													},
													"src": "1449:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "1449:28:2"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 200,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1487:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP7_$711",
															"typeString": "contract IKIP7"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 202,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "1501:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 201,
															"name": "IKIP7",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "1495:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP7_$711_$",
																"typeString": "type(contract IKIP7)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1495:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP7_$711",
															"typeString": "contract IKIP7"
														}
													},
													"src": "1487:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$711",
														"typeString": "contract IKIP7"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1487:21:2"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 206,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1518:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$580",
															"typeString": "contract IKIP37Full"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 208,
																"name": "_item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "1536:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 207,
															"name": "IKIP37Full",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "1525:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP37Full_$580_$",
																"typeString": "type(contract IKIP37Full)"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1525:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$580",
															"typeString": "contract IKIP37Full"
														}
													},
													"src": "1518:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$580",
														"typeString": "contract IKIP37Full"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1518:24:2"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 212,
														"name": "levelDiagram",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1552:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILevelDiagram_$79",
															"typeString": "contract ILevelDiagram"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 214,
																"name": "_levelDiagram",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1581:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 213,
															"name": "ILevelDiagram",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1567:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILevelDiagram_$79_$",
																"typeString": "type(contract ILevelDiagram)"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1567:28:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILevelDiagram_$79",
															"typeString": "contract ILevelDiagram"
														}
													},
													"src": "1552:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILevelDiagram_$79",
														"typeString": "contract ILevelDiagram"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "1552:43:2"
											},
											{
												"expression": {
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 218,
														"name": "depositAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "1606:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 219,
														"name": "_depositAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1623:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1606:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "1606:32:2"
											},
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "miningAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1648:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "_miningAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1664:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1648:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1648:30:2"
											}
										]
									},
									"functionSelector": "c740671f",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 139,
												"src": "1335:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1335:9:2"
										}
									],
									"name": "initialize",
									"nameLocation": "1088:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "_heroNFT",
												"nameLocation": "1116:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1108:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1142:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1134:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "_item",
												"nameLocation": "1166:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1158:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_levelDiagram",
												"nameLocation": "1189:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1181:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "_depositAddress",
												"nameLocation": "1220:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1212:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_miningAddress",
												"nameLocation": "1253:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1245:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "_klay",
												"nameLocation": "1285:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1277:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "1308:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1300:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:227:2"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:0:2"
									},
									"scope": 310,
									"src": "1079:606:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1734:33:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1744:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1753:7:2",
														"subExpression": {
															"id": 233,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1754:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1744:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1744:16:2"
											}
										]
									},
									"functionSelector": "9eb4eae5",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 139,
												"src": "1724:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1724:9:2"
										}
									],
									"name": "changePaused",
									"nameLocation": "1700:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1712:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:2"
									},
									"scope": 310,
									"src": "1691:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "1822:45:2",
										"statements": [
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 243,
														"name": "miningPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1832:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1847:13:2",
														"subExpression": {
															"id": 244,
															"name": "miningPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1848:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1832:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1832:28:2"
											}
										]
									},
									"functionSelector": "ee72b8cc",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 241,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 240,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 139,
												"src": "1812:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1812:9:2"
										}
									],
									"name": "changeMiningPaused",
									"nameLocation": "1782:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1800:2:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1822:0:2"
									},
									"scope": 310,
									"src": "1773:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "1963:33:2",
										"statements": [
											{
												"expression": {
													"id": 254,
													"name": "coreOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 102,
													"src": "1980:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 253,
												"id": 255,
												"nodeType": "Return",
												"src": "1973:16:2"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1914:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:2:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1946:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:17:2"
									},
									"scope": 310,
									"src": "1905:91:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2050:30:2",
										"statements": [
											{
												"expression": {
													"id": 262,
													"name": "paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 108,
													"src": "2067:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 261,
												"id": 263,
												"nodeType": "Return",
												"src": "2060:13:2"
											}
										]
									},
									"functionSelector": "6805b84b",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPaused",
									"nameLocation": "2011:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2020:2:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2044:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2044:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2043:6:2"
									},
									"scope": 310,
									"src": "2002:78:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2140:36:2",
										"statements": [
											{
												"expression": {
													"id": 270,
													"name": "miningPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 110,
													"src": "2157:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 269,
												"id": 271,
												"nodeType": "Return",
												"src": "2150:19:2"
											}
										]
									},
									"functionSelector": "28919df6",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMiningPaused",
									"nameLocation": "2095:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2110:2:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2134:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2134:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:6:2"
									},
									"scope": 310,
									"src": "2086:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2234:28:2",
										"statements": [
											{
												"expression": {
													"id": 279,
													"name": "item",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "2251:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$580",
														"typeString": "contract IKIP37Full"
													}
												},
												"functionReturnParameters": 278,
												"id": 280,
												"nodeType": "Return",
												"src": "2244:11:2"
											}
										]
									},
									"functionSelector": "c412eaba",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getItem",
									"nameLocation": "2191:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2198:2:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKIP37Full_$580",
													"typeString": "contract IKIP37Full"
												},
												"typeName": {
													"id": 276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 275,
														"name": "IKIP37Full",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 580,
														"src": "2222:10:2"
													},
													"referencedDeclaration": 580,
													"src": "2222:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$580",
														"typeString": "contract IKIP37Full"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:12:2"
									},
									"scope": 310,
									"src": "2182:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2316:29:2",
										"statements": [
											{
												"expression": {
													"id": 288,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "2333:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$711",
														"typeString": "contract IKIP7"
													}
												},
												"functionReturnParameters": 287,
												"id": 289,
												"nodeType": "Return",
												"src": "2326:12:2"
											}
										]
									},
									"functionSelector": "21df0da7",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nameLocation": "2277:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2285:2:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2309:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKIP7_$711",
													"typeString": "contract IKIP7"
												},
												"typeName": {
													"id": 285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 284,
														"name": "IKIP7",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 711,
														"src": "2309:5:2"
													},
													"referencedDeclaration": 711,
													"src": "2309:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$711",
														"typeString": "contract IKIP7"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2308:7:2"
									},
									"scope": 310,
									"src": "2268:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "2404:31:2",
										"statements": [
											{
												"expression": {
													"id": 297,
													"name": "heroNFT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"functionReturnParameters": 296,
												"id": 298,
												"nodeType": "Return",
												"src": "2414:14:2"
											}
										]
									},
									"functionSelector": "7cac00ee",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHeroNFT",
									"nameLocation": "2360:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2370:2:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2394:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IHeroNFT_$30",
													"typeString": "contract IHeroNFT"
												},
												"typeName": {
													"id": 294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 293,
														"name": "IHeroNFT",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "2394:8:2"
													},
													"referencedDeclaration": 30,
													"src": "2394:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:10:2"
									},
									"scope": 310,
									"src": "2351:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "2497:39:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 305,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2514:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2514:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 304,
												"id": 307,
												"nodeType": "Return",
												"src": "2507:22:2"
											}
										]
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_currentTime",
									"nameLocation": "2450:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2462:2:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2488:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2487:9:2"
									},
									"scope": 310,
									"src": "2441:95:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 311,
							"src": "261:2277:2",
							"usedErrors": []
						}
					],
					"src": "32:2507:2"
				},
				"id": 2
			},
			"interface/IKIP13.sol": {
				"ast": {
					"absolutePath": "interface/IKIP13.sol",
					"exportedSymbols": {
						"IKIP13": [
							322
						]
					},
					"id": 323,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 312,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "258:22:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 313,
								"nodeType": "StructuredDocumentation",
								"src": "282:142:3",
								"text": " @dev Interface of the KIP13 standard as defined in the KIP.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard"
							},
							"fullyImplemented": false,
							"id": 322,
							"linearizedBaseContracts": [
								322
							],
							"name": "IKIP13",
							"nameLocation": "435:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "448:387:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n to learn more about how these ids are created.\n Requirements:\n - implementation of this function call must use less than 30 000 gas"
									},
									"functionSelector": "01ffc9a7",
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "849:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "874:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "867:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 315,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "867:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:20:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "910:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "910:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:6:3"
									},
									"scope": 322,
									"src": "840:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 323,
							"src": "425:493:3",
							"usedErrors": []
						}
					],
					"src": "258:661:3"
				},
				"id": 3
			},
			"interface/IKIP17/IKIP17.sol": {
				"ast": {
					"absolutePath": "interface/IKIP17/IKIP17.sol",
					"exportedSymbols": {
						"IKIP13": [
							322
						],
						"IKIP17": [
							438
						]
					},
					"id": 439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 324,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "243:22:4"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 439,
							"sourceUnit": 323,
							"src": "267:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 327,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 322,
										"src": "380:6:4"
									},
									"id": 328,
									"nodeType": "InheritanceSpecifier",
									"src": "380:6:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 326,
								"nodeType": "StructuredDocumentation",
								"src": "292:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 438,
							"linearizedBaseContracts": [
								438,
								322
							],
							"name": "IKIP17",
							"nameLocation": "370:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "393:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 337,
									"name": "Transfer",
									"nameLocation": "492:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "526:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "510:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "540:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "584:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "568:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:97:4"
									},
									"src": "486:112:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "604:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 346,
									"name": "Approval",
									"nameLocation": "709:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "743:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "727:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "774:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "758:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "808:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "792:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:104:4"
									},
									"src": "703:119:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "828:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 355,
									"name": "ApprovalForAll",
									"nameLocation": "956:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "996:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "980:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1027:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1011:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1050:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1045:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:94:4"
									},
									"src": "950:115:4"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1071:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1161:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:15:4"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1217:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1209:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:17:4"
									},
									"scope": 438,
									"src": "1152:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1232:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1377:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1393:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1385:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:17:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1433:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1425:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:15:4"
									},
									"scope": 438,
									"src": "1368:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1446:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2016:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2050:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2042:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2072:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2064:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2124:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2109:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2109:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:102:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2143:0:4"
									},
									"scope": 438,
									"src": "2007:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2150:690:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2854:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2888:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2880:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2910:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2902:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2930:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2922:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:73:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2952:0:4"
									},
									"scope": 438,
									"src": "2845:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "2959:504:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3477:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3507:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3499:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3529:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3521:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3549:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3541:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:73:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3571:0:4"
									},
									"scope": 438,
									"src": "3468:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3578:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4044:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4060:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "4052:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4072:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "4064:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4064:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:29:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:0:4"
									},
									"scope": 438,
									"src": "4035:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "4096:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4419:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4445:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4437:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4460:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4455:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4455:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:34:4"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4479:0:4"
									},
									"scope": 438,
									"src": "4410:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "4486:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4639:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4659:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4651:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4651:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:17:4"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4723:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4715:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4714:18:4"
									},
									"scope": 438,
									"src": "4630:103:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "4739:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4891:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4916:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "4908:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4931:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "4923:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4907:33:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "4988:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4988:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4987:6:4"
									},
									"scope": 438,
									"src": "4882:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 439,
							"src": "360:4636:4",
							"usedErrors": []
						}
					],
					"src": "243:4754:4"
				},
				"id": 4
			},
			"interface/IKIP37/IKIP37.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37.sol",
					"exportedSymbols": {
						"IKIP13": [
							322
						],
						"IKIP37": [
							556
						]
					},
					"id": 557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 440,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:5"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 557,
							"sourceUnit": 323,
							"src": "56:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 442,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 322,
										"src": "101:6:5"
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "101:6:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 556,
							"linearizedBaseContracts": [
								556,
								322
							],
							"name": "IKIP37",
							"nameLocation": "91:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 455,
									"name": "TransferSingle",
									"nameLocation": "120:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "160:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "144:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "195:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "179:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "226:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "210:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "247:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "239:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "268:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "260:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:146:5"
									},
									"src": "114:167:5"
								},
								{
									"anonymous": false,
									"id": 469,
									"name": "TransferBatch",
									"nameLocation": "292:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "331:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "315:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "366:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "350:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "397:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "381:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "410:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 462,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "410:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 463,
													"nodeType": "ArrayTypeName",
													"src": "410:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "444:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "434:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 465,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "434:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 466,
													"nodeType": "ArrayTypeName",
													"src": "434:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:152:5"
									},
									"src": "286:172:5"
								},
								{
									"anonymous": false,
									"id": 477,
									"name": "ApprovalForAll",
									"nameLocation": "469:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "509:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "493:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "541:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "525:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "565:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "560:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:97:5"
									},
									"src": "463:118:5"
								},
								{
									"anonymous": false,
									"id": 483,
									"name": "URI",
									"nameLocation": "592:3:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "603:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "596:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "627:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "611:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:36:5"
									},
									"src": "586:46:5"
								},
								{
									"functionSelector": "f242432a",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "647:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "704:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "696:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "725:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "717:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "746:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "738:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "777:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "762:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:125:5"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:0:5"
									},
									"scope": 556,
									"src": "638:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2eb2c2d6",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "813:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "852:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "844:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "875:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "867:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "907:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "888:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 501,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "888:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 502,
													"nodeType": "ArrayTypeName",
													"src": "888:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "921:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 504,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "921:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 505,
													"nodeType": "ArrayTypeName",
													"src": "921:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "972:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "957:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:149:5"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:5"
									},
									"scope": 556,
									"src": "804:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00fdd58e",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1026:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1018:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1042:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1034:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:29:5"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1094:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:5"
									},
									"scope": 556,
									"src": "999:104:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e1273f4",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1118:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "_owners",
												"nameLocation": "1152:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1133:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 521,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1133:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 522,
													"nodeType": "ArrayTypeName",
													"src": "1133:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "1180:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1161:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 524,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1161:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 525,
													"nodeType": "ArrayTypeName",
													"src": "1161:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:53:5"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1233:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 528,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1233:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 529,
													"nodeType": "ArrayTypeName",
													"src": "1233:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:18:5"
									},
									"scope": 556,
									"src": "1109:142:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1266:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1292:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1284:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1308:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1303:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1303:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:35:5"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:5"
									},
									"scope": 556,
									"src": "1257:71:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1343:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1368:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1360:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1384:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1376:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:35:5"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1442:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:6:5"
									},
									"scope": 556,
									"src": "1334:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bd85b039",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1463:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1483:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1475:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:13:5"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 556,
									"src": "1454:66:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 557,
							"src": "81:1441:5",
							"usedErrors": []
						}
					],
					"src": "32:1491:5"
				},
				"id": 5
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37Full.sol",
					"exportedSymbols": {
						"IKIP13": [
							322
						],
						"IKIP37": [
							556
						],
						"IKIP37Full": [
							580
						],
						"IKIP37MetadataURI": [
							593
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 558,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:6"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
							"file": "./IKIP37MetadataURI.sol",
							"id": 559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 581,
							"sourceUnit": 594,
							"src": "56:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 560,
										"name": "IKIP37MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 593,
										"src": "115:17:6"
									},
									"id": 561,
									"nodeType": "InheritanceSpecifier",
									"src": "115:17:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 580,
							"linearizedBaseContracts": [
								580,
								593,
								556,
								322
							],
							"name": "IKIP37Full",
							"nameLocation": "101:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "156e29f6",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "148:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "170:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "162:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "193:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "185:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "219:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "211:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:80:6"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:6"
									},
									"scope": 580,
									"src": "139:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f5298aca",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "257:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "279:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "271:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "302:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "294:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "328:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "320:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:80:6"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:6"
									},
									"scope": 580,
									"src": "248:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 581,
							"src": "91:262:6",
							"usedErrors": []
						}
					],
					"src": "32:322:6"
				},
				"id": 6
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
					"exportedSymbols": {
						"IKIP13": [
							322
						],
						"IKIP37": [
							556
						],
						"IKIP37MetadataURI": [
							593
						]
					},
					"id": 594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:7"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37.sol",
							"file": "./IKIP37.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 594,
							"sourceUnit": 557,
							"src": "56:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 584,
										"name": "IKIP37",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 556,
										"src": "111:6:7"
									},
									"id": 585,
									"nodeType": "InheritanceSpecifier",
									"src": "111:6:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 593,
							"linearizedBaseContracts": [
								593,
								556,
								322
							],
							"name": "IKIP37MetadataURI",
							"nameLocation": "90:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0e89341c",
									"id": 592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "133:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "145:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "137:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:12:7"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "172:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "172:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:15:7"
									},
									"scope": 593,
									"src": "124:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 594,
							"src": "80:109:7",
							"usedErrors": []
						}
					],
					"src": "32:158:7"
				},
				"id": 7
			},
			"interface/IKIP7/IKIP7.sol": {
				"ast": {
					"absolutePath": "interface/IKIP7/IKIP7.sol",
					"exportedSymbols": {
						"IKIP7": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 595,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 596,
								"nodeType": "StructuredDocumentation",
								"src": "56:125:8",
								"text": " @dev Interface of the KIP7 standard as defined in the KIP.\n See http://kips.klaytn.com/KIPs/kip-7-fungible_token"
							},
							"fullyImplemented": false,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "IKIP7",
							"nameLocation": "192:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "204:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 605,
									"name": "Transfer",
									"nameLocation": "373:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "398:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "382:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "420:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "404:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "432:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "424:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:57:8"
									},
									"src": "367:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "445:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 614,
									"name": "Approval",
									"nameLocation": "604:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "638:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "622:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "669:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "653:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "694:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "686:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:93:8"
									},
									"src": "598:108:8"
								},
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "712:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "792:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:2:8"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "829:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:9:8"
									},
									"scope": 711,
									"src": "783:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "844:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "930:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "948:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "940:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:17:8"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "980:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:9:8"
									},
									"scope": 711,
									"src": "921:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "995:202:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1211:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1228:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1220:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1240:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1232:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:28:8"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1266:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:8"
									},
									"scope": 711,
									"src": "1202:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "1278:285:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1577:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1595:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1587:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1610:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1602:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:32:8"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:9:8"
									},
									"scope": 711,
									"src": "1568:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "1681:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2337:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2353:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2345:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2370:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2362:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:33:8"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2396:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2396:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:6:8"
									},
									"scope": 711,
									"src": "2328:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "2408:287:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2709:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2739:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "2731:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2761:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "2753:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2781:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "2773:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2721:72:8"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "2812:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2812:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2811:6:8"
									},
									"scope": 711,
									"src": "2700:118:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "2824:201:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "eb795549",
									"id": 680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3039:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3069:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3061:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3096:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3088:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3125:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3112:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3112:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:84:8"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:8"
									},
									"scope": 711,
									"src": "3030:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "3151:128:8",
										"text": " @dev  Moves `amount` tokens from the caller's account to `recipient`.\n Emits a {Transfer} event."
									},
									"functionSelector": "423f6cef",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3293:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3314:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3306:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3306:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3333:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3325:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3325:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3305:35:8"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:8"
									},
									"scope": 711,
									"src": "3284:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3356:221:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3591:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3625:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "3617:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3649:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "3641:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3676:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "3668:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3705:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "3692:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3607:108:8"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3724:0:8"
									},
									"scope": 711,
									"src": "3582:143:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "3731:147:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3892:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3926:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "3918:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3950:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "3942:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3977:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "3969:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:81:8"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3998:0:8"
									},
									"scope": 711,
									"src": "3883:116:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 712,
							"src": "182:3819:8",
							"usedErrors": []
						}
					],
					"src": "32:3970:8"
				},
				"id": 8
			},
			"utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							856
						]
					},
					"id": 857,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "SafeMath",
							"nameLocation": "64:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "146:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 722,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "163:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 723,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "167:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "163:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 721,
												"id": 725,
												"nodeType": "Return",
												"src": "156:12:9"
											}
										]
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "88:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "100:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "92:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "92:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "111:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "103:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "91:22:9"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "137:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:9"
									},
									"scope": 856,
									"src": "79:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "248:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "265:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 737,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "269:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "265:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 735,
												"id": 739,
												"nodeType": "Return",
												"src": "258:12:9"
											}
										]
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "190:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "202:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "194:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "213:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "205:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:22:9"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "239:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:9:9"
									},
									"scope": 856,
									"src": "181:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "350:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 750,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "367:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 751,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "371:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "367:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 749,
												"id": 753,
												"nodeType": "Return",
												"src": "360:12:9"
											}
										]
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "292:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "304:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "296:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "315:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "307:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:22:9"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "341:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:9:9"
									},
									"scope": 856,
									"src": "283:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "452:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "469:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 765,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "473:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "469:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 767,
												"nodeType": "Return",
												"src": "462:12:9"
											}
										]
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "394:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "406:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "398:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "417:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "409:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:22:9"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "443:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:9:9"
									},
									"scope": 856,
									"src": "385:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "554:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "571:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 779,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "575:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "571:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 777,
												"id": 781,
												"nodeType": "Return",
												"src": "564:12:9"
											}
										]
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "496:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "508:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "500:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "519:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "511:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:22:9"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "545:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:9:9"
									},
									"scope": 856,
									"src": "487:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "714:106:9",
										"statements": [
											{
												"id": 805,
												"nodeType": "UncheckedBlock",
												"src": "724:90:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 795,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "756:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 796,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "761:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "756:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 798,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "764:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 794,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "748:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "748:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 800,
														"nodeType": "ExpressionStatement",
														"src": "748:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "798:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 802,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "802:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "798:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 793,
														"id": 804,
														"nodeType": "Return",
														"src": "791:12:9"
													}
												]
											}
										]
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "598:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "619:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "611:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "638:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "630:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "663:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "649:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 788,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "649:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:80:9"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "705:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:9:9"
									},
									"scope": 856,
									"src": "589:231:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "951:105:9",
										"statements": [
											{
												"id": 829,
												"nodeType": "UncheckedBlock",
												"src": "961:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 819,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "993:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "997:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "993:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 822,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1000:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 818,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "985:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "985:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 824,
														"nodeType": "ExpressionStatement",
														"src": "985:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 825,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "1034:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 826,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "1038:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1034:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 817,
														"id": 828,
														"nodeType": "Return",
														"src": "1027:12:9"
													}
												]
											}
										]
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "835:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "856:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "848:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "875:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "867:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "900:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "886:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "886:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:80:9"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "942:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:9:9"
									},
									"scope": 856,
									"src": "826:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "1187:105:9",
										"statements": [
											{
												"id": 853,
												"nodeType": "UncheckedBlock",
												"src": "1197:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 843,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 835,
																		"src": "1229:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1233:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1229:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 846,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "1236:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 842,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1221:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1221:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 848,
														"nodeType": "ExpressionStatement",
														"src": "1221:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 849,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "1270:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 850,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "1274:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1270:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 841,
														"id": 852,
														"nodeType": "Return",
														"src": "1263:12:9"
													}
												]
											}
										]
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1071:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1092:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1084:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1111:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1103:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1136:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1122:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1122:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:80:9"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1178:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:9:9"
									},
									"scope": 856,
									"src": "1062:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 857,
							"src": "56:1238:9",
							"usedErrors": []
						}
					],
					"src": "32:1263:9"
				},
				"id": 9
			}
		}
	}
}