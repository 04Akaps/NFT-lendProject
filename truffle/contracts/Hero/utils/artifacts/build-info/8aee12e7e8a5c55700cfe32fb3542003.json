{
	"id": "8aee12e7e8a5c55700cfe32fb3542003",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Hero/utils/HeroController.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../utils/SafeMath.sol\";\n\nimport \"../interface/IHeroNFT.sol\";\nimport \"../interface/ILevelDiagram.sol\";\n\nimport \"../../interface/IKIP7/IKIP7.sol\";\nimport \"../../interface/IKIP37/IKIP37Full.sol\";\n\ncontract HeroController {\n    using SafeMath for *;\n\n    IHeroNFT private heroNFT;\n    IKIP7 private token;\n    IKIP37Full private item;\n\n    address payable private coreOwner;\n    address depositAddress;\n    address miningAddress;\n\n    bool private paused;\n    bool private miningPaused;\n\n    uint256 public priceOfKlay;\n    uint256 public priceOfToken;\n    uint256 private constant DECIMALS = 1e18;\n\n    modifier notPaused() {\n        require(!paused, \"Paused State\");\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\");\n        _;\n    }\n\n    constructor() {\n        paused = true;\n        miningPaused = true;\n        coreOwner = payable(msg.sender);\n    }\n\n    function initialize(\n        address _heroNFT,\n        address _token,\n        address _item,\n        address _depositAddress,\n        address _miningAddress,\n        uint256 _klay,\n        uint256 _tokenPrice\n    ) external onlyOwner {\n        priceOfKlay = _klay.mul(DECIMALS);\n        priceOfToken = _tokenPrice.mul(DECIMALS);\n\n        heroNFT = IHeroNFT(_heroNFT);\n        token = IKIP7(_token);\n        item = IKIP37Full(_item);\n\n        depositAddress = _depositAddress;\n        miningAddress = _miningAddress;\n    }\n\n    function changePaused() external onlyOwner {\n        paused = !paused;\n    }\n\n    function changeMiningPaused() external onlyOwner {\n        miningPaused = !miningPaused;\n    }\n\n    // **** view Function ****\n\n    function getOwner() public view returns (address payable) {\n        return coreOwner;\n    }\n\n    function getPaused() public view returns (bool) {\n        return paused;\n    }\n\n    function getMiningPaused() public view returns (bool) {\n        return miningPaused;\n    }\n\n    function getItem() public view returns (IKIP37Full) {\n        return item;\n    }\n\n    function getToken() public view returns (IKIP7) {\n        return token;\n    }\n\n    function getHeroNFT() public view returns (IHeroNFT) {\n        return heroNFT;\n    }\n\n    function _currentTime() internal view returns (uint256) {\n        return block.timestamp;\n    }\n}\n"
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37MetadataURI.sol\";\n\ninterface IKIP37Full is IKIP37MetadataURI {\n    function mint(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n\n    function burn(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n}\n"
			},
			"interface/IKIP7/IKIP7.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP7 standard as defined in the KIP.\n * See http://kips.klaytn.com/KIPs/kip-7-fungible_token\n */\ninterface IKIP7 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev  Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(address recipient, uint256 amount) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external;\n}\n"
			},
			"Hero/interface/ILevelDiagram.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nabstract contract ILevelDiagram {\n     function calculateTokenAmount(string memory grade, uint256 level)\n        public\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateBasicLevelAmount(uint256 level)\n        internal\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateBasicGradeAmount(string memory grade)\n        internal\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateItemIndex(uint256 _power)\n        internal\n        view\n        virtual\n        returns (uint256);\n\n    function calculatePower(string memory grade, uint256 level)\n        internal\n        view\n        virtual\n        returns (uint256);\n\n    function makeRandomNumberForItem(uint256 _tokenIndex)\n        internal\n        view\n        virtual\n        returns (uint256);\n}"
			},
			"Hero/interface/IHeroNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../interface/IKIP17/IKIP17.sol\";\n\ninterface IHeroNFT is IKIP17 {\n    function mint(address _to) external;\n\n    function burn(uint256 _tokenId) external;\n\n    function setContract(address _heroCore) external;\n\n    function getHeroCore() external view returns (address);\n\n    function getTokenIndex() external view returns (uint256);\n}\n"
			},
			"utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37.sol\";\n\ninterface IKIP37MetadataURI is IKIP37 {\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"interface/IKIP17/IKIP17.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/IKIP17.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/IERC721.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IKIP17 is IKIP13 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed approved,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId)\n        external\n        view\n        returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator)\n        external\n        view\n        returns (bool);\n}\n"
			},
			"interface/IKIP37/IKIP37.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\ninterface IKIP37 is IKIP13 {\n    event TransferSingle(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256 _id,\n        uint256 _value\n    );\n    event TransferBatch(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256[] _ids,\n        uint256[] _values\n    );\n    event ApprovalForAll(\n        address indexed _owner,\n        address indexed _operator,\n        bool _approved\n    );\n    event URI(string _value, uint256 indexed _id);\n\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _id,\n        uint256 _value,\n        bytes calldata _data\n    ) external;\n\n    function safeBatchTransferFrom(\n        address _from,\n        address _to,\n        uint256[] calldata _ids,\n        uint256[] calldata _values,\n        bytes calldata _data\n    ) external;\n\n    function balanceOf(address _owner, uint256 _id)\n        external\n        view\n        returns (uint256);\n\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    function isApprovedForAll(address _owner, address _operator)\n        external\n        view\n        returns (bool);\n\n    function totalSupply(uint256 _id) external view returns (uint256);\n}\n"
			},
			"interface/IKIP13.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP13 standard as defined in the KIP.\n *\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\n */\ninterface IKIP13 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`.\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n     * to learn more about how these ids are created.\n     *\n     * Requirements:\n     *\n     * - implementation of this function call must use less than 30 000 gas\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Hero/interface/IHeroNFT.sol": {
				"IHeroNFT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHeroCore",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_heroCore",
									"type": "address"
								}
							],
							"name": "setContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"getHeroCore()": "bcbb72c8",
							"getTokenIndex()": "295d3ee8",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address)": "6a627842",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setContract(address)": "75f890ab",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHeroCore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heroCore\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/interface/IHeroNFT.sol\":\"IHeroNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/IHeroNFT.sol\":{\"keccak256\":\"0x28719918b6bcd5da2fc05c963dd0c407c3d256a41ba787fd7dd05cfb8e0eefbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922cc5d0a7c86837ac8697ee76295642fb8ca35453f7e2b20392dc4d3403e651\",\"dweb:/ipfs/QmPYwhoSmrcTJDR8HgQKH4nTfauncjRUMBDWJTAY99ygX5\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/interface/ILevelDiagram.sol": {
				"ILevelDiagram": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateTokenAmount(string,uint256)": "aa93c0ee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/interface/ILevelDiagram.sol\":\"ILevelDiagram\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0xc0fbbbe5dc964f6f965fc1abde3b5cc387b9ec09527a147f261bfdead58a3b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9303cf1617cff14dbcd02dea01cdb5e5306e0c6196f31208f1ffce1bf4de3466\",\"dweb:/ipfs/QmWJrmzoPuR8oDUQ56pm2Z4DrvTVr7frpsLtGdWdAHsEi6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/utils/HeroController.sol": {
				"HeroController": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "changeMiningPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "changePaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHeroNFT",
							"outputs": [
								{
									"internalType": "contract IHeroNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getItem",
							"outputs": [
								{
									"internalType": "contract IKIP37Full",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMiningPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getToken",
							"outputs": [
								{
									"internalType": "contract IKIP7",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_heroNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_item",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_depositAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_miningAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_klay",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfKlay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Hero/utils/HeroController.sol\":261:2366  contract HeroController {... */\n  mstore(0x40, 0x80)\n    /* \"Hero/utils/HeroController.sol\":871:985  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Hero/utils/HeroController.sol\":904:908  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":895:901  paused */\n  0x05\n  0x14\n    /* \"Hero/utils/HeroController.sol\":895:908  paused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":933:937  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":918:930  miningPaused */\n  0x05\n  0x15\n    /* \"Hero/utils/HeroController.sol\":918:937  miningPaused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":967:977  msg.sender */\n  caller\n    /* \"Hero/utils/HeroController.sol\":947:956  coreOwner */\n  0x03\n  0x00\n    /* \"Hero/utils/HeroController.sol\":947:978  coreOwner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":261:2366  contract HeroController {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Hero/utils/HeroController.sol\":261:2366  contract HeroController {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7cac00ee\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x7cac00ee\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9eb4eae5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb33f9527\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc412eaba\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xee72b8cc\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x1b9cbdfb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21df0da7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x28919df6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a1a8080\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6805b84b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Hero/utils/HeroController.sol\":587:614  uint256 public priceOfToken */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2096:2173  function getToken() public view returns (IKIP7) {... */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1914:2004  function getMiningPaused() public view returns (bool) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":555:581  uint256 public priceOfKlay */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1830:1908  function getPaused() public view returns (bool) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2179:2263  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1733:1824  function getOwner() public view returns (address payable) {... */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1519:1595  function changePaused() external onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"Hero/utils/HeroController.sol\":991:1513  function initialize(... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Hero/utils/HeroController.sol\":2010:2090  function getItem() public view returns (IKIP37Full) {... */\n    tag_12:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1601:1695  function changeMiningPaused() external onlyOwner {... */\n    tag_13:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Hero/utils/HeroController.sol\":587:614  uint256 public priceOfToken */\n    tag_16:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2096:2173  function getToken() public view returns (IKIP7) {... */\n    tag_20:\n        /* \"Hero/utils/HeroController.sol\":2137:2142  IKIP7 */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2161:2166  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2154:2166  return token */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2096:2173  function getToken() public view returns (IKIP7) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1914:2004  function getMiningPaused() public view returns (bool) {... */\n    tag_24:\n        /* \"Hero/utils/HeroController.sol\":1962:1966  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1985:1997  miningPaused */\n      0x05\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1978:1997  return miningPaused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1914:2004  function getMiningPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":555:581  uint256 public priceOfKlay */\n    tag_28:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1830:1908  function getPaused() public view returns (bool) {... */\n    tag_31:\n        /* \"Hero/utils/HeroController.sol\":1872:1876  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1895:1901  paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1888:1901  return paused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1830:1908  function getPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2179:2263  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_34:\n        /* \"Hero/utils/HeroController.sol\":2222:2230  IHeroNFT */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2249:2256  heroNFT */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2242:2256  return heroNFT */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2179:2263  function getHeroNFT() public view returns (IHeroNFT) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1733:1824  function getOwner() public view returns (address payable) {... */\n    tag_38:\n        /* \"Hero/utils/HeroController.sol\":1774:1789  address payable */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1808:1817  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":1801:1817  return coreOwner */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1733:1824  function getOwner() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1519:1595  function changePaused() external onlyOwner {... */\n    tag_42:\n        /* \"Hero/utils/HeroController.sol\":807:816  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":793:816  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":793:803  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":793:816  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":785:847  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"Hero/utils/HeroController.sol\":1582:1588  paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1581:1588  !paused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1572:1578  paused */\n      0x05\n      0x14\n        /* \"Hero/utils/HeroController.sol\":1572:1588  paused = !paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1519:1595  function changePaused() external onlyOwner {... */\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":991:1513  function initialize(... */\n    tag_46:\n        /* \"Hero/utils/HeroController.sol\":807:816  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":793:816  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":793:803  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":793:816  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":785:847  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_61\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"Hero/utils/HeroController.sol\":1250:1269  _klay.mul(DECIMALS) */\n      tag_67\n        /* \"Hero/utils/HeroController.sol\":656:660  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1250:1255  _klay */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1250:1259  _klay.mul */\n      tag_68\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1250:1269  _klay.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"Hero/utils/HeroController.sol\":1236:1247  priceOfKlay */\n      0x06\n        /* \"Hero/utils/HeroController.sol\":1236:1269  priceOfKlay = _klay.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1294:1319  _tokenPrice.mul(DECIMALS) */\n      tag_69\n        /* \"Hero/utils/HeroController.sol\":656:660  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1294:1305  _tokenPrice */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1294:1309  _tokenPrice.mul */\n      tag_68\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1294:1319  _tokenPrice.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"Hero/utils/HeroController.sol\":1279:1291  priceOfToken */\n      0x07\n        /* \"Hero/utils/HeroController.sol\":1279:1319  priceOfToken = _tokenPrice.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1349:1357  _heroNFT */\n      dup7\n        /* \"Hero/utils/HeroController.sol\":1330:1337  heroNFT */\n      0x00\n      dup1\n        /* \"Hero/utils/HeroController.sol\":1330:1358  heroNFT = IHeroNFT(_heroNFT) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1382:1388  _token */\n      dup6\n        /* \"Hero/utils/HeroController.sol\":1368:1373  token */\n      0x01\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1368:1389  token = IKIP7(_token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1417:1422  _item */\n      dup5\n        /* \"Hero/utils/HeroController.sol\":1399:1403  item */\n      0x02\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1399:1423  item = IKIP37Full(_item) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1451:1466  _depositAddress */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1434:1448  depositAddress */\n      0x04\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1434:1466  depositAddress = _depositAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1492:1506  _miningAddress */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1476:1489  miningAddress */\n      0x05\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1476:1506  miningAddress = _miningAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":991:1513  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2010:2090  function getItem() public view returns (IKIP37Full) {... */\n    tag_48:\n        /* \"Hero/utils/HeroController.sol\":2050:2060  IKIP37Full */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2079:2083  item */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2072:2083  return item */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2010:2090  function getItem() public view returns (IKIP37Full) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1601:1695  function changeMiningPaused() external onlyOwner {... */\n    tag_52:\n        /* \"Hero/utils/HeroController.sol\":807:816  coreOwner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":793:816  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":793:803  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":793:816  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":785:847  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_61\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"Hero/utils/HeroController.sol\":1676:1688  miningPaused */\n      0x05\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1675:1688  !miningPaused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1660:1672  miningPaused */\n      0x05\n      0x15\n        /* \"Hero/utils/HeroController.sol\":1660:1688  miningPaused = !miningPaused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1601:1695  function changeMiningPaused() external onlyOwner {... */\n      jump\t// out\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_68:\n        /* \"utils/SafeMath.sol\":341:348  uint256 */\n      0x00\n        /* \"utils/SafeMath.sol\":371:372  b */\n      dup2\n        /* \"utils/SafeMath.sol\":367:368  a */\n      dup4\n        /* \"utils/SafeMath.sol\":367:372  a * b */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"utils/SafeMath.sol\":360:372  return a * b */\n      swap1\n      pop\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_79:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_81\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_83:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_85\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:1433   */\n    tag_45:\n        /* \"#utility.yul\":410:416   */\n      0x00\n        /* \"#utility.yul\":418:424   */\n      dup1\n        /* \"#utility.yul\":426:432   */\n      0x00\n        /* \"#utility.yul\":434:440   */\n      dup1\n        /* \"#utility.yul\":442:448   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup1\n        /* \"#utility.yul\":458:464   */\n      0x00\n        /* \"#utility.yul\":507:510   */\n      0xe0\n        /* \"#utility.yul\":495:504   */\n      dup9\n        /* \"#utility.yul\":486:493   */\n      dup11\n        /* \"#utility.yul\":482:505   */\n      sub\n        /* \"#utility.yul\":478:511   */\n      slt\n        /* \"#utility.yul\":475:477   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":524:525   */\n      0x00\n        /* \"#utility.yul\":521:522   */\n      dup1\n        /* \"#utility.yul\":514:526   */\n      revert\n        /* \"#utility.yul\":475:477   */\n    tag_88:\n        /* \"#utility.yul\":567:568   */\n      0x00\n        /* \"#utility.yul\":592:645   */\n      tag_89\n        /* \"#utility.yul\":637:644   */\n      dup11\n        /* \"#utility.yul\":628:634   */\n      dup3\n        /* \"#utility.yul\":617:626   */\n      dup12\n        /* \"#utility.yul\":613:635   */\n      add\n        /* \"#utility.yul\":592:645   */\n      tag_79\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":582:645   */\n      swap8\n      pop\n        /* \"#utility.yul\":538:655   */\n      pop\n        /* \"#utility.yul\":694:696   */\n      0x20\n        /* \"#utility.yul\":720:773   */\n      tag_90\n        /* \"#utility.yul\":765:772   */\n      dup11\n        /* \"#utility.yul\":756:762   */\n      dup3\n        /* \"#utility.yul\":745:754   */\n      dup12\n        /* \"#utility.yul\":741:763   */\n      add\n        /* \"#utility.yul\":720:773   */\n      tag_79\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":710:773   */\n      swap7\n      pop\n        /* \"#utility.yul\":665:783   */\n      pop\n        /* \"#utility.yul\":822:824   */\n      0x40\n        /* \"#utility.yul\":848:901   */\n      tag_91\n        /* \"#utility.yul\":893:900   */\n      dup11\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup12\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_79\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":838:901   */\n      swap6\n      pop\n        /* \"#utility.yul\":793:911   */\n      pop\n        /* \"#utility.yul\":950:952   */\n      0x60\n        /* \"#utility.yul\":976:1029   */\n      tag_92\n        /* \"#utility.yul\":1021:1028   */\n      dup11\n        /* \"#utility.yul\":1012:1018   */\n      dup3\n        /* \"#utility.yul\":1001:1010   */\n      dup12\n        /* \"#utility.yul\":997:1019   */\n      add\n        /* \"#utility.yul\":976:1029   */\n      tag_79\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":966:1029   */\n      swap5\n      pop\n        /* \"#utility.yul\":921:1039   */\n      pop\n        /* \"#utility.yul\":1078:1081   */\n      0x80\n        /* \"#utility.yul\":1105:1158   */\n      tag_93\n        /* \"#utility.yul\":1150:1157   */\n      dup11\n        /* \"#utility.yul\":1141:1147   */\n      dup3\n        /* \"#utility.yul\":1130:1139   */\n      dup12\n        /* \"#utility.yul\":1126:1148   */\n      add\n        /* \"#utility.yul\":1105:1158   */\n      tag_79\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1095:1158   */\n      swap4\n      pop\n        /* \"#utility.yul\":1049:1168   */\n      pop\n        /* \"#utility.yul\":1207:1210   */\n      0xa0\n        /* \"#utility.yul\":1234:1287   */\n      tag_94\n        /* \"#utility.yul\":1279:1286   */\n      dup11\n        /* \"#utility.yul\":1270:1276   */\n      dup3\n        /* \"#utility.yul\":1259:1268   */\n      dup12\n        /* \"#utility.yul\":1255:1277   */\n      add\n        /* \"#utility.yul\":1234:1287   */\n      tag_83\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1224:1287   */\n      swap3\n      pop\n        /* \"#utility.yul\":1178:1297   */\n      pop\n        /* \"#utility.yul\":1336:1339   */\n      0xc0\n        /* \"#utility.yul\":1363:1416   */\n      tag_95\n        /* \"#utility.yul\":1408:1415   */\n      dup11\n        /* \"#utility.yul\":1399:1405   */\n      dup3\n        /* \"#utility.yul\":1388:1397   */\n      dup12\n        /* \"#utility.yul\":1384:1406   */\n      add\n        /* \"#utility.yul\":1363:1416   */\n      tag_83\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1353:1416   */\n      swap2\n      pop\n        /* \"#utility.yul\":1307:1426   */\n      pop\n        /* \"#utility.yul\":465:1433   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1581   */\n    tag_96:\n        /* \"#utility.yul\":1542:1574   */\n      tag_98\n        /* \"#utility.yul\":1568:1573   */\n      dup2\n        /* \"#utility.yul\":1542:1574   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1537:1540   */\n      dup3\n        /* \"#utility.yul\":1530:1575   */\n      mstore\n        /* \"#utility.yul\":1520:1581   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1587:1696   */\n    tag_100:\n        /* \"#utility.yul\":1668:1689   */\n      tag_102\n        /* \"#utility.yul\":1683:1688   */\n      dup2\n        /* \"#utility.yul\":1668:1689   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1663:1666   */\n      dup3\n        /* \"#utility.yul\":1656:1690   */\n      mstore\n        /* \"#utility.yul\":1646:1696   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1702:1863   */\n    tag_104:\n        /* \"#utility.yul\":1804:1856   */\n      tag_106\n        /* \"#utility.yul\":1850:1855   */\n      dup2\n        /* \"#utility.yul\":1804:1856   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1799:1802   */\n      dup3\n        /* \"#utility.yul\":1792:1857   */\n      mstore\n        /* \"#utility.yul\":1782:1863   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1869:2036   */\n    tag_108:\n        /* \"#utility.yul\":1974:2029   */\n      tag_110\n        /* \"#utility.yul\":2023:2028   */\n      dup2\n        /* \"#utility.yul\":1974:2029   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1969:1972   */\n      dup3\n        /* \"#utility.yul\":1962:2030   */\n      mstore\n        /* \"#utility.yul\":1952:2036   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2042:2199   */\n    tag_112:\n        /* \"#utility.yul\":2142:2192   */\n      tag_114\n        /* \"#utility.yul\":2186:2191   */\n      dup2\n        /* \"#utility.yul\":2142:2192   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2137:2140   */\n      dup3\n        /* \"#utility.yul\":2130:2193   */\n      mstore\n        /* \"#utility.yul\":2120:2199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2571   */\n    tag_116:\n        /* \"#utility.yul\":2347:2350   */\n      0x00\n        /* \"#utility.yul\":2368:2435   */\n      tag_118\n        /* \"#utility.yul\":2432:2434   */\n      0x1a\n        /* \"#utility.yul\":2427:2430   */\n      dup4\n        /* \"#utility.yul\":2368:2435   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2361:2435   */\n      swap2\n      pop\n        /* \"#utility.yul\":2444:2537   */\n      tag_120\n        /* \"#utility.yul\":2533:2536   */\n      dup3\n        /* \"#utility.yul\":2444:2537   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2562:2564   */\n      0x20\n        /* \"#utility.yul\":2557:2560   */\n      dup3\n        /* \"#utility.yul\":2553:2565   */\n      add\n        /* \"#utility.yul\":2546:2565   */\n      swap1\n      pop\n        /* \"#utility.yul\":2351:2571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2577:2695   */\n    tag_122:\n        /* \"#utility.yul\":2664:2688   */\n      tag_124\n        /* \"#utility.yul\":2682:2687   */\n      dup2\n        /* \"#utility.yul\":2664:2688   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2659:2662   */\n      dup3\n        /* \"#utility.yul\":2652:2689   */\n      mstore\n        /* \"#utility.yul\":2642:2695   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2701:2955   */\n    tag_40:\n        /* \"#utility.yul\":2810:2814   */\n      0x00\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"#utility.yul\":2837:2846   */\n      dup3\n        /* \"#utility.yul\":2833:2851   */\n      add\n        /* \"#utility.yul\":2825:2851   */\n      swap1\n      pop\n        /* \"#utility.yul\":2861:2948   */\n      tag_127\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2934:2943   */\n      dup4\n        /* \"#utility.yul\":2930:2947   */\n      add\n        /* \"#utility.yul\":2921:2927   */\n      dup5\n        /* \"#utility.yul\":2861:2948   */\n      tag_96\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2815:2955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2961:3171   */\n    tag_26:\n        /* \"#utility.yul\":3048:3052   */\n      0x00\n        /* \"#utility.yul\":3086:3088   */\n      0x20\n        /* \"#utility.yul\":3075:3084   */\n      dup3\n        /* \"#utility.yul\":3071:3089   */\n      add\n        /* \"#utility.yul\":3063:3089   */\n      swap1\n      pop\n        /* \"#utility.yul\":3099:3164   */\n      tag_129\n        /* \"#utility.yul\":3161:3162   */\n      0x00\n        /* \"#utility.yul\":3150:3159   */\n      dup4\n        /* \"#utility.yul\":3146:3163   */\n      add\n        /* \"#utility.yul\":3137:3143   */\n      dup5\n        /* \"#utility.yul\":3099:3164   */\n      tag_100\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3053:3171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3177:3429   */\n    tag_36:\n        /* \"#utility.yul\":3285:3289   */\n      0x00\n        /* \"#utility.yul\":3323:3325   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3308:3326   */\n      add\n        /* \"#utility.yul\":3300:3326   */\n      swap1\n      pop\n        /* \"#utility.yul\":3336:3422   */\n      tag_131\n        /* \"#utility.yul\":3419:3420   */\n      0x00\n        /* \"#utility.yul\":3408:3417   */\n      dup4\n        /* \"#utility.yul\":3404:3421   */\n      add\n        /* \"#utility.yul\":3395:3401   */\n      dup5\n        /* \"#utility.yul\":3336:3422   */\n      tag_104\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3290:3429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3435:3693   */\n    tag_50:\n        /* \"#utility.yul\":3546:3550   */\n      0x00\n        /* \"#utility.yul\":3584:3586   */\n      0x20\n        /* \"#utility.yul\":3573:3582   */\n      dup3\n        /* \"#utility.yul\":3569:3587   */\n      add\n        /* \"#utility.yul\":3561:3587   */\n      swap1\n      pop\n        /* \"#utility.yul\":3597:3686   */\n      tag_133\n        /* \"#utility.yul\":3683:3684   */\n      0x00\n        /* \"#utility.yul\":3672:3681   */\n      dup4\n        /* \"#utility.yul\":3668:3685   */\n      add\n        /* \"#utility.yul\":3659:3665   */\n      dup5\n        /* \"#utility.yul\":3597:3686   */\n      tag_108\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3551:3693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3699:3947   */\n    tag_22:\n        /* \"#utility.yul\":3805:3809   */\n      0x00\n        /* \"#utility.yul\":3843:3845   */\n      0x20\n        /* \"#utility.yul\":3832:3841   */\n      dup3\n        /* \"#utility.yul\":3828:3846   */\n      add\n        /* \"#utility.yul\":3820:3846   */\n      swap1\n      pop\n        /* \"#utility.yul\":3856:3940   */\n      tag_135\n        /* \"#utility.yul\":3937:3938   */\n      0x00\n        /* \"#utility.yul\":3926:3935   */\n      dup4\n        /* \"#utility.yul\":3922:3939   */\n      add\n        /* \"#utility.yul\":3913:3919   */\n      dup5\n        /* \"#utility.yul\":3856:3940   */\n      tag_112\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3810:3947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3953:4372   */\n    tag_61:\n        /* \"#utility.yul\":4119:4123   */\n      0x00\n        /* \"#utility.yul\":4157:4159   */\n      0x20\n        /* \"#utility.yul\":4146:4155   */\n      dup3\n        /* \"#utility.yul\":4142:4160   */\n      add\n        /* \"#utility.yul\":4134:4160   */\n      swap1\n      pop\n        /* \"#utility.yul\":4206:4215   */\n      dup2\n        /* \"#utility.yul\":4200:4204   */\n      dup2\n        /* \"#utility.yul\":4196:4216   */\n      sub\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4181:4190   */\n      dup4\n        /* \"#utility.yul\":4177:4194   */\n      add\n        /* \"#utility.yul\":4170:4217   */\n      mstore\n        /* \"#utility.yul\":4234:4365   */\n      tag_137\n        /* \"#utility.yul\":4360:4364   */\n      dup2\n        /* \"#utility.yul\":4234:4365   */\n      tag_116\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4226:4365   */\n      swap1\n      pop\n        /* \"#utility.yul\":4124:4372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4600   */\n    tag_18:\n        /* \"#utility.yul\":4471:4475   */\n      0x00\n        /* \"#utility.yul\":4509:4511   */\n      0x20\n        /* \"#utility.yul\":4498:4507   */\n      dup3\n        /* \"#utility.yul\":4494:4512   */\n      add\n        /* \"#utility.yul\":4486:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4522:4593   */\n      tag_139\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4579:4588   */\n      dup4\n        /* \"#utility.yul\":4575:4592   */\n      add\n        /* \"#utility.yul\":4566:4572   */\n      dup5\n        /* \"#utility.yul\":4522:4593   */\n      tag_122\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4476:4600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4606:4775   */\n    tag_119:\n        /* \"#utility.yul\":4690:4701   */\n      0x00\n        /* \"#utility.yul\":4724:4730   */\n      dup3\n        /* \"#utility.yul\":4719:4722   */\n      dup3\n        /* \"#utility.yul\":4712:4731   */\n      mstore\n        /* \"#utility.yul\":4764:4768   */\n      0x20\n        /* \"#utility.yul\":4759:4762   */\n      dup3\n        /* \"#utility.yul\":4755:4769   */\n      add\n        /* \"#utility.yul\":4740:4769   */\n      swap1\n      pop\n        /* \"#utility.yul\":4702:4775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4781:5129   */\n    tag_77:\n        /* \"#utility.yul\":4821:4828   */\n      0x00\n        /* \"#utility.yul\":4844:4864   */\n      tag_142\n        /* \"#utility.yul\":4862:4863   */\n      dup3\n        /* \"#utility.yul\":4844:4864   */\n      tag_125\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4839:4864   */\n      swap2\n      pop\n        /* \"#utility.yul\":4878:4898   */\n      tag_143\n        /* \"#utility.yul\":4896:4897   */\n      dup4\n        /* \"#utility.yul\":4878:4898   */\n      tag_125\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4873:4898   */\n      swap3\n      pop\n        /* \"#utility.yul\":5066:5067   */\n      dup2\n        /* \"#utility.yul\":4998:5064   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4994:5068   */\n      div\n        /* \"#utility.yul\":4991:4992   */\n      dup4\n        /* \"#utility.yul\":4988:5069   */\n      gt\n        /* \"#utility.yul\":4983:4984   */\n      dup3\n        /* \"#utility.yul\":4976:4985   */\n      iszero\n        /* \"#utility.yul\":4969:4986   */\n      iszero\n        /* \"#utility.yul\":4965:5070   */\n      and\n        /* \"#utility.yul\":4962:4964   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":5073:5091   */\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4962:4964   */\n    tag_144:\n        /* \"#utility.yul\":5121:5122   */\n      dup3\n        /* \"#utility.yul\":5118:5119   */\n      dup3\n        /* \"#utility.yul\":5114:5123   */\n      mul\n        /* \"#utility.yul\":5103:5123   */\n      swap1\n      pop\n        /* \"#utility.yul\":4829:5129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5135:5231   */\n    tag_147:\n        /* \"#utility.yul\":5172:5179   */\n      0x00\n        /* \"#utility.yul\":5201:5225   */\n      tag_149\n        /* \"#utility.yul\":5219:5224   */\n      dup3\n        /* \"#utility.yul\":5201:5225   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5190:5225   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5237:5341   */\n    tag_99:\n        /* \"#utility.yul\":5282:5289   */\n      0x00\n        /* \"#utility.yul\":5311:5335   */\n      tag_152\n        /* \"#utility.yul\":5329:5334   */\n      dup3\n        /* \"#utility.yul\":5311:5335   */\n      tag_150\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5300:5335   */\n      swap1\n      pop\n        /* \"#utility.yul\":5290:5341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5347:5437   */\n    tag_103:\n        /* \"#utility.yul\":5381:5388   */\n      0x00\n        /* \"#utility.yul\":5424:5429   */\n      dup2\n        /* \"#utility.yul\":5417:5430   */\n      iszero\n        /* \"#utility.yul\":5410:5431   */\n      iszero\n        /* \"#utility.yul\":5399:5431   */\n      swap1\n      pop\n        /* \"#utility.yul\":5389:5437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5443:5569   */\n    tag_150:\n        /* \"#utility.yul\":5480:5487   */\n      0x00\n        /* \"#utility.yul\":5520:5562   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5513:5518   */\n      dup3\n        /* \"#utility.yul\":5509:5563   */\n      and\n        /* \"#utility.yul\":5498:5563   */\n      swap1\n      pop\n        /* \"#utility.yul\":5488:5569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5575:5652   */\n    tag_125:\n        /* \"#utility.yul\":5612:5619   */\n      0x00\n        /* \"#utility.yul\":5641:5646   */\n      dup2\n        /* \"#utility.yul\":5630:5646   */\n      swap1\n      pop\n        /* \"#utility.yul\":5620:5652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5658:5814   */\n    tag_107:\n        /* \"#utility.yul\":5723:5732   */\n      0x00\n        /* \"#utility.yul\":5756:5808   */\n      tag_157\n        /* \"#utility.yul\":5802:5807   */\n      dup3\n        /* \"#utility.yul\":5756:5808   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5743:5808   */\n      swap1\n      pop\n        /* \"#utility.yul\":5733:5814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5820:5948   */\n    tag_158:\n        /* \"#utility.yul\":5885:5894   */\n      0x00\n        /* \"#utility.yul\":5918:5942   */\n      tag_160\n        /* \"#utility.yul\":5936:5941   */\n      dup3\n        /* \"#utility.yul\":5918:5942   */\n      tag_150\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5905:5942   */\n      swap1\n      pop\n        /* \"#utility.yul\":5895:5948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5954:6116   */\n    tag_111:\n        /* \"#utility.yul\":6022:6031   */\n      0x00\n        /* \"#utility.yul\":6055:6110   */\n      tag_162\n        /* \"#utility.yul\":6104:6109   */\n      dup3\n        /* \"#utility.yul\":6055:6110   */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":6042:6110   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6253   */\n    tag_163:\n        /* \"#utility.yul\":6190:6199   */\n      0x00\n        /* \"#utility.yul\":6223:6247   */\n      tag_165\n        /* \"#utility.yul\":6241:6246   */\n      dup3\n        /* \"#utility.yul\":6223:6247   */\n      tag_150\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6210:6247   */\n      swap1\n      pop\n        /* \"#utility.yul\":6200:6253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6259:6411   */\n    tag_115:\n        /* \"#utility.yul\":6322:6331   */\n      0x00\n        /* \"#utility.yul\":6355:6405   */\n      tag_167\n        /* \"#utility.yul\":6399:6404   */\n      dup3\n        /* \"#utility.yul\":6355:6405   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6342:6405   */\n      swap1\n      pop\n        /* \"#utility.yul\":6332:6411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6417:6543   */\n    tag_168:\n        /* \"#utility.yul\":6480:6489   */\n      0x00\n        /* \"#utility.yul\":6513:6537   */\n      tag_170\n        /* \"#utility.yul\":6531:6536   */\n      dup3\n        /* \"#utility.yul\":6513:6537   */\n      tag_150\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6500:6537   */\n      swap1\n      pop\n        /* \"#utility.yul\":6490:6543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6549:6729   */\n    tag_146:\n        /* \"#utility.yul\":6597:6674   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6594:6595   */\n      0x00\n        /* \"#utility.yul\":6587:6675   */\n      mstore\n        /* \"#utility.yul\":6694:6698   */\n      0x11\n        /* \"#utility.yul\":6691:6692   */\n      0x04\n        /* \"#utility.yul\":6684:6699   */\n      mstore\n        /* \"#utility.yul\":6718:6722   */\n      0x24\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6708:6723   */\n      revert\n        /* \"#utility.yul\":6735:6911   */\n    tag_121:\n        /* \"#utility.yul\":6875:6903   */\n      0x4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000\n        /* \"#utility.yul\":6871:6872   */\n      0x00\n        /* \"#utility.yul\":6863:6869   */\n      dup3\n        /* \"#utility.yul\":6859:6873   */\n      add\n        /* \"#utility.yul\":6852:6904   */\n      mstore\n        /* \"#utility.yul\":6841:6911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6917:7039   */\n    tag_82:\n        /* \"#utility.yul\":6990:7014   */\n      tag_174\n        /* \"#utility.yul\":7008:7013   */\n      dup2\n        /* \"#utility.yul\":6990:7014   */\n      tag_147\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6983:6988   */\n      dup2\n        /* \"#utility.yul\":6980:7015   */\n      eq\n        /* \"#utility.yul\":6970:6972   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":7029:7030   */\n      0x00\n        /* \"#utility.yul\":7026:7027   */\n      dup1\n        /* \"#utility.yul\":7019:7031   */\n      revert\n        /* \"#utility.yul\":6970:6972   */\n    tag_175:\n        /* \"#utility.yul\":6960:7039   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7045:7167   */\n    tag_86:\n        /* \"#utility.yul\":7118:7142   */\n      tag_177\n        /* \"#utility.yul\":7136:7141   */\n      dup2\n        /* \"#utility.yul\":7118:7142   */\n      tag_125\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7111:7116   */\n      dup2\n        /* \"#utility.yul\":7108:7143   */\n      eq\n        /* \"#utility.yul\":7098:7100   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":7157:7158   */\n      0x00\n        /* \"#utility.yul\":7154:7155   */\n      dup1\n        /* \"#utility.yul\":7147:7159   */\n      revert\n        /* \"#utility.yul\":7098:7100   */\n    tag_178:\n        /* \"#utility.yul\":7088:7167   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220454303bcb2d48164bcb001caed49bf1ee5400cb4bd838529a9667bdd1821723f64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001600560146101000a81548160ff0219169083151502179055506001600560156101000a81548160ff02191690831515021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a50806100976000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637cac00ee116100715780637cac00ee14610144578063893d20e8146101625780639eb4eae514610180578063b33f95271461018a578063c412eaba146101a6578063ee72b8cc146101c4576100a9565b80631b9cbdfb146100ae57806321df0da7146100cc57806328919df6146100ea5780633a1a8080146101085780636805b84b14610126575b600080fd5b6100b66101ce565b6040516100c39190610848565b60405180910390f35b6100d46101d4565b6040516100e1919061080d565b60405180910390f35b6100f26101fe565b6040516100ff91906107bc565b60405180910390f35b610110610215565b60405161011d9190610848565b60405180910390f35b61012e61021b565b60405161013b91906107bc565b60405180910390f35b61014c610232565b60405161015991906107d7565b60405180910390f35b61016a61025b565b60405161017791906107a1565b60405180910390f35b610188610285565b005b6101a4600480360381019061019f9190610686565b610341565b005b6101ae610560565b6040516101bb91906107f2565b60405180910390f35b6101cc61058a565b005b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560159054906101000a900460ff16905090565b60065481565b6000600560149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c90610828565b60405180910390fd5b600560149054906101000a900460ff1615600560146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c890610828565b60405180910390fd5b6103ec670de0b6b3a76400008361064690919063ffffffff16565b60068190555061040d670de0b6b3a76400008261064690919063ffffffff16565b600781905550866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190610828565b60405180910390fd5b600560159054906101000a900460ff1615600560156101000a81548160ff021916908315150217905550565b600081836106549190610874565b905092915050565b60008135905061066b816109ec565b92915050565b60008135905061068081610a03565b92915050565b600080600080600080600060e0888a0312156106a157600080fd5b60006106af8a828b0161065c565b97505060206106c08a828b0161065c565b96505060406106d18a828b0161065c565b95505060606106e28a828b0161065c565b94505060806106f38a828b0161065c565b93505060a06107048a828b01610671565b92505060c06107158a828b01610671565b91505092959891949750929550565b61072d816108e0565b82525050565b61073c816108f2565b82525050565b61074b81610928565b82525050565b61075a8161094c565b82525050565b61076981610970565b82525050565b600061077c601a83610863565b9150610787826109c3565b602082019050919050565b61079b8161091e565b82525050565b60006020820190506107b66000830184610724565b92915050565b60006020820190506107d16000830184610733565b92915050565b60006020820190506107ec6000830184610742565b92915050565b60006020820190506108076000830184610751565b92915050565b60006020820190506108226000830184610760565b92915050565b600060208201905081810360008301526108418161076f565b9050919050565b600060208201905061085d6000830184610792565b92915050565b600082825260208201905092915050565b600061087f8261091e565b915061088a8361091e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108c3576108c2610994565b5b828202905092915050565b60006108d9826108fe565b9050919050565b60006108eb826108fe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109338261093a565b9050919050565b6000610945826108fe565b9050919050565b60006109578261095e565b9050919050565b6000610969826108fe565b9050919050565b600061097b82610982565b9050919050565b600061098d826108fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b6109f5816108ce565b8114610a0057600080fd5b50565b610a0c8161091e565b8114610a1757600080fd5b5056fea2646970667358221220454303bcb2d48164bcb001caed49bf1ee5400cb4bd838529a9667bdd1821723f64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xA50 DUP1 PUSH2 0x97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CAC00EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xB33F9527 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1C4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C8 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3EC PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x40D PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66B DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x680 DUP2 PUSH2 0xA03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6AF DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x6C0 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x6D1 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x6E2 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x6F3 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x704 DUP11 DUP3 DUP12 ADD PUSH2 0x671 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x715 DUP11 DUP3 DUP12 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x72D DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x73C DUP2 PUSH2 0x8F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x74B DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x94C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH2 0x970 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C PUSH1 0x1A DUP4 PUSH2 0x863 JUMP JUMPDEST SWAP2 POP PUSH2 0x787 DUP3 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79B DUP2 PUSH2 0x91E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x724 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x733 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x807 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x751 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x822 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x841 DUP2 PUSH2 0x76F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x792 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP3 PUSH2 0x91E JUMP JUMPDEST SWAP2 POP PUSH2 0x88A DUP4 PUSH2 0x91E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x994 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x93A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x945 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x957 DUP3 PUSH2 0x95E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x969 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97B DUP3 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9F5 DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP2 EQ PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA0C DUP2 PUSH2 0x91E JUMP JUMPDEST DUP2 EQ PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT NUMBER SUB 0xBC 0xB2 0xD4 DUP2 PUSH5 0xBCB001CAED 0x49 0xBF 0x1E 0xE5 BLOCKHASH 0xC 0xB4 0xBD DUP4 DUP6 0x29 0xA9 PUSH7 0x7BDD1821723F64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "261:2105:2:-:0;;;871:114;;;;;;;;;;904:4;895:6;;:13;;;;;;;;;;;;;;;;;;933:4;918:12;;:19;;;;;;;;;;;;;;;;;;967:10;947:9;;:31;;;;;;;;;;;;;;;;;;261:2105;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7170:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "7:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:10",
														"type": ""
													}
												],
												"src": "152:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "465:968:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "521:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "524:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "514:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "514:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "514:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "486:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "495:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "482:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "482:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "507:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "478:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "478:33:10"
															},
															"nodeType": "YulIf",
															"src": "475:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "538:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "553:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "567:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "557:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "582:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "617:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "628:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "613:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "613:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "637:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "592:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "592:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "582:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "665:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "680:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "694:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "684:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "710:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "745:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "756:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "741:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "741:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "765:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "720:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "710:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "793:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "808:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "822:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "812:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "921:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "936:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "950:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "940:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "966:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1001:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1012:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "997:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1021:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "976:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "976:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "966:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1049:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1064:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1078:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1068:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1095:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1130:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1141:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1126:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1126:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1150:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1105:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1105:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1178:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1193:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1207:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1197:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1224:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1259:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1270:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1255:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1255:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1279:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1234:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1234:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "1224:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1307:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1322:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1326:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1353:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1388:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1399:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1384:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1384:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1408:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1363:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1363:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "1353:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "387:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "398:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "410:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "418:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "426:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "434:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "442:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "450:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "458:6:10",
														"type": ""
													}
												],
												"src": "297:1136:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1520:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1537:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1568:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1542:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1542:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1530:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1508:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1515:3:10",
														"type": ""
													}
												],
												"src": "1439:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1646:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1663:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1683:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1668:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1668:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1656:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1634:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1641:3:10",
														"type": ""
													}
												],
												"src": "1587:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1799:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1850:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1804:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:52:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1792:65:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1770:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1777:3:10",
														"type": ""
													}
												],
												"src": "1702:161:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1952:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1969:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2023:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP37Full_$569_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1974:48:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1974:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:68:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP37Full_$569_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1940:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1947:3:10",
														"type": ""
													}
												],
												"src": "1869:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2120:79:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2137:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2186:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP7_$700_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2142:43:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2142:50:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2130:63:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP7_$700_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2108:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2115:3:10",
														"type": ""
													}
												],
												"src": "2042:157:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2427:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2432:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2368:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2533:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																	"nodeType": "YulIdentifier",
																	"src": "2444:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2444:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2546:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2557:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2562:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2553:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2553:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2546:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2339:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:10",
														"type": ""
													}
												],
												"src": "2205:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2642:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2659:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2682:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2664:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2664:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2630:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2637:3:10",
														"type": ""
													}
												],
												"src": "2577:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2815:140:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2825:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2833:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2825:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2921:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2945:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2861:59:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2861:87:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2861:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2787:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2799:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2810:4:10",
														"type": ""
													}
												],
												"src": "2701:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3053:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3063:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3075:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3086:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3071:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3063:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3137:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3161:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3146:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3099:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3099:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3025:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3037:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3048:4:10",
														"type": ""
													}
												],
												"src": "2961:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3290:139:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3300:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3312:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3308:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3308:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3300:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3395:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3408:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3404:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3404:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3336:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3336:86:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3336:86:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3262:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3274:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3285:4:10",
														"type": ""
													}
												],
												"src": "3177:252:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3551:142:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3561:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3573:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3561:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3659:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3672:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3683:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP37Full_$569_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3597:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3597:89:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3597:89:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP37Full_$569__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3523:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3535:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3546:4:10",
														"type": ""
													}
												],
												"src": "3435:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3810:137:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3820:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3828:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3820:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3913:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3926:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3937:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3922:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3922:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP7_$700_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3856:56:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:84:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:84:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP7_$700__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3782:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3794:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3805:4:10",
														"type": ""
													}
												],
												"src": "3699:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4124:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4134:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4146:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4142:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4142:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4134:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4181:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4192:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4177:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4177:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4200:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4206:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4196:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4226:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4360:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4234:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4234:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4226:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4104:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4119:4:10",
														"type": ""
													}
												],
												"src": "3953:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4476:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4486:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4498:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4486:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4566:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4579:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4590:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4575:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4575:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4522:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4522:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4522:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4448:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4460:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4471:4:10",
														"type": ""
													}
												],
												"src": "4378:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4702:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4719:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4724:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4712:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4740:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4759:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4740:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4674:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4679:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4690:11:10",
														"type": ""
													}
												],
												"src": "4606:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4829:300:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4839:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4862:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4844:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4839:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4896:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4878:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4873:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5071:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5073:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5073:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5073:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4983:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4976:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4976:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4969:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4969:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4991:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4998:66:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5066:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4994:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4994:74:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4988:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:81:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4965:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:105:10"
															},
															"nodeType": "YulIf",
															"src": "4962:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5103:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5118:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5121:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5114:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5103:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4812:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4815:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4821:7:10",
														"type": ""
													}
												],
												"src": "4781:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5180:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5190:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5219:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5201:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5190:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5162:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5172:7:10",
														"type": ""
													}
												],
												"src": "5135:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5300:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5329:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5311:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5300:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5272:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5282:7:10",
														"type": ""
													}
												],
												"src": "5237:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5389:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5399:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5424:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5417:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5417:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5399:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5371:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5381:7:10",
														"type": ""
													}
												],
												"src": "5347:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5488:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5498:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5513:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5520:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5509:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5509:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5498:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5470:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5480:7:10",
														"type": ""
													}
												],
												"src": "5443:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5620:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5630:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5641:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5630:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5602:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5612:7:10",
														"type": ""
													}
												],
												"src": "5575:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5733:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5743:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5802:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5756:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:52:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5743:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5713:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5723:9:10",
														"type": ""
													}
												],
												"src": "5658:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5895:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5905:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5936:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5918:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5918:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5905:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5875:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5885:9:10",
														"type": ""
													}
												],
												"src": "5820:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6032:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6042:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6104:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP37Full_$569_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6055:48:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6055:55:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6042:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$569_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6012:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6022:9:10",
														"type": ""
													}
												],
												"src": "5954:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6200:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6210:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6241:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6223:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6223:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6210:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$569_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6180:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6190:9:10",
														"type": ""
													}
												],
												"src": "6122:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6332:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6342:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6399:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP7_$700_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6355:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6355:50:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6342:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$700_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6312:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6322:9:10",
														"type": ""
													}
												],
												"src": "6259:152:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6490:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6531:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6513:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6513:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6500:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$700_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6470:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6480:9:10",
														"type": ""
													}
												],
												"src": "6417:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6577:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6594:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6597:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6587:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6587:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6691:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6694:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6684:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6684:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6718:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6549:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6841:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6863:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6871:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6859:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6859:14:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6875:28:10",
																		"type": "",
																		"value": "HeroCore Error : onlyOwner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6852:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6852:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6852:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6833:6:10",
														"type": ""
													}
												],
												"src": "6735:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6960:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7017:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7026:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7029:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7019:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7019:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7019:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6983:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7008:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6990:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6990:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6980:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6980:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6973:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6973:43:10"
															},
															"nodeType": "YulIf",
															"src": "6970:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6953:5:10",
														"type": ""
													}
												],
												"src": "6917:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7088:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7145:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7154:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7157:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7147:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7147:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7147:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7111:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7136:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7118:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7118:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7108:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7108:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7101:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:43:10"
															},
															"nodeType": "YulIf",
															"src": "7098:2:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7081:5:10",
														"type": ""
													}
												],
												"src": "7045:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IHeroNFT_$30_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP37Full_$569_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP37Full_$569_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP7_$700_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP7_$700_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP37Full_$569__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP37Full_$569_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP7_$700__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP7_$700_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IHeroNFT_$30_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$569_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP37Full_$569_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$569_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$700_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP7_$700_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$700_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"HeroCore Error : onlyOwner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80637cac00ee116100715780637cac00ee14610144578063893d20e8146101625780639eb4eae514610180578063b33f95271461018a578063c412eaba146101a6578063ee72b8cc146101c4576100a9565b80631b9cbdfb146100ae57806321df0da7146100cc57806328919df6146100ea5780633a1a8080146101085780636805b84b14610126575b600080fd5b6100b66101ce565b6040516100c39190610848565b60405180910390f35b6100d46101d4565b6040516100e1919061080d565b60405180910390f35b6100f26101fe565b6040516100ff91906107bc565b60405180910390f35b610110610215565b60405161011d9190610848565b60405180910390f35b61012e61021b565b60405161013b91906107bc565b60405180910390f35b61014c610232565b60405161015991906107d7565b60405180910390f35b61016a61025b565b60405161017791906107a1565b60405180910390f35b610188610285565b005b6101a4600480360381019061019f9190610686565b610341565b005b6101ae610560565b6040516101bb91906107f2565b60405180910390f35b6101cc61058a565b005b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560159054906101000a900460ff16905090565b60065481565b6000600560149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c90610828565b60405180910390fd5b600560149054906101000a900460ff1615600560146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c890610828565b60405180910390fd5b6103ec670de0b6b3a76400008361064690919063ffffffff16565b60068190555061040d670de0b6b3a76400008261064690919063ffffffff16565b600781905550866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190610828565b60405180910390fd5b600560159054906101000a900460ff1615600560156101000a81548160ff021916908315150217905550565b600081836106549190610874565b905092915050565b60008135905061066b816109ec565b92915050565b60008135905061068081610a03565b92915050565b600080600080600080600060e0888a0312156106a157600080fd5b60006106af8a828b0161065c565b97505060206106c08a828b0161065c565b96505060406106d18a828b0161065c565b95505060606106e28a828b0161065c565b94505060806106f38a828b0161065c565b93505060a06107048a828b01610671565b92505060c06107158a828b01610671565b91505092959891949750929550565b61072d816108e0565b82525050565b61073c816108f2565b82525050565b61074b81610928565b82525050565b61075a8161094c565b82525050565b61076981610970565b82525050565b600061077c601a83610863565b9150610787826109c3565b602082019050919050565b61079b8161091e565b82525050565b60006020820190506107b66000830184610724565b92915050565b60006020820190506107d16000830184610733565b92915050565b60006020820190506107ec6000830184610742565b92915050565b60006020820190506108076000830184610751565b92915050565b60006020820190506108226000830184610760565b92915050565b600060208201905081810360008301526108418161076f565b9050919050565b600060208201905061085d6000830184610792565b92915050565b600082825260208201905092915050565b600061087f8261091e565b915061088a8361091e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108c3576108c2610994565b5b828202905092915050565b60006108d9826108fe565b9050919050565b60006108eb826108fe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109338261093a565b9050919050565b6000610945826108fe565b9050919050565b60006109578261095e565b9050919050565b6000610969826108fe565b9050919050565b600061097b82610982565b9050919050565b600061098d826108fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b6109f5816108ce565b8114610a0057600080fd5b50565b610a0c8161091e565b8114610a1757600080fd5b5056fea2646970667358221220454303bcb2d48164bcb001caed49bf1ee5400cb4bd838529a9667bdd1821723f64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CAC00EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xB33F9527 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1C4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C8 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3EC PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x40D PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66B DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x680 DUP2 PUSH2 0xA03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6AF DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x6C0 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x6D1 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x6E2 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x6F3 DUP11 DUP3 DUP12 ADD PUSH2 0x65C JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x704 DUP11 DUP3 DUP12 ADD PUSH2 0x671 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x715 DUP11 DUP3 DUP12 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x72D DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x73C DUP2 PUSH2 0x8F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x74B DUP2 PUSH2 0x928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x94C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH2 0x970 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C PUSH1 0x1A DUP4 PUSH2 0x863 JUMP JUMPDEST SWAP2 POP PUSH2 0x787 DUP3 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79B DUP2 PUSH2 0x91E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x724 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x733 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x807 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x751 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x822 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x841 DUP2 PUSH2 0x76F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x792 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP3 PUSH2 0x91E JUMP JUMPDEST SWAP2 POP PUSH2 0x88A DUP4 PUSH2 0x91E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x994 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x93A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x945 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x957 DUP3 PUSH2 0x95E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x969 DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97B DUP3 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9F5 DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP2 EQ PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA0C DUP2 PUSH2 0x91E JUMP JUMPDEST DUP2 EQ PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT NUMBER SUB 0xBC 0xB2 0xD4 DUP2 PUSH5 0xBCB001CAED 0x49 0xBF 0x1E 0xE5 BLOCKHASH 0xC 0xB4 0xBD DUP4 DUP6 0x29 0xA9 PUSH7 0x7BDD1821723F64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "261:2105:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;587:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2096:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1914:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;555:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1830:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2179:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1733:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1519:76;;;:::i;:::-;;991:522;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2010:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1601:94;;;:::i;:::-;;587:27;;;;:::o;2096:77::-;2137:5;2161;;;;;;;;;;;2154:12;;2096:77;:::o;1914:90::-;1962:4;1985:12;;;;;;;;;;;1978:19;;1914:90;:::o;555:26::-;;;;:::o;1830:78::-;1872:4;1895:6;;;;;;;;;;;1888:13;;1830:78;:::o;2179:84::-;2222:8;2249:7;;;;;;;;;;;2242:14;;2179:84;:::o;1733:91::-;1774:15;1808:9;;;;;;;;;;;1801:16;;1733:91;:::o;1519:76::-;807:9;;;;;;;;;;;793:23;;:10;:23;;;785:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1582:6:::1;;;;;;;;;;;1581:7;1572:6;;:16;;;;;;;;;;;;;;;;;;1519:76::o:0;991:522::-;807:9;;;;;;;;;;;793:23;;:10;:23;;;785:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1250:19:::1;656:4;1250:5;:9;;:19;;;;:::i;:::-;1236:11;:33;;;;1294:25;656:4;1294:11;:15;;:25;;;;:::i;:::-;1279:12;:40;;;;1349:8;1330:7;::::0;:28:::1;;;;;;;;;;;;;;;;;;1382:6;1368:5;;:21;;;;;;;;;;;;;;;;;;1417:5;1399:4;;:24;;;;;;;;;;;;;;;;;;1451:15;1434:14;;:32;;;;;;;;;;;;;;;;;;1492:14;1476:13;;:30;;;;;;;;;;;;;;;;;;991:522:::0;;;;;;;:::o;2010:80::-;2050:10;2079:4;;;;;;;;;;;2072:11;;2010:80;:::o;1601:94::-;807:9;;;;;;;;;;;793:23;;:10;:23;;;785:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1676:12:::1;;;;;;;;;;;1675:13;1660:12;;:28;;;;;;;;;;;;;;;;;;1601:94::o:0;283:96:9:-;341:7;371:1;367;:5;;;;:::i;:::-;360:12;;283:96;;;;:::o;7:139:10:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:1136::-;410:6;418;426;434;442;450;458;507:3;495:9;486:7;482:23;478:33;475:2;;;524:1;521;514:12;475:2;567:1;592:53;637:7;628:6;617:9;613:22;592:53;:::i;:::-;582:63;;538:117;694:2;720:53;765:7;756:6;745:9;741:22;720:53;:::i;:::-;710:63;;665:118;822:2;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;793:118;950:2;976:53;1021:7;1012:6;1001:9;997:22;976:53;:::i;:::-;966:63;;921:118;1078:3;1105:53;1150:7;1141:6;1130:9;1126:22;1105:53;:::i;:::-;1095:63;;1049:119;1207:3;1234:53;1279:7;1270:6;1259:9;1255:22;1234:53;:::i;:::-;1224:63;;1178:119;1336:3;1363:53;1408:7;1399:6;1388:9;1384:22;1363:53;:::i;:::-;1353:63;;1307:119;465:968;;;;;;;;;;:::o;1439:142::-;1542:32;1568:5;1542:32;:::i;:::-;1537:3;1530:45;1520:61;;:::o;1587:109::-;1668:21;1683:5;1668:21;:::i;:::-;1663:3;1656:34;1646:50;;:::o;1702:161::-;1804:52;1850:5;1804:52;:::i;:::-;1799:3;1792:65;1782:81;;:::o;1869:167::-;1974:55;2023:5;1974:55;:::i;:::-;1969:3;1962:68;1952:84;;:::o;2042:157::-;2142:50;2186:5;2142:50;:::i;:::-;2137:3;2130:63;2120:79;;:::o;2205:366::-;2347:3;2368:67;2432:2;2427:3;2368:67;:::i;:::-;2361:74;;2444:93;2533:3;2444:93;:::i;:::-;2562:2;2557:3;2553:12;2546:19;;2351:220;;;:::o;2577:118::-;2664:24;2682:5;2664:24;:::i;:::-;2659:3;2652:37;2642:53;;:::o;2701:254::-;2810:4;2848:2;2837:9;2833:18;2825:26;;2861:87;2945:1;2934:9;2930:17;2921:6;2861:87;:::i;:::-;2815:140;;;;:::o;2961:210::-;3048:4;3086:2;3075:9;3071:18;3063:26;;3099:65;3161:1;3150:9;3146:17;3137:6;3099:65;:::i;:::-;3053:118;;;;:::o;3177:252::-;3285:4;3323:2;3312:9;3308:18;3300:26;;3336:86;3419:1;3408:9;3404:17;3395:6;3336:86;:::i;:::-;3290:139;;;;:::o;3435:258::-;3546:4;3584:2;3573:9;3569:18;3561:26;;3597:89;3683:1;3672:9;3668:17;3659:6;3597:89;:::i;:::-;3551:142;;;;:::o;3699:248::-;3805:4;3843:2;3832:9;3828:18;3820:26;;3856:84;3937:1;3926:9;3922:17;3913:6;3856:84;:::i;:::-;3810:137;;;;:::o;3953:419::-;4119:4;4157:2;4146:9;4142:18;4134:26;;4206:9;4200:4;4196:20;4192:1;4181:9;4177:17;4170:47;4234:131;4360:4;4234:131;:::i;:::-;4226:139;;4124:248;;;:::o;4378:222::-;4471:4;4509:2;4498:9;4494:18;4486:26;;4522:71;4590:1;4579:9;4575:17;4566:6;4522:71;:::i;:::-;4476:124;;;;:::o;4606:169::-;4690:11;4724:6;4719:3;4712:19;4764:4;4759:3;4755:14;4740:29;;4702:73;;;;:::o;4781:348::-;4821:7;4844:20;4862:1;4844:20;:::i;:::-;4839:25;;4878:20;4896:1;4878:20;:::i;:::-;4873:25;;5066:1;4998:66;4994:74;4991:1;4988:81;4983:1;4976:9;4969:17;4965:105;4962:2;;;5073:18;;:::i;:::-;4962:2;5121:1;5118;5114:9;5103:20;;4829:300;;;;:::o;5135:96::-;5172:7;5201:24;5219:5;5201:24;:::i;:::-;5190:35;;5180:51;;;:::o;5237:104::-;5282:7;5311:24;5329:5;5311:24;:::i;:::-;5300:35;;5290:51;;;:::o;5347:90::-;5381:7;5424:5;5417:13;5410:21;5399:32;;5389:48;;;:::o;5443:126::-;5480:7;5520:42;5513:5;5509:54;5498:65;;5488:81;;;:::o;5575:77::-;5612:7;5641:5;5630:16;;5620:32;;;:::o;5658:156::-;5723:9;5756:52;5802:5;5756:52;:::i;:::-;5743:65;;5733:81;;;:::o;5820:128::-;5885:9;5918:24;5936:5;5918:24;:::i;:::-;5905:37;;5895:53;;;:::o;5954:162::-;6022:9;6055:55;6104:5;6055:55;:::i;:::-;6042:68;;6032:84;;;:::o;6122:131::-;6190:9;6223:24;6241:5;6223:24;:::i;:::-;6210:37;;6200:53;;;:::o;6259:152::-;6322:9;6355:50;6399:5;6355:50;:::i;:::-;6342:63;;6332:79;;;:::o;6417:126::-;6480:9;6513:24;6531:5;6513:24;:::i;:::-;6500:37;;6490:53;;;:::o;6549:180::-;6597:77;6594:1;6587:88;6694:4;6691:1;6684:15;6718:4;6715:1;6708:15;6735:176;6875:28;6871:1;6863:6;6859:14;6852:52;6841:70;:::o;6917:122::-;6990:24;7008:5;6990:24;:::i;:::-;6983:5;6980:35;6970:2;;7029:1;7026;7019:12;6970:2;6960:79;:::o;7045:122::-;7118:24;7136:5;7118:24;:::i;:::-;7111:5;7108:35;7098:2;;7157:1;7154;7147:12;7098:2;7088:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "528000",
								"executionCost": "63262",
								"totalCost": "591262"
							},
							"external": {
								"changeMiningPaused()": "22930",
								"changePaused()": "22864",
								"getHeroNFT()": "1265",
								"getItem()": "1353",
								"getMiningPaused()": "1274",
								"getOwner()": "1244",
								"getPaused()": "1318",
								"getToken()": "1288",
								"initialize(address,address,address,address,address,uint256,uint256)": "infinite",
								"priceOfKlay()": "1196",
								"priceOfToken()": "1130"
							},
							"internal": {
								"_currentTime()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 261,
									"end": 2366,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 261,
									"end": 2366,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 261,
									"end": 2366,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 871,
									"end": 985,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 871,
									"end": 985,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 871,
									"end": 985,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 871,
									"end": 985,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 871,
									"end": 985,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 871,
									"end": 985,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 871,
									"end": 985,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 871,
									"end": 985,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 871,
									"end": 985,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 871,
									"end": 985,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 871,
									"end": 985,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 904,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 901,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 901,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 895,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 895,
									"end": 908,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 895,
									"end": 908,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 895,
									"end": 908,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 933,
									"end": 937,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 918,
									"end": 930,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 918,
									"end": 930,
									"name": "PUSH",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 918,
									"end": 937,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 918,
									"end": 937,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 918,
									"end": 937,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 918,
									"end": 937,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 967,
									"end": 977,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 947,
									"end": 956,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 947,
									"end": 956,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 947,
									"end": 978,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 947,
									"end": 978,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 947,
									"end": 978,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 947,
									"end": 978,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 947,
									"end": 978,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 261,
									"end": 2366,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 2366,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 261,
									"end": 2366,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 2366,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2366,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 261,
									"end": 2366,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2366,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220454303bcb2d48164bcb001caed49bf1ee5400cb4bd838529a9667bdd1821723f64736f6c63430008040033",
									".code": [
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "7CAC00EE"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "7CAC00EE"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "9EB4EAE5"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "B33F9527"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "C412EABA"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "EE72B8CC"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "1B9CBDFB"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "21DF0DA7"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "28919DF6"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "3A1A8080"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "6805B84B"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2004,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1908,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1824,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 803,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1588,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 803,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 656,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1269,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1269,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1250,
											"end": 1269,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1269,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1269,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1250,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1236,
											"end": 1269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1269,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 656,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1294,
											"end": 1305,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1319,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1294,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1291,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1279,
											"end": 1319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1319,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1319,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1357,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1403,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1399,
											"end": 1403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1466,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1506,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1476,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1513,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2090,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 807,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 803,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 816,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 785,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 785,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1688,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1672,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1660,
											"end": 1672,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1695,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 341,
											"end": 348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 1433,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 297,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 410,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 424,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 426,
											"end": 432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 440,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 495,
											"end": 504,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 486,
											"end": 493,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 482,
											"end": 505,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 478,
											"end": 511,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 475,
											"end": 477,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 475,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 475,
											"end": 477,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 524,
											"end": 525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 522,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 514,
											"end": 526,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 475,
											"end": 477,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 475,
											"end": 477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 567,
											"end": 568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 637,
											"end": 644,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 628,
											"end": 634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 617,
											"end": 626,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 613,
											"end": 635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 592,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 592,
											"end": 645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 582,
											"end": 645,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 582,
											"end": 645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 694,
											"end": 696,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 765,
											"end": 772,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 741,
											"end": 763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 720,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 720,
											"end": 773,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 720,
											"end": 773,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 720,
											"end": 773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 773,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 710,
											"end": 773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 665,
											"end": 783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 976,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 966,
											"end": 1029,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 966,
											"end": 1029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 921,
											"end": 1039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1081,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1150,
											"end": 1157,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1141,
											"end": 1147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1139,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1126,
											"end": 1148,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1105,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1158,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1210,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1268,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1234,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1287,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1336,
											"end": 1339,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1408,
											"end": 1415,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1397,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1384,
											"end": 1406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1363,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 1433,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1439,
											"end": 1581,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1439,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1568,
											"end": 1573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1542,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1581,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1587,
											"end": 1696,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1587,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1683,
											"end": 1688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1668,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1696,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1702,
											"end": 1863,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1702,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1804,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1799,
											"end": 1802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1863,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1869,
											"end": 2036,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1869,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 1972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 2030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 2036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 2036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 2036,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2042,
											"end": 2199,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2042,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2186,
											"end": 2191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2142,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2193,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2199,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2571,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2205,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2432,
											"end": 2434,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 2427,
											"end": 2430,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2368,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2435,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2533,
											"end": 2536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2444,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2571,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2571,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2577,
											"end": 2695,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2577,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2682,
											"end": 2687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2659,
											"end": 2662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2689,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2695,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2701,
											"end": 2955,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 2947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2861,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2955,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2961,
											"end": 3171,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2961,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3084,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3099,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3171,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3177,
											"end": 3429,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3177,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3419,
											"end": 3420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3336,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3290,
											"end": 3429,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3435,
											"end": 3693,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3435,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3573,
											"end": 3582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3561,
											"end": 3587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3561,
											"end": 3587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3681,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3668,
											"end": 3685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3665,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3597,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3693,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3935,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3913,
											"end": 3919,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3856,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3947,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3953,
											"end": 4372,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3953,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4157,
											"end": 4159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4216,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4190,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4170,
											"end": 4217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4234,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4372,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4378,
											"end": 4600,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 4378,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4498,
											"end": 4507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4575,
											"end": 4592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4566,
											"end": 4572,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4522,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4600,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4606,
											"end": 4775,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4606,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4690,
											"end": 4701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4731,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4764,
											"end": 4768,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 4775,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4781,
											"end": 5129,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4781,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4844,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4864,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4896,
											"end": 4897,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4873,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4998,
											"end": 5064,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5068,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 4992,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4988,
											"end": 5069,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 4984,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4976,
											"end": 4985,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5070,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5114,
											"end": 5123,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 5129,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5135,
											"end": 5231,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5135,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 5219,
											"end": 5224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5231,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5237,
											"end": 5341,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5237,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5329,
											"end": 5334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5300,
											"end": 5335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5300,
											"end": 5335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5341,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5347,
											"end": 5437,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5347,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5381,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5437,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5443,
											"end": 5569,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5443,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5480,
											"end": 5487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5513,
											"end": 5518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5563,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5575,
											"end": 5652,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 5575,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5612,
											"end": 5619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5630,
											"end": 5646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5652,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5658,
											"end": 5814,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5658,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5802,
											"end": 5807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5756,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5814,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5814,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5820,
											"end": 5948,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5820,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5936,
											"end": 5941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5948,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5954,
											"end": 6116,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5954,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6104,
											"end": 6109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6055,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6042,
											"end": 6110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6042,
											"end": 6110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6116,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6122,
											"end": 6253,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6122,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 6241,
											"end": 6246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6210,
											"end": 6247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6210,
											"end": 6247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6259,
											"end": 6411,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 6259,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6399,
											"end": 6404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6355,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6411,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6417,
											"end": 6543,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6417,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6531,
											"end": 6536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6513,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6543,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6549,
											"end": 6729,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6549,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6674,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6691,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6722,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6723,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6911,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 6735,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6875,
											"end": 6903,
											"name": "PUSH",
											"source": 10,
											"value": "4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000"
										},
										{
											"begin": 6871,
											"end": 6872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 6873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6852,
											"end": 6904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6911,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6917,
											"end": 7039,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 6917,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7008,
											"end": 7013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 6990,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 6988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6980,
											"end": 7015,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7029,
											"end": 7030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7027,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7031,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 7039,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7045,
											"end": 7167,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 7045,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 7136,
											"end": 7141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7111,
											"end": 7116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7108,
											"end": 7143,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7159,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7167,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeMiningPaused()": "ee72b8cc",
							"changePaused()": "9eb4eae5",
							"getHeroNFT()": "7cac00ee",
							"getItem()": "c412eaba",
							"getMiningPaused()": "28919df6",
							"getOwner()": "893d20e8",
							"getPaused()": "6805b84b",
							"getToken()": "21df0da7",
							"initialize(address,address,address,address,address,uint256,uint256)": "b33f9527",
							"priceOfKlay()": "3a1a8080",
							"priceOfToken()": "1b9cbdfb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"changeMiningPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changePaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHeroNFT\",\"outputs\":[{\"internalType\":\"contract IHeroNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getItem\",\"outputs\":[{\"internalType\":\"contract IKIP37Full\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMiningPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IKIP7\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heroNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_miningAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_klay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfKlay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/utils/HeroController.sol\":\"HeroController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/IHeroNFT.sol\":{\"keccak256\":\"0x28719918b6bcd5da2fc05c963dd0c407c3d256a41ba787fd7dd05cfb8e0eefbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922cc5d0a7c86837ac8697ee76295642fb8ca35453f7e2b20392dc4d3403e651\",\"dweb:/ipfs/QmPYwhoSmrcTJDR8HgQKH4nTfauncjRUMBDWJTAY99ygX5\"]},\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0xc0fbbbe5dc964f6f965fc1abde3b5cc387b9ec09527a147f261bfdead58a3b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9303cf1617cff14dbcd02dea01cdb5e5306e0c6196f31208f1ffce1bf4de3466\",\"dweb:/ipfs/QmWJrmzoPuR8oDUQ56pm2Z4DrvTVr7frpsLtGdWdAHsEi6\"]},\"Hero/utils/HeroController.sol\":{\"keccak256\":\"0x829af10da0f969e9a955af17f27703e6c8bd08f646508c6817756237f791dd41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f8ae1c603406448f022c6dc51e3e87b138148732504c4a59bd4e39625086e15\",\"dweb:/ipfs/QmaSnxLV3Zc3M3mdv8WnYchMpaBgK3U8GKSootNre746E3\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]},\"interface/IKIP7/IKIP7.sol\":{\"keccak256\":\"0x5682f350cd2e8a78fc918639e421e7e81ca17576106687049595d84ca248346e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537a3ac6311e841c1fdb2b8b9270219bf6e7b2c91271f361c189dc90159a4bff\",\"dweb:/ipfs/QmRa5jJs3S3WjPPL4mWpXE2eGEk97gYR2S8yoDxtU8Tm68\"]},\"utils/SafeMath.sol\":{\"keccak256\":\"0x884e0eaf6a4a9779317975ad010c62f3a4bd66ed64334977bc7afba8d97fab58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61f2e9002f930fb312e3e6fe19753b1dedb5980b1baaef8914b794ba2a3106e\",\"dweb:/ipfs/QmYKxUyMMoak1sEdyQvq6hcEdsKtiAUunj1f51LBM6M8fm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "heroNFT",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IHeroNFT)30"
							},
							{
								"astId": 94,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IKIP7)700"
							},
							{
								"astId": 97,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "item",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IKIP37Full)569"
							},
							{
								"astId": 99,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "coreOwner",
								"offset": 0,
								"slot": "3",
								"type": "t_address_payable"
							},
							{
								"astId": 101,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "depositAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 103,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "miningAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 105,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 107,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "miningPaused",
								"offset": 21,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 109,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "priceOfKlay",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 111,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "priceOfToken",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IHeroNFT)30": {
								"encoding": "inplace",
								"label": "contract IHeroNFT",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP37Full)569": {
								"encoding": "inplace",
								"label": "contract IKIP37Full",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP7)700": {
								"encoding": "inplace",
								"label": "contract IKIP7",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP13.sol": {
				"IKIP13": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP13.sol\":\"IKIP13\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP17/IKIP17.sol": {
				"IKIP17": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP17/IKIP17.sol\":\"IKIP17\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37.sol": {
				"IKIP37": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37.sol\":\"IKIP37\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"IKIP37Full": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37Full.sol\":\"IKIP37Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"IKIP37MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37MetadataURI.sol\":\"IKIP37MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP7/IKIP7.sol": {
				"IKIP7": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"safeTransfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event."
							},
							"safeTransfer(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"safeTransfer(address,uint256)": "423f6cef",
							"safeTransfer(address,uint256,bytes)": "eb795549",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"safeTransfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event.\"},\"safeTransfer(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP7/IKIP7.sol\":\"IKIP7\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP7/IKIP7.sol\":{\"keccak256\":\"0x5682f350cd2e8a78fc918639e421e7e81ca17576106687049595d84ca248346e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537a3ac6311e841c1fdb2b8b9270219bf6e7b2c91271f361c189dc90159a4bff\",\"dweb:/ipfs/QmRa5jJs3S3WjPPL4mWpXE2eGEk97gYR2S8yoDxtU8Tm68\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/SafeMath.sol\":56:1294  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"utils/SafeMath.sol\":56:1294  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 ISZERO 0xC8 PUSH3 0xCEEC4D 0xAE 0xB0 0xFB ISZERO POP 0x2F SWAP8 0xB9 0x1F 0xD6 PUSH19 0xD2F6D61E11AB05EAD2217EE9910764736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:1238:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 ISZERO 0xC8 PUSH3 0xCEEC4D 0xAE 0xB0 0xFB ISZERO POP 0x2F SWAP8 0xB9 0x1F 0xD6 PUSH19 0xD2F6D61E11AB05EAD2217EE9910764736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:1238:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
									".code": [
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"utils/SafeMath.sol\":{\"keccak256\":\"0x884e0eaf6a4a9779317975ad010c62f3a4bd66ed64334977bc7afba8d97fab58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61f2e9002f930fb312e3e6fe19753b1dedb5980b1baaef8914b794ba2a3106e\",\"dweb:/ipfs/QmYKxUyMMoak1sEdyQvq6hcEdsKtiAUunj1f51LBM6M8fm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Hero/interface/IHeroNFT.sol": {
				"ast": {
					"absolutePath": "Hero/interface/IHeroNFT.sol",
					"exportedSymbols": {
						"IHeroNFT": [
							30
						],
						"IKIP13": [
							311
						],
						"IKIP17": [
							427
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"absolutePath": "interface/IKIP17/IKIP17.sol",
							"file": "../../interface/IKIP17/IKIP17.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 31,
							"sourceUnit": 428,
							"src": "56:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IKIP17",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 427,
										"src": "123:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "123:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 30,
							"linearizedBaseContracts": [
								30,
								427,
								311
							],
							"name": "IHeroNFT",
							"nameLocation": "111:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6a627842",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "145:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "158:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "150:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:13:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:0:0"
									},
									"scope": 30,
									"src": "136:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "187:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "200:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "192:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:18:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:0"
									},
									"scope": 30,
									"src": "178:41:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "75f890ab",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setContract",
									"nameLocation": "234:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_heroCore",
												"nameLocation": "254:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "246:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:19:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:0:0"
									},
									"scope": 30,
									"src": "225:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bcbb72c8",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHeroCore",
									"nameLocation": "289:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "326:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:9:0"
									},
									"scope": 30,
									"src": "280:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "295d3ee8",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenIndex",
									"nameLocation": "350:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "389:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:9:0"
									},
									"scope": 30,
									"src": "341:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "101:299:0",
							"usedErrors": []
						}
					],
					"src": "32:369:0"
				},
				"id": 0
			},
			"Hero/interface/ILevelDiagram.sol": {
				"ast": {
					"absolutePath": "Hero/interface/ILevelDiagram.sol",
					"exportedSymbols": {
						"ILevelDiagram": [
							79
						]
					},
					"id": 80,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "ILevelDiagram",
							"nameLocation": "74:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "aa93c0ee",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "104:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "139:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "125:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "125:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "154:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "146:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:36:1"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "222:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "221:9:1"
									},
									"scope": 79,
									"src": "95:136:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicLevelAmount",
									"nameLocation": "246:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "280:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "272:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:15:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "350:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:9:1"
									},
									"scope": 79,
									"src": "237:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicGradeAmount",
									"nameLocation": "374:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "414:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "400:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "400:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:21:1"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "484:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:9:1"
									},
									"scope": 79,
									"src": "365:128:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateItemIndex",
									"nameLocation": "508:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "535:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "527:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:16:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "606:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:1"
									},
									"scope": 79,
									"src": "499:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePower",
									"nameLocation": "630:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "659:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "645:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 63,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "645:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "674:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "666:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:36:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "744:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:9:1"
									},
									"scope": 79,
									"src": "621:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makeRandomNumberForItem",
									"nameLocation": "768:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "800:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "792:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:21:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "876:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:9:1"
									},
									"scope": 79,
									"src": "759:126:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 80,
							"src": "56:831:1",
							"usedErrors": []
						}
					],
					"src": "32:855:1"
				},
				"id": 1
			},
			"Hero/utils/HeroController.sol": {
				"ast": {
					"absolutePath": "Hero/utils/HeroController.sol",
					"exportedSymbols": {
						"HeroController": [
							299
						],
						"IHeroNFT": [
							30
						],
						"IKIP13": [
							311
						],
						"IKIP17": [
							427
						],
						"IKIP37": [
							545
						],
						"IKIP37Full": [
							569
						],
						"IKIP37MetadataURI": [
							582
						],
						"IKIP7": [
							700
						],
						"ILevelDiagram": [
							79
						],
						"SafeMath": [
							845
						]
					},
					"id": 300,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 81,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"absolutePath": "utils/SafeMath.sol",
							"file": "../../utils/SafeMath.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 300,
							"sourceUnit": 846,
							"src": "56:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Hero/interface/IHeroNFT.sol",
							"file": "../interface/IHeroNFT.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 300,
							"sourceUnit": 31,
							"src": "92:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Hero/interface/ILevelDiagram.sol",
							"file": "../interface/ILevelDiagram.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 300,
							"sourceUnit": 80,
							"src": "128:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IKIP7/IKIP7.sol",
							"file": "../../interface/IKIP7/IKIP7.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 300,
							"sourceUnit": 701,
							"src": "170:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37Full.sol",
							"file": "../../interface/IKIP37/IKIP37Full.sol",
							"id": 86,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 300,
							"sourceUnit": 570,
							"src": "212:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 299,
							"linearizedBaseContracts": [
								299
							],
							"name": "HeroController",
							"nameLocation": "270:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 88,
									"libraryName": {
										"id": 87,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 845,
										"src": "297:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "291:21:2"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "heroNFT",
									"nameLocation": "335:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "318:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IHeroNFT_$30",
										"typeString": "contract IHeroNFT"
									},
									"typeName": {
										"id": 90,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 89,
											"name": "IHeroNFT",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 30,
											"src": "318:8:2"
										},
										"referencedDeclaration": 30,
										"src": "318:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IHeroNFT_$30",
											"typeString": "contract IHeroNFT"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "362:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "348:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP7_$700",
										"typeString": "contract IKIP7"
									},
									"typeName": {
										"id": 93,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 92,
											"name": "IKIP7",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 700,
											"src": "348:5:2"
										},
										"referencedDeclaration": 700,
										"src": "348:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP7_$700",
											"typeString": "contract IKIP7"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "item",
									"nameLocation": "392:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "373:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP37Full_$569",
										"typeString": "contract IKIP37Full"
									},
									"typeName": {
										"id": 96,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 95,
											"name": "IKIP37Full",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 569,
											"src": "373:10:2"
										},
										"referencedDeclaration": 569,
										"src": "373:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP37Full_$569",
											"typeString": "contract IKIP37Full"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 99,
									"mutability": "mutable",
									"name": "coreOwner",
									"nameLocation": "427:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "403:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "403:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "depositAddress",
									"nameLocation": "450:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "442:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 100,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "442:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 103,
									"mutability": "mutable",
									"name": "miningAddress",
									"nameLocation": "478:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "470:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 102,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 105,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "511:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "498:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 104,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "498:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 107,
									"mutability": "mutable",
									"name": "miningPaused",
									"nameLocation": "536:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "523:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 106,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "523:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3a1a8080",
									"id": 109,
									"mutability": "mutable",
									"name": "priceOfKlay",
									"nameLocation": "570:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "555:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "555:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b9cbdfb",
									"id": 111,
									"mutability": "mutable",
									"name": "priceOfToken",
									"nameLocation": "602:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "587:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 114,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "645:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "620:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 113,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "656:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "688:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "706:7:2",
															"subExpression": {
																"id": 117,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "707:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506175736564205374617465",
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "715:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e92cd5d6dee16db56ebcf69b310fcfe1ea5001963f42c77d6d92785a76241b",
																"typeString": "literal_string \"Paused State\""
															},
															"value": "Paused State"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e92cd5d6dee16db56ebcf69b310fcfe1ea5001963f42c77d6d92785a76241b",
																"typeString": "literal_string \"Paused State\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "698:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "698:32:2"
											},
											{
												"id": 122,
												"nodeType": "PlaceholderStatement",
												"src": "740:1:2"
											}
										]
									},
									"id": 124,
									"name": "notPaused",
									"nameLocation": "676:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:2:2"
									},
									"src": "667:81:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "775:90:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 127,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "793:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "793:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 129,
																"name": "coreOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "807:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "793:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865726f436f7265204572726f72203a206f6e6c794f776e6572",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "818:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																"typeString": "literal_string \"HeroCore Error : onlyOwner\""
															},
															"value": "HeroCore Error : onlyOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																"typeString": "literal_string \"HeroCore Error : onlyOwner\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "785:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "785:62:2"
											},
											{
												"id": 134,
												"nodeType": "PlaceholderStatement",
												"src": "857:1:2"
											}
										]
									},
									"id": 136,
									"name": "onlyOwner",
									"nameLocation": "763:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "772:2:2"
									},
									"src": "754:111:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "885:100:2",
										"statements": [
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "895:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "904:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "895:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "895:13:2"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "miningPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "918:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "933:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "918:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "918:19:2"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 147,
														"name": "coreOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 150,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "967:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "967:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "959:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 148,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "959:8:2",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "959:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "947:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "947:31:2"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:2:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:2"
									},
									"scope": 299,
									"src": "871:114:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1226:287:2",
										"statements": [
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 175,
														"name": "priceOfKlay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1236:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 178,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "1260:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 176,
																"name": "_klay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "1250:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 744,
															"src": "1250:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1250:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1236:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1236:33:2"
											},
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "priceOfToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1279:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 185,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "1310:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 183,
																"name": "_tokenPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "1294:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 744,
															"src": "1294:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1294:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1279:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1279:40:2"
											},
											{
												"expression": {
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "heroNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "1330:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHeroNFT_$30",
															"typeString": "contract IHeroNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 191,
																"name": "_heroNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "1349:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 190,
															"name": "IHeroNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1340:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IHeroNFT_$30_$",
																"typeString": "type(contract IHeroNFT)"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1340:18:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHeroNFT_$30",
															"typeString": "contract IHeroNFT"
														}
													},
													"src": "1330:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "1330:28:2"
											},
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1368:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP7_$700",
															"typeString": "contract IKIP7"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 197,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "1382:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 196,
															"name": "IKIP7",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "1376:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP7_$700_$",
																"typeString": "type(contract IKIP7)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1376:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP7_$700",
															"typeString": "contract IKIP7"
														}
													},
													"src": "1368:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$700",
														"typeString": "contract IKIP7"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1368:21:2"
											},
											{
												"expression": {
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1399:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$569",
															"typeString": "contract IKIP37Full"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 203,
																"name": "_item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "1417:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 202,
															"name": "IKIP37Full",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "1406:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP37Full_$569_$",
																"typeString": "type(contract IKIP37Full)"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1406:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$569",
															"typeString": "contract IKIP37Full"
														}
													},
													"src": "1399:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$569",
														"typeString": "contract IKIP37Full"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "1399:24:2"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 207,
														"name": "depositAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1434:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "_depositAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "1451:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1434:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1434:32:2"
											},
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 211,
														"name": "miningAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1476:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 212,
														"name": "_miningAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1492:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1476:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "1476:30:2"
											}
										]
									},
									"functionSelector": "b33f9527",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 173,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 172,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 136,
												"src": "1216:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1216:9:2"
										}
									],
									"name": "initialize",
									"nameLocation": "1000:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "_heroNFT",
												"nameLocation": "1028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1054:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1046:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "_item",
												"nameLocation": "1078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "_depositAddress",
												"nameLocation": "1101:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1093:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "_miningAddress",
												"nameLocation": "1134:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1126:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "_klay",
												"nameLocation": "1166:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1158:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "1189:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1181:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:196:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:0:2"
									},
									"scope": 299,
									"src": "991:522:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1562:33:2",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1572:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1581:7:2",
														"subExpression": {
															"id": 222,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1582:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1572:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1572:16:2"
											}
										]
									},
									"functionSelector": "9eb4eae5",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 218,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 136,
												"src": "1552:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1552:9:2"
										}
									],
									"name": "changePaused",
									"nameLocation": "1528:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1540:2:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1562:0:2"
									},
									"scope": 299,
									"src": "1519:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1650:45:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "miningPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1660:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1675:13:2",
														"subExpression": {
															"id": 233,
															"name": "miningPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1676:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1660:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1660:28:2"
											}
										]
									},
									"functionSelector": "ee72b8cc",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 136,
												"src": "1640:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1640:9:2"
										}
									],
									"name": "changeMiningPaused",
									"nameLocation": "1610:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1650:0:2"
									},
									"scope": 299,
									"src": "1601:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1791:33:2",
										"statements": [
											{
												"expression": {
													"id": 243,
													"name": "coreOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 99,
													"src": "1808:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 242,
												"id": 244,
												"nodeType": "Return",
												"src": "1801:16:2"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1742:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:2:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:17:2"
									},
									"scope": 299,
									"src": "1733:91:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "1878:30:2",
										"statements": [
											{
												"expression": {
													"id": 251,
													"name": "paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 105,
													"src": "1895:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "1888:13:2"
											}
										]
									},
									"functionSelector": "6805b84b",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPaused",
									"nameLocation": "1839:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1848:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1872:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:6:2"
									},
									"scope": 299,
									"src": "1830:78:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1968:36:2",
										"statements": [
											{
												"expression": {
													"id": 259,
													"name": "miningPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "1985:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 258,
												"id": 260,
												"nodeType": "Return",
												"src": "1978:19:2"
											}
										]
									},
									"functionSelector": "28919df6",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMiningPaused",
									"nameLocation": "1923:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1938:2:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1962:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1962:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1961:6:2"
									},
									"scope": 299,
									"src": "1914:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "2062:28:2",
										"statements": [
											{
												"expression": {
													"id": 268,
													"name": "item",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "2079:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$569",
														"typeString": "contract IKIP37Full"
													}
												},
												"functionReturnParameters": 267,
												"id": 269,
												"nodeType": "Return",
												"src": "2072:11:2"
											}
										]
									},
									"functionSelector": "c412eaba",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getItem",
									"nameLocation": "2019:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:2:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2050:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKIP37Full_$569",
													"typeString": "contract IKIP37Full"
												},
												"typeName": {
													"id": 265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 264,
														"name": "IKIP37Full",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 569,
														"src": "2050:10:2"
													},
													"referencedDeclaration": 569,
													"src": "2050:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$569",
														"typeString": "contract IKIP37Full"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:12:2"
									},
									"scope": 299,
									"src": "2010:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "2144:29:2",
										"statements": [
											{
												"expression": {
													"id": 277,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "2161:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$700",
														"typeString": "contract IKIP7"
													}
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "2154:12:2"
											}
										]
									},
									"functionSelector": "21df0da7",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nameLocation": "2105:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:2:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2137:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKIP7_$700",
													"typeString": "contract IKIP7"
												},
												"typeName": {
													"id": 274,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 273,
														"name": "IKIP7",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 700,
														"src": "2137:5:2"
													},
													"referencedDeclaration": 700,
													"src": "2137:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$700",
														"typeString": "contract IKIP7"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:7:2"
									},
									"scope": 299,
									"src": "2096:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "2232:31:2",
										"statements": [
											{
												"expression": {
													"id": 286,
													"name": "heroNFT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2249:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"functionReturnParameters": 285,
												"id": 287,
												"nodeType": "Return",
												"src": "2242:14:2"
											}
										]
									},
									"functionSelector": "7cac00ee",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHeroNFT",
									"nameLocation": "2188:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2198:2:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2222:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IHeroNFT_$30",
													"typeString": "contract IHeroNFT"
												},
												"typeName": {
													"id": 283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 282,
														"name": "IHeroNFT",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "2222:8:2"
													},
													"referencedDeclaration": 30,
													"src": "2222:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:10:2"
									},
									"scope": 299,
									"src": "2179:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2325:39:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 294,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2342:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2342:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 293,
												"id": 296,
												"nodeType": "Return",
												"src": "2335:22:2"
											}
										]
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_currentTime",
									"nameLocation": "2278:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:2:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2315:9:2"
									},
									"scope": 299,
									"src": "2269:95:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 300,
							"src": "261:2105:2",
							"usedErrors": []
						}
					],
					"src": "32:2335:2"
				},
				"id": 2
			},
			"interface/IKIP13.sol": {
				"ast": {
					"absolutePath": "interface/IKIP13.sol",
					"exportedSymbols": {
						"IKIP13": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 301,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "258:22:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "282:142:3",
								"text": " @dev Interface of the KIP13 standard as defined in the KIP.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard"
							},
							"fullyImplemented": false,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "IKIP13",
							"nameLocation": "435:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "448:387:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n to learn more about how these ids are created.\n Requirements:\n - implementation of this function call must use less than 30 000 gas"
									},
									"functionSelector": "01ffc9a7",
									"id": 310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "849:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "874:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "867:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 304,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "867:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:20:3"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "910:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "910:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:6:3"
									},
									"scope": 311,
									"src": "840:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 312,
							"src": "425:493:3",
							"usedErrors": []
						}
					],
					"src": "258:661:3"
				},
				"id": 3
			},
			"interface/IKIP17/IKIP17.sol": {
				"ast": {
					"absolutePath": "interface/IKIP17/IKIP17.sol",
					"exportedSymbols": {
						"IKIP13": [
							311
						],
						"IKIP17": [
							427
						]
					},
					"id": 428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "243:22:4"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 428,
							"sourceUnit": 312,
							"src": "267:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 316,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "380:6:4"
									},
									"id": 317,
									"nodeType": "InheritanceSpecifier",
									"src": "380:6:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 315,
								"nodeType": "StructuredDocumentation",
								"src": "292:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 427,
							"linearizedBaseContracts": [
								427,
								311
							],
							"name": "IKIP17",
							"nameLocation": "370:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "393:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 326,
									"name": "Transfer",
									"nameLocation": "492:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "526:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "510:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "540:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "584:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "568:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:97:4"
									},
									"src": "486:112:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "604:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 335,
									"name": "Approval",
									"nameLocation": "709:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "743:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "727:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "774:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "758:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "808:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "792:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:104:4"
									},
									"src": "703:119:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "828:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 344,
									"name": "ApprovalForAll",
									"nameLocation": "956:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "996:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "980:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1027:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1011:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1050:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1045:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:94:4"
									},
									"src": "950:115:4"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "1071:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1161:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:15:4"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1217:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1209:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:17:4"
									},
									"scope": 427,
									"src": "1152:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "1232:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1377:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1393:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1385:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:17:4"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1433:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1425:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:15:4"
									},
									"scope": 427,
									"src": "1368:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1446:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2016:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2050:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2042:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2072:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2064:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2124:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2109:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2109:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:102:4"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2143:0:4"
									},
									"scope": 427,
									"src": "2007:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2150:690:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2854:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2888:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2880:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2910:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2902:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2930:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2922:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:73:4"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2952:0:4"
									},
									"scope": 427,
									"src": "2845:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "2959:504:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3477:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3507:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3499:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3529:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3521:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3549:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3541:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:73:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3571:0:4"
									},
									"scope": 427,
									"src": "3468:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "3578:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4044:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4060:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4052:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4072:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4064:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4064:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:29:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:0:4"
									},
									"scope": 427,
									"src": "4035:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "4096:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4419:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4445:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "4437:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4460:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "4455:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4455:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:34:4"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4479:0:4"
									},
									"scope": 427,
									"src": "4410:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "4486:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4639:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4659:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4651:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4651:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:17:4"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4723:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "4715:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4714:18:4"
									},
									"scope": 427,
									"src": "4630:103:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "4739:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4891:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4916:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4908:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4931:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4923:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4907:33:4"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4988:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4988:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4987:6:4"
									},
									"scope": 427,
									"src": "4882:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 428,
							"src": "360:4636:4",
							"usedErrors": []
						}
					],
					"src": "243:4754:4"
				},
				"id": 4
			},
			"interface/IKIP37/IKIP37.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37.sol",
					"exportedSymbols": {
						"IKIP13": [
							311
						],
						"IKIP37": [
							545
						]
					},
					"id": 546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 429,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:5"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 430,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 546,
							"sourceUnit": 312,
							"src": "56:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 431,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "101:6:5"
									},
									"id": 432,
									"nodeType": "InheritanceSpecifier",
									"src": "101:6:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 545,
							"linearizedBaseContracts": [
								545,
								311
							],
							"name": "IKIP37",
							"nameLocation": "91:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 444,
									"name": "TransferSingle",
									"nameLocation": "120:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "160:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "144:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "195:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "179:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "226:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "210:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"indexed": false,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "247:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "239:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "268:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "260:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:146:5"
									},
									"src": "114:167:5"
								},
								{
									"anonymous": false,
									"id": 458,
									"name": "TransferBatch",
									"nameLocation": "292:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "331:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "315:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "366:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "350:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "397:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "381:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "410:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 451,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "410:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 452,
													"nodeType": "ArrayTypeName",
													"src": "410:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "444:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "434:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 454,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "434:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 455,
													"nodeType": "ArrayTypeName",
													"src": "434:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:152:5"
									},
									"src": "286:172:5"
								},
								{
									"anonymous": false,
									"id": 466,
									"name": "ApprovalForAll",
									"nameLocation": "469:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "509:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "493:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "541:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "525:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "565:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "560:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:97:5"
									},
									"src": "463:118:5"
								},
								{
									"anonymous": false,
									"id": 472,
									"name": "URI",
									"nameLocation": "592:3:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "603:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "596:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "627:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "611:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:36:5"
									},
									"src": "586:46:5"
								},
								{
									"functionSelector": "f242432a",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "647:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "704:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "696:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "725:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "717:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "746:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "738:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "777:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "762:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:125:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:0:5"
									},
									"scope": 545,
									"src": "638:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2eb2c2d6",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "813:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "852:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "844:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "875:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "867:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "907:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "888:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "888:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 491,
													"nodeType": "ArrayTypeName",
													"src": "888:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "921:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 493,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "921:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 494,
													"nodeType": "ArrayTypeName",
													"src": "921:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "972:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "957:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:149:5"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:5"
									},
									"scope": 545,
									"src": "804:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00fdd58e",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1026:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1018:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1042:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1034:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:29:5"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1094:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:5"
									},
									"scope": 545,
									"src": "999:104:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e1273f4",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1118:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "_owners",
												"nameLocation": "1152:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1133:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 510,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1133:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 511,
													"nodeType": "ArrayTypeName",
													"src": "1133:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "1180:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1161:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 513,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1161:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 514,
													"nodeType": "ArrayTypeName",
													"src": "1161:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:53:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1233:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 517,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1233:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 518,
													"nodeType": "ArrayTypeName",
													"src": "1233:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:18:5"
									},
									"scope": 545,
									"src": "1109:142:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1266:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1292:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1284:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1308:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1303:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1303:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:35:5"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:5"
									},
									"scope": 545,
									"src": "1257:71:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1343:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1368:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1360:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1384:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1376:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:35:5"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1442:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:6:5"
									},
									"scope": 545,
									"src": "1334:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bd85b039",
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1463:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1483:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1475:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:13:5"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 545,
									"src": "1454:66:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 546,
							"src": "81:1441:5",
							"usedErrors": []
						}
					],
					"src": "32:1491:5"
				},
				"id": 5
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37Full.sol",
					"exportedSymbols": {
						"IKIP13": [
							311
						],
						"IKIP37": [
							545
						],
						"IKIP37Full": [
							569
						],
						"IKIP37MetadataURI": [
							582
						]
					},
					"id": 570,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 547,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:6"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
							"file": "./IKIP37MetadataURI.sol",
							"id": 548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 570,
							"sourceUnit": 583,
							"src": "56:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 549,
										"name": "IKIP37MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 582,
										"src": "115:17:6"
									},
									"id": 550,
									"nodeType": "InheritanceSpecifier",
									"src": "115:17:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 569,
							"linearizedBaseContracts": [
								569,
								582,
								545,
								311
							],
							"name": "IKIP37Full",
							"nameLocation": "101:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "156e29f6",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "148:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "170:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "162:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "193:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "185:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "219:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "211:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:80:6"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:6"
									},
									"scope": 569,
									"src": "139:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f5298aca",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "257:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "279:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "271:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "302:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "294:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "328:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "320:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:80:6"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:6"
									},
									"scope": 569,
									"src": "248:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 570,
							"src": "91:262:6",
							"usedErrors": []
						}
					],
					"src": "32:322:6"
				},
				"id": 6
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
					"exportedSymbols": {
						"IKIP13": [
							311
						],
						"IKIP37": [
							545
						],
						"IKIP37MetadataURI": [
							582
						]
					},
					"id": 583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 571,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:7"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37.sol",
							"file": "./IKIP37.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 583,
							"sourceUnit": 546,
							"src": "56:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 573,
										"name": "IKIP37",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 545,
										"src": "111:6:7"
									},
									"id": 574,
									"nodeType": "InheritanceSpecifier",
									"src": "111:6:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 582,
							"linearizedBaseContracts": [
								582,
								545,
								311
							],
							"name": "IKIP37MetadataURI",
							"nameLocation": "90:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0e89341c",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "133:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "145:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "137:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:12:7"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "172:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 578,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "172:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:15:7"
									},
									"scope": 582,
									"src": "124:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 583,
							"src": "80:109:7",
							"usedErrors": []
						}
					],
					"src": "32:158:7"
				},
				"id": 7
			},
			"interface/IKIP7/IKIP7.sol": {
				"ast": {
					"absolutePath": "interface/IKIP7/IKIP7.sol",
					"exportedSymbols": {
						"IKIP7": [
							700
						]
					},
					"id": 701,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 584,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 585,
								"nodeType": "StructuredDocumentation",
								"src": "56:125:8",
								"text": " @dev Interface of the KIP7 standard as defined in the KIP.\n See http://kips.klaytn.com/KIPs/kip-7-fungible_token"
							},
							"fullyImplemented": false,
							"id": 700,
							"linearizedBaseContracts": [
								700
							],
							"name": "IKIP7",
							"nameLocation": "192:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "204:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 594,
									"name": "Transfer",
									"nameLocation": "373:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "398:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "382:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "420:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "404:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "432:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "424:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:57:8"
									},
									"src": "367:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "445:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 603,
									"name": "Approval",
									"nameLocation": "604:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "638:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "622:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "669:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "653:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "694:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "686:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:93:8"
									},
									"src": "598:108:8"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "712:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "792:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:2:8"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "829:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:9:8"
									},
									"scope": 700,
									"src": "783:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "844:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "930:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "948:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "940:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:17:8"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "980:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:9:8"
									},
									"scope": 700,
									"src": "921:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "995:202:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1211:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1228:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1220:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1240:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1232:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:28:8"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1266:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:8"
									},
									"scope": 700,
									"src": "1202:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "1278:285:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1577:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1595:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1587:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1610:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1602:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:32:8"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "1666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:9:8"
									},
									"scope": 700,
									"src": "1568:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "1681:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2337:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2353:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2345:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2370:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2362:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:33:8"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2396:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2396:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:6:8"
									},
									"scope": 700,
									"src": "2328:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "2408:287:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2709:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2739:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2731:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2761:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2753:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2781:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2773:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2721:72:8"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2812:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2812:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2811:6:8"
									},
									"scope": 700,
									"src": "2700:118:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2824:201:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "eb795549",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3039:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3069:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "3061:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3096:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "3088:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3125:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "3112:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3112:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:84:8"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:8"
									},
									"scope": 700,
									"src": "3030:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "3151:128:8",
										"text": " @dev  Moves `amount` tokens from the caller's account to `recipient`.\n Emits a {Transfer} event."
									},
									"functionSelector": "423f6cef",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3293:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3314:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "3306:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3306:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3333:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "3325:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3325:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3305:35:8"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:8"
									},
									"scope": 700,
									"src": "3284:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "3356:221:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3591:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3625:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3617:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3649:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3641:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3676:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3668:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3705:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3692:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3607:108:8"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3724:0:8"
									},
									"scope": 700,
									"src": "3582:143:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "3731:147:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3892:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3926:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "3918:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3950:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "3942:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3977:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "3969:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:81:8"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3998:0:8"
									},
									"scope": 700,
									"src": "3883:116:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 701,
							"src": "182:3819:8",
							"usedErrors": []
						}
					],
					"src": "32:3970:8"
				},
				"id": 8
			},
			"utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							845
						]
					},
					"id": 846,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 702,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 845,
							"linearizedBaseContracts": [
								845
							],
							"name": "SafeMath",
							"nameLocation": "64:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "146:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 711,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "163:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 712,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "167:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "163:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 710,
												"id": 714,
												"nodeType": "Return",
												"src": "156:12:9"
											}
										]
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "88:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "100:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "92:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "92:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "111:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "103:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "91:22:9"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "137:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:9"
									},
									"scope": 845,
									"src": "79:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "248:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 725,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "265:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 726,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "269:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "265:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 724,
												"id": 728,
												"nodeType": "Return",
												"src": "258:12:9"
											}
										]
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "190:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "202:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "194:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "213:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "205:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:22:9"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "239:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:9:9"
									},
									"scope": 845,
									"src": "181:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "350:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "367:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 740,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "371:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "367:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 738,
												"id": 742,
												"nodeType": "Return",
												"src": "360:12:9"
											}
										]
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "292:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "304:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "296:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "315:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "307:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:22:9"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "341:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:9:9"
									},
									"scope": 845,
									"src": "283:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "452:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 753,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "469:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 754,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "473:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "469:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 752,
												"id": 756,
												"nodeType": "Return",
												"src": "462:12:9"
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "394:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "406:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "398:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "417:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "409:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:22:9"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "443:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:9:9"
									},
									"scope": 845,
									"src": "385:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "554:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "571:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 768,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "575:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "571:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 766,
												"id": 770,
												"nodeType": "Return",
												"src": "564:12:9"
											}
										]
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "496:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "508:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "500:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "519:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "511:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:22:9"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "545:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:9:9"
									},
									"scope": 845,
									"src": "487:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "714:106:9",
										"statements": [
											{
												"id": 794,
												"nodeType": "UncheckedBlock",
												"src": "724:90:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 784,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "756:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 785,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "761:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "756:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 787,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "764:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 783,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "748:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "748:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "748:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "798:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 791,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "802:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "798:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 782,
														"id": 793,
														"nodeType": "Return",
														"src": "791:12:9"
													}
												]
											}
										]
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "598:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "619:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "611:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "638:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "630:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "663:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "649:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "649:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:80:9"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "705:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:9:9"
									},
									"scope": 845,
									"src": "589:231:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "951:105:9",
										"statements": [
											{
												"id": 818,
												"nodeType": "UncheckedBlock",
												"src": "961:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 808,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "993:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "997:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "993:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 811,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "1000:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 807,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "985:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "985:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 813,
														"nodeType": "ExpressionStatement",
														"src": "985:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "1034:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 815,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "1038:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1034:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 806,
														"id": 817,
														"nodeType": "Return",
														"src": "1027:12:9"
													}
												]
											}
										]
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "835:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "856:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "848:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "875:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "867:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "900:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "886:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "886:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:80:9"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "942:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:9:9"
									},
									"scope": 845,
									"src": "826:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "1187:105:9",
										"statements": [
											{
												"id": 842,
												"nodeType": "UncheckedBlock",
												"src": "1197:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 832,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "1229:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1233:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1229:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 835,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "1236:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 831,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1221:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1221:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 837,
														"nodeType": "ExpressionStatement",
														"src": "1221:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 838,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "1270:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 839,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "1274:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1270:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 830,
														"id": 841,
														"nodeType": "Return",
														"src": "1263:12:9"
													}
												]
											}
										]
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1071:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1092:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1084:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1111:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1103:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1136:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1122:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 825,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1122:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:80:9"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1178:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:9:9"
									},
									"scope": 845,
									"src": "1062:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 846,
							"src": "56:1238:9",
							"usedErrors": []
						}
					],
					"src": "32:1263:9"
				},
				"id": 9
			}
		}
	}
}