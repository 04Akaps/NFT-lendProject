{
	"id": "0c7590a4a38aadded200523da55524fd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Hero/utils/LevelDiagram.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../interface/IKIP37/IKIP37Full.sol\";\nimport \"../interface/ILevelDiagram.sol\";\n\ncontract LevelDiagram  {\n    bytes32 private constant MYTHOLOGY = keccak256(\"Mythology\");\n    bytes32 private constant LEGENDARY = keccak256(\"Legendary\");\n    bytes32 private constant EPIC = keccak256(\"Epic\");\n    bytes32 private constant ADMINISTRATOR = keccak256(\"Administrator\");\n    bytes32 private constant NORMAL = keccak256(\"Normal\");\n\n    IKIP37Full private item;\n\n    constructor(address _item) {\n        item = IKIP37Full(_item);\n    }\n\n    function calculateTokenAmount(string memory grade, uint256 level)\n        public\n        pure\n        returns (uint256)\n    {\n        uint256 gradeAmount = calculateBasicGradeAmount(grade);\n        uint256 levelAmount = calculateBasicLevelAmount(level);\n\n        return ((gradeAmount * levelAmount) / 10) * 1e18;\n    }\n\n    function calculateBasicLevelAmount(uint256 level)\n        internal\n        pure\n        returns (uint256)\n    {\n        return (\n            level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4\n                ? 80\n                : 0\n        );\n    }\n\n    function calculateBasicGradeAmount(string memory grade)\n        internal\n        pure\n        returns (uint256)\n    {\n        bytes32 gradeCheck = keccak256(bytes(grade));\n\n        return (\n            gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY\n                ? 450\n                : gradeCheck == EPIC\n                ? 300\n                : gradeCheck == ADMINISTRATOR\n                ? 225\n                : gradeCheck == NORMAL\n                ? 200\n                : 0\n        );\n    }\n\n    function calculateItemIndex(uint256 _power)\n        internal\n        view\n        returns (uint256)\n    {\n        for (uint256 i = 1; i <= 5; i++) {\n            uint256 randomNumber = makeRandomNumberForItem(i);\n\n            if (_power >= randomNumber) {\n                _power -= randomNumber;\n            } else {\n                return i;\n            }\n        }\n\n        return 0;\n    }\n\n    function calculatePower(string memory grade, uint256 level)\n        internal\n        view\n        returns (uint256)\n    {\n        bytes32 gradeCheck = keccak256(bytes(grade));\n\n        uint256 basicPower = (\n            gradeCheck == MYTHOLOGY ? 450 : gradeCheck == LEGENDARY\n                ? 300\n                : gradeCheck == EPIC\n                ? 200\n                : gradeCheck == ADMINISTRATOR\n                ? 150\n                : gradeCheck == NORMAL\n                ? 100\n                : 0\n        );\n\n        uint256 levelCheck = (\n            level == 1 ? 10 : level == 2 ? 15 : level == 3 ? 25 : level == 4\n                ? 40\n                : level == 5\n                ? 70\n                : 0\n        );\n\n        uint256 itemPower = 0;\n\n        for (uint256 i = 1; i <= 5; i++) {\n            uint256 balanceOf = item.balanceOf(msg.sender, i);\n            uint256 basicItemPower = i + 1;\n            itemPower = itemPower + (basicItemPower * balanceOf);\n        }\n\n        return ((basicPower + itemPower) * levelCheck) / 10;\n    }\n\n    function makeRandomNumberForItem(uint256 _tokenIndex)\n        internal\n        view\n        returns (uint256)\n    {\n        return\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        block.timestamp,\n                        block.difficulty,\n                        _tokenIndex\n                    )\n                )\n            ) % 1000;\n    }\n}\n"
			},
			"Hero/interface/ILevelDiagram.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\ninterface ILevelDiagram {\n     function calculateTokenAmount(string memory grade, uint256 level)\n        external\n        pure\n        returns (uint256);\n\n    function calculateBasicLevelAmount(uint256 level)\n        external\n        pure\n        returns (uint256);\n\n    function calculateBasicGradeAmount(string memory grade)\n        external\n        pure\n        returns (uint256);\n\n    function calculateItemIndex(uint256 _power)\n        external\n        view\n        returns (uint256);\n\n    function calculatePower(string memory grade, uint256 level)\n        external\n        view\n        returns (uint256);\n\n    function makeRandomNumberForItem(uint256 _tokenIndex)\n        external\n        view\n        returns (uint256);\n}"
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37MetadataURI.sol\";\n\ninterface IKIP37Full is IKIP37MetadataURI {\n    function mint(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n\n    function burn(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n}\n"
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37.sol\";\n\ninterface IKIP37MetadataURI is IKIP37 {\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"interface/IKIP37/IKIP37.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\ninterface IKIP37 is IKIP13 {\n    event TransferSingle(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256 _id,\n        uint256 _value\n    );\n    event TransferBatch(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256[] _ids,\n        uint256[] _values\n    );\n    event ApprovalForAll(\n        address indexed _owner,\n        address indexed _operator,\n        bool _approved\n    );\n    event URI(string _value, uint256 indexed _id);\n\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _id,\n        uint256 _value,\n        bytes calldata _data\n    ) external;\n\n    function safeBatchTransferFrom(\n        address _from,\n        address _to,\n        uint256[] calldata _ids,\n        uint256[] calldata _values,\n        bytes calldata _data\n    ) external;\n\n    function balanceOf(address _owner, uint256 _id)\n        external\n        view\n        returns (uint256);\n\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    function isApprovedForAll(address _owner, address _operator)\n        external\n        view\n        returns (bool);\n\n    function totalSupply(uint256 _id) external view returns (uint256);\n}\n"
			},
			"interface/IKIP13.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP13 standard as defined in the KIP.\n *\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\n */\ninterface IKIP13 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`.\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n     * to learn more about how these ids are created.\n     *\n     * Requirements:\n     *\n     * - implementation of this function call must use less than 30 000 gas\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Hero/interface/ILevelDiagram.sol": {
				"ILevelDiagram": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								}
							],
							"name": "calculateBasicGradeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculateBasicLevelAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "calculateItemIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculatePower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenIndex",
									"type": "uint256"
								}
							],
							"name": "makeRandomNumberForItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateBasicGradeAmount(string)": "8cecd76d",
							"calculateBasicLevelAmount(uint256)": "5c9fd3f5",
							"calculateItemIndex(uint256)": "b79d5db4",
							"calculatePower(string,uint256)": "8e1fcdd1",
							"calculateTokenAmount(string,uint256)": "aa93c0ee",
							"makeRandomNumberForItem(uint256)": "c21a0884"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"}],\"name\":\"calculateBasicGradeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculateBasicLevelAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"calculateItemIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculatePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenIndex\",\"type\":\"uint256\"}],\"name\":\"makeRandomNumberForItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/interface/ILevelDiagram.sol\":\"ILevelDiagram\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0x43b42e52b72aad116ed2144709eeef3cc11c4d7a01b29b0bb67d81fde93b0c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://001516dd4aabe95f201cc56585ed32cba5b586423752a66b6697d2dee110c2cf\",\"dweb:/ipfs/QmfAcw3p8x9kzEUoZ2sWLRkQC1W5mCGnVMFNYDa7nxW6uY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/utils/LevelDiagram.sol": {
				"LevelDiagram": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_item",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Hero/utils/LevelDiagram.sol\":146:3561  contract LevelDiagram  {... */\n  mstore(0x40, 0x80)\n    /* \"Hero/utils/LevelDiagram.sol\":523:591  constructor(address _item) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Hero/utils/LevelDiagram.sol\":578:583  _item */\n  dup1\n    /* \"Hero/utils/LevelDiagram.sol\":560:564  item */\n  0x00\n  dup1\n    /* \"Hero/utils/LevelDiagram.sol\":560:584  item = IKIP37Full(_item) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/LevelDiagram.sol\":523:591  constructor(address _item) {... */\n  pop\n    /* \"Hero/utils/LevelDiagram.sol\":146:3561  contract LevelDiagram  {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n    /* \"#utility.yul\":483:490   */\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n    /* \"#utility.yul\":585:592   */\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"Hero/utils/LevelDiagram.sol\":146:3561  contract LevelDiagram  {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Hero/utils/LevelDiagram.sol\":146:3561  contract LevelDiagram  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaa93c0ee\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Hero/utils/LevelDiagram.sol\":597:915  function calculateTokenAmount(string memory grade, uint256 level)... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"Hero/utils/LevelDiagram.sol\":708:715  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":731:750  uint256 gradeAmount */\n      dup1\n        /* \"Hero/utils/LevelDiagram.sol\":753:785  calculateBasicGradeAmount(grade) */\n      tag_11\n        /* \"Hero/utils/LevelDiagram.sol\":779:784  grade */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":753:778  calculateBasicGradeAmount */\n      tag_12\n        /* \"Hero/utils/LevelDiagram.sol\":753:785  calculateBasicGradeAmount(grade) */\n      jump\t// in\n    tag_11:\n        /* \"Hero/utils/LevelDiagram.sol\":731:785  uint256 gradeAmount = calculateBasicGradeAmount(grade) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":795:814  uint256 levelAmount */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":817:849  calculateBasicLevelAmount(level) */\n      tag_13\n        /* \"Hero/utils/LevelDiagram.sol\":843:848  level */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":817:842  calculateBasicLevelAmount */\n      tag_14\n        /* \"Hero/utils/LevelDiagram.sol\":817:849  calculateBasicLevelAmount(level) */\n      jump\t// in\n    tag_13:\n        /* \"Hero/utils/LevelDiagram.sol\":795:849  uint256 levelAmount = calculateBasicLevelAmount(level) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":904:908  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/LevelDiagram.sol\":898:900  10 */\n      0x0a\n        /* \"Hero/utils/LevelDiagram.sol\":883:894  levelAmount */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":869:880  gradeAmount */\n      dup5\n        /* \"Hero/utils/LevelDiagram.sol\":869:894  gradeAmount * levelAmount */\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"Hero/utils/LevelDiagram.sol\":868:900  (gradeAmount * levelAmount) / 10 */\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"Hero/utils/LevelDiagram.sol\":867:908  ((gradeAmount * levelAmount) / 10) * 1e18 */\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n        /* \"Hero/utils/LevelDiagram.sol\":860:908  return ((gradeAmount * levelAmount) / 10) * 1e18 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":597:915  function calculateTokenAmount(string memory grade, uint256 level)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Hero/utils/LevelDiagram.sol\":1190:1694  function calculateBasicGradeAmount(string memory grade)... */\n    tag_12:\n        /* \"Hero/utils/LevelDiagram.sol\":1293:1300  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1316:1334  bytes32 gradeCheck */\n      dup1\n        /* \"Hero/utils/LevelDiagram.sol\":1353:1358  grade */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1337:1360  keccak256(bytes(grade)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Hero/utils/LevelDiagram.sol\":1316:1360  bytes32 gradeCheck = keccak256(bytes(grade)) */\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":212:234  keccak256(\"Mythology\") */\n      0x8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f3\n        /* \"Hero/utils/LevelDiagram.sol\":1392:1402  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1392:1415  gradeCheck == MYTHOLOGY */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1392:1677  gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY... */\n      tag_21\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":277:299  keccak256(\"Legendary\") */\n      0x181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310\n        /* \"Hero/utils/LevelDiagram.sol\":1424:1434  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1424:1447  gradeCheck == LEGENDARY */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1424:1677  gradeCheck == LEGENDARY... */\n      tag_22\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":337:354  keccak256(\"Epic\") */\n      0x6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17\n        /* \"Hero/utils/LevelDiagram.sol\":1488:1498  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1488:1506  gradeCheck == EPIC */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1488:1677  gradeCheck == EPIC... */\n      tag_23\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":401:427  keccak256(\"Administrator\") */\n      0xb2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb\n        /* \"Hero/utils/LevelDiagram.sol\":1547:1557  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1547:1574  gradeCheck == ADMINISTRATOR */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1547:1677  gradeCheck == ADMINISTRATOR... */\n      tag_24\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":467:486  keccak256(\"Normal\") */\n      0xb5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1625  gradeCheck */\n      dup2\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1635  gradeCheck == NORMAL */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1677  gradeCheck == NORMAL... */\n      tag_25\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1676:1677  0 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1677  gradeCheck == NORMAL... */\n      jump(tag_26)\n    tag_25:\n        /* \"Hero/utils/LevelDiagram.sol\":1654:1657  200 */\n      0xc8\n        /* \"Hero/utils/LevelDiagram.sol\":1615:1677  gradeCheck == NORMAL... */\n    tag_26:\n        /* \"Hero/utils/LevelDiagram.sol\":1547:1677  gradeCheck == ADMINISTRATOR... */\n      jump(tag_27)\n    tag_24:\n        /* \"Hero/utils/LevelDiagram.sol\":1593:1596  225 */\n      0xe1\n        /* \"Hero/utils/LevelDiagram.sol\":1547:1677  gradeCheck == ADMINISTRATOR... */\n    tag_27:\n        /* \"Hero/utils/LevelDiagram.sol\":1488:1677  gradeCheck == EPIC... */\n      0xff\n      and\n      jump(tag_28)\n    tag_23:\n        /* \"Hero/utils/LevelDiagram.sol\":1525:1528  300 */\n      0x012c\n        /* \"Hero/utils/LevelDiagram.sol\":1488:1677  gradeCheck == EPIC... */\n    tag_28:\n        /* \"Hero/utils/LevelDiagram.sol\":1424:1677  gradeCheck == LEGENDARY... */\n      jump(tag_29)\n    tag_22:\n        /* \"Hero/utils/LevelDiagram.sol\":1466:1469  450 */\n      0x01c2\n        /* \"Hero/utils/LevelDiagram.sol\":1424:1677  gradeCheck == LEGENDARY... */\n    tag_29:\n        /* \"Hero/utils/LevelDiagram.sol\":1392:1677  gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY... */\n      jump(tag_30)\n    tag_21:\n        /* \"Hero/utils/LevelDiagram.sol\":1418:1421  675 */\n      0x02a3\n        /* \"Hero/utils/LevelDiagram.sol\":1392:1677  gradeCheck == MYTHOLOGY ? 675 : gradeCheck == LEGENDARY... */\n    tag_30:\n        /* \"Hero/utils/LevelDiagram.sol\":1371:1687  return (... */\n      0xffff\n      and\n      swap2\n      pop\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":1190:1694  function calculateBasicGradeAmount(string memory grade)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Hero/utils/LevelDiagram.sol\":921:1184  function calculateBasicLevelAmount(uint256 level)... */\n    tag_14:\n        /* \"Hero/utils/LevelDiagram.sol\":1018:1025  uint256 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1071:1072  1 */\n      0x01\n        /* \"Hero/utils/LevelDiagram.sol\":1062:1067  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1062:1072  level == 1 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1062:1167  level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      tag_32\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1089:1090  2 */\n      0x02\n        /* \"Hero/utils/LevelDiagram.sol\":1080:1085  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1080:1090  level == 2 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1080:1167  level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      tag_33\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1107:1108  3 */\n      0x03\n        /* \"Hero/utils/LevelDiagram.sol\":1098:1103  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1098:1108  level == 3 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1098:1167  level == 3 ? 42 : level == 4... */\n      tag_34\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1125:1126  4 */\n      0x04\n        /* \"Hero/utils/LevelDiagram.sol\":1116:1121  level */\n      dup3\n        /* \"Hero/utils/LevelDiagram.sol\":1116:1126  level == 4 */\n      eq\n        /* \"Hero/utils/LevelDiagram.sol\":1116:1167  level == 4... */\n      tag_35\n      jumpi\n        /* \"Hero/utils/LevelDiagram.sol\":1166:1167  0 */\n      0x00\n        /* \"Hero/utils/LevelDiagram.sol\":1116:1167  level == 4... */\n      jump(tag_36)\n    tag_35:\n        /* \"Hero/utils/LevelDiagram.sol\":1145:1147  80 */\n      0x50\n        /* \"Hero/utils/LevelDiagram.sol\":1116:1167  level == 4... */\n    tag_36:\n        /* \"Hero/utils/LevelDiagram.sol\":1098:1167  level == 3 ? 42 : level == 4... */\n      jump(tag_37)\n    tag_34:\n        /* \"Hero/utils/LevelDiagram.sol\":1111:1113  42 */\n      0x2a\n        /* \"Hero/utils/LevelDiagram.sol\":1098:1167  level == 3 ? 42 : level == 4... */\n    tag_37:\n        /* \"Hero/utils/LevelDiagram.sol\":1080:1167  level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      jump(tag_38)\n    tag_33:\n        /* \"Hero/utils/LevelDiagram.sol\":1093:1095  22 */\n      0x16\n        /* \"Hero/utils/LevelDiagram.sol\":1080:1167  level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n    tag_38:\n        /* \"Hero/utils/LevelDiagram.sol\":1062:1167  level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n      jump(tag_39)\n    tag_32:\n        /* \"Hero/utils/LevelDiagram.sol\":1075:1077  15 */\n      0x0f\n        /* \"Hero/utils/LevelDiagram.sol\":1062:1167  level == 1 ? 15 : level == 2 ? 22 : level == 3 ? 42 : level == 4... */\n    tag_39:\n        /* \"Hero/utils/LevelDiagram.sol\":1041:1177  return (... */\n      0xff\n      and\n      swap1\n      pop\n        /* \"Hero/utils/LevelDiagram.sol\":921:1184  function calculateBasicLevelAmount(uint256 level)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:352   */\n    tag_41:\n        /* \"#utility.yul\":85:90   */\n      0x00\n        /* \"#utility.yul\":110:176   */\n      tag_43\n        /* \"#utility.yul\":126:175   */\n      tag_44\n        /* \"#utility.yul\":168:174   */\n      dup5\n        /* \"#utility.yul\":126:175   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":110:176   */\n      tag_46\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":101:176   */\n      swap1\n      pop\n        /* \"#utility.yul\":199:205   */\n      dup3\n        /* \"#utility.yul\":192:197   */\n      dup2\n        /* \"#utility.yul\":185:206   */\n      mstore\n        /* \"#utility.yul\":237:241   */\n      0x20\n        /* \"#utility.yul\":230:235   */\n      dup2\n        /* \"#utility.yul\":226:242   */\n      add\n        /* \"#utility.yul\":275:278   */\n      dup5\n        /* \"#utility.yul\":266:272   */\n      dup5\n        /* \"#utility.yul\":261:264   */\n      dup5\n        /* \"#utility.yul\":257:273   */\n      add\n        /* \"#utility.yul\":254:279   */\n      gt\n        /* \"#utility.yul\":251:253   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":292:293   */\n      0x00\n        /* \"#utility.yul\":289:290   */\n      dup1\n        /* \"#utility.yul\":282:294   */\n      revert\n        /* \"#utility.yul\":251:253   */\n    tag_47:\n        /* \"#utility.yul\":305:346   */\n      tag_48\n        /* \"#utility.yul\":339:345   */\n      dup5\n        /* \"#utility.yul\":334:337   */\n      dup3\n        /* \"#utility.yul\":329:332   */\n      dup6\n        /* \"#utility.yul\":305:346   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":91:352   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":372:645   */\n    tag_50:\n        /* \"#utility.yul\":428:433   */\n      0x00\n        /* \"#utility.yul\":477:480   */\n      dup3\n        /* \"#utility.yul\":470:474   */\n      0x1f\n        /* \"#utility.yul\":462:468   */\n      dup4\n        /* \"#utility.yul\":458:475   */\n      add\n        /* \"#utility.yul\":454:481   */\n      slt\n        /* \"#utility.yul\":444:446   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":495:496   */\n      0x00\n        /* \"#utility.yul\":492:493   */\n      dup1\n        /* \"#utility.yul\":485:497   */\n      revert\n        /* \"#utility.yul\":444:446   */\n    tag_52:\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":522:542   */\n      calldataload\n        /* \"#utility.yul\":560:639   */\n      tag_53\n        /* \"#utility.yul\":635:638   */\n      dup5\n        /* \"#utility.yul\":627:633   */\n      dup3\n        /* \"#utility.yul\":620:624   */\n      0x20\n        /* \"#utility.yul\":612:618   */\n      dup7\n        /* \"#utility.yul\":608:625   */\n      add\n        /* \"#utility.yul\":560:639   */\n      tag_41\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":551:639   */\n      swap2\n      pop\n        /* \"#utility.yul\":434:645   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":651:790   */\n    tag_54:\n        /* \"#utility.yul\":697:702   */\n      0x00\n        /* \"#utility.yul\":735:741   */\n      dup2\n        /* \"#utility.yul\":722:742   */\n      calldataload\n        /* \"#utility.yul\":713:742   */\n      swap1\n      pop\n        /* \"#utility.yul\":751:784   */\n      tag_56\n        /* \"#utility.yul\":778:783   */\n      dup2\n        /* \"#utility.yul\":751:784   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":703:790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1316   */\n    tag_6:\n        /* \"#utility.yul\":874:880   */\n      0x00\n        /* \"#utility.yul\":882:888   */\n      dup1\n        /* \"#utility.yul\":931:933   */\n      0x40\n        /* \"#utility.yul\":919:928   */\n      dup4\n        /* \"#utility.yul\":910:917   */\n      dup6\n        /* \"#utility.yul\":906:929   */\n      sub\n        /* \"#utility.yul\":902:934   */\n      slt\n        /* \"#utility.yul\":899:901   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":947:948   */\n      0x00\n        /* \"#utility.yul\":944:945   */\n      dup1\n        /* \"#utility.yul\":937:949   */\n      revert\n        /* \"#utility.yul\":899:901   */\n    tag_59:\n        /* \"#utility.yul\":1018:1019   */\n      0x00\n        /* \"#utility.yul\":1007:1016   */\n      dup4\n        /* \"#utility.yul\":1003:1020   */\n      add\n        /* \"#utility.yul\":990:1021   */\n      calldataload\n        /* \"#utility.yul\":1048:1066   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1040:1046   */\n      dup2\n        /* \"#utility.yul\":1037:1067   */\n      gt\n        /* \"#utility.yul\":1034:1036   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1080:1081   */\n      0x00\n        /* \"#utility.yul\":1077:1078   */\n      dup1\n        /* \"#utility.yul\":1070:1082   */\n      revert\n        /* \"#utility.yul\":1034:1036   */\n    tag_60:\n        /* \"#utility.yul\":1108:1171   */\n      tag_61\n        /* \"#utility.yul\":1163:1170   */\n      dup6\n        /* \"#utility.yul\":1154:1160   */\n      dup3\n        /* \"#utility.yul\":1143:1152   */\n      dup7\n        /* \"#utility.yul\":1139:1161   */\n      add\n        /* \"#utility.yul\":1108:1171   */\n      tag_50\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1098:1171   */\n      swap3\n      pop\n        /* \"#utility.yul\":961:1181   */\n      pop\n        /* \"#utility.yul\":1220:1222   */\n      0x20\n        /* \"#utility.yul\":1246:1299   */\n      tag_62\n        /* \"#utility.yul\":1291:1298   */\n      dup6\n        /* \"#utility.yul\":1282:1288   */\n      dup3\n        /* \"#utility.yul\":1271:1280   */\n      dup7\n        /* \"#utility.yul\":1267:1289   */\n      add\n        /* \"#utility.yul\":1246:1299   */\n      tag_54\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1236:1299   */\n      swap2\n      pop\n        /* \"#utility.yul\":1191:1309   */\n      pop\n        /* \"#utility.yul\":889:1316   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1322:1440   */\n    tag_63:\n        /* \"#utility.yul\":1409:1433   */\n      tag_65\n        /* \"#utility.yul\":1427:1432   */\n      dup2\n        /* \"#utility.yul\":1409:1433   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1404:1407   */\n      dup3\n        /* \"#utility.yul\":1397:1434   */\n      mstore\n        /* \"#utility.yul\":1387:1440   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1446:1668   */\n    tag_9:\n        /* \"#utility.yul\":1539:1543   */\n      0x00\n        /* \"#utility.yul\":1577:1579   */\n      0x20\n        /* \"#utility.yul\":1566:1575   */\n      dup3\n        /* \"#utility.yul\":1562:1580   */\n      add\n        /* \"#utility.yul\":1554:1580   */\n      swap1\n      pop\n        /* \"#utility.yul\":1590:1661   */\n      tag_68\n        /* \"#utility.yul\":1658:1659   */\n      0x00\n        /* \"#utility.yul\":1647:1656   */\n      dup4\n        /* \"#utility.yul\":1643:1660   */\n      add\n        /* \"#utility.yul\":1634:1640   */\n      dup5\n        /* \"#utility.yul\":1590:1661   */\n      tag_63\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1544:1668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1674:1803   */\n    tag_46:\n        /* \"#utility.yul\":1708:1714   */\n      0x00\n        /* \"#utility.yul\":1735:1755   */\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1725:1755   */\n      swap1\n      pop\n        /* \"#utility.yul\":1764:1797   */\n      tag_72\n        /* \"#utility.yul\":1792:1796   */\n      dup3\n        /* \"#utility.yul\":1784:1790   */\n      dup3\n        /* \"#utility.yul\":1764:1797   */\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1715:1803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1809:1884   */\n    tag_71:\n        /* \"#utility.yul\":1842:1848   */\n      0x00\n        /* \"#utility.yul\":1875:1877   */\n      0x40\n        /* \"#utility.yul\":1869:1878   */\n      mload\n        /* \"#utility.yul\":1859:1878   */\n      swap1\n      pop\n        /* \"#utility.yul\":1849:1884   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1890:2198   */\n    tag_45:\n        /* \"#utility.yul\":1952:1956   */\n      0x00\n        /* \"#utility.yul\":2042:2060   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2034:2040   */\n      dup3\n        /* \"#utility.yul\":2031:2061   */\n      gt\n        /* \"#utility.yul\":2028:2030   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2064:2082   */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2028:2030   */\n    tag_76:\n        /* \"#utility.yul\":2102:2131   */\n      tag_79\n        /* \"#utility.yul\":2124:2130   */\n      dup3\n        /* \"#utility.yul\":2102:2131   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2094:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2186:2190   */\n      0x20\n        /* \"#utility.yul\":2180:2184   */\n      dup2\n        /* \"#utility.yul\":2176:2191   */\n      add\n        /* \"#utility.yul\":2168:2191   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2204:2389   */\n    tag_18:\n        /* \"#utility.yul\":2244:2245   */\n      0x00\n        /* \"#utility.yul\":2261:2281   */\n      tag_82\n        /* \"#utility.yul\":2279:2280   */\n      dup3\n        /* \"#utility.yul\":2261:2281   */\n      tag_66\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2256:2281   */\n      swap2\n      pop\n        /* \"#utility.yul\":2295:2315   */\n      tag_83\n        /* \"#utility.yul\":2313:2314   */\n      dup4\n        /* \"#utility.yul\":2295:2315   */\n      tag_66\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2290:2315   */\n      swap3\n      pop\n        /* \"#utility.yul\":2334:2335   */\n      dup3\n        /* \"#utility.yul\":2324:2326   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2339:2357   */\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2324:2326   */\n    tag_84:\n        /* \"#utility.yul\":2381:2382   */\n      dup3\n        /* \"#utility.yul\":2378:2379   */\n      dup3\n        /* \"#utility.yul\":2374:2383   */\n      div\n        /* \"#utility.yul\":2369:2383   */\n      swap1\n      pop\n        /* \"#utility.yul\":2246:2389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2395:2743   */\n    tag_16:\n        /* \"#utility.yul\":2435:2442   */\n      0x00\n        /* \"#utility.yul\":2458:2478   */\n      tag_88\n        /* \"#utility.yul\":2476:2477   */\n      dup3\n        /* \"#utility.yul\":2458:2478   */\n      tag_66\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2453:2478   */\n      swap2\n      pop\n        /* \"#utility.yul\":2492:2512   */\n      tag_89\n        /* \"#utility.yul\":2510:2511   */\n      dup4\n        /* \"#utility.yul\":2492:2512   */\n      tag_66\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2487:2512   */\n      swap3\n      pop\n        /* \"#utility.yul\":2680:2681   */\n      dup2\n        /* \"#utility.yul\":2612:2678   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2608:2682   */\n      div\n        /* \"#utility.yul\":2605:2606   */\n      dup4\n        /* \"#utility.yul\":2602:2683   */\n      gt\n        /* \"#utility.yul\":2597:2598   */\n      dup3\n        /* \"#utility.yul\":2590:2599   */\n      iszero\n        /* \"#utility.yul\":2583:2600   */\n      iszero\n        /* \"#utility.yul\":2579:2684   */\n      and\n        /* \"#utility.yul\":2576:2578   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":2687:2705   */\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2576:2578   */\n    tag_90:\n        /* \"#utility.yul\":2735:2736   */\n      dup3\n        /* \"#utility.yul\":2732:2733   */\n      dup3\n        /* \"#utility.yul\":2728:2737   */\n      mul\n        /* \"#utility.yul\":2717:2737   */\n      swap1\n      pop\n        /* \"#utility.yul\":2443:2743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:2826   */\n    tag_66:\n        /* \"#utility.yul\":2786:2793   */\n      0x00\n        /* \"#utility.yul\":2815:2820   */\n      dup2\n        /* \"#utility.yul\":2804:2820   */\n      swap1\n      pop\n        /* \"#utility.yul\":2794:2826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2832:2986   */\n    tag_49:\n        /* \"#utility.yul\":2916:2922   */\n      dup3\n        /* \"#utility.yul\":2911:2914   */\n      dup2\n        /* \"#utility.yul\":2906:2909   */\n      dup4\n        /* \"#utility.yul\":2893:2923   */\n      calldatacopy\n        /* \"#utility.yul\":2978:2979   */\n      0x00\n        /* \"#utility.yul\":2969:2975   */\n      dup4\n        /* \"#utility.yul\":2964:2967   */\n      dup4\n        /* \"#utility.yul\":2960:2976   */\n      add\n        /* \"#utility.yul\":2953:2980   */\n      mstore\n        /* \"#utility.yul\":2883:2986   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3273   */\n    tag_73:\n        /* \"#utility.yul\":3075:3102   */\n      tag_96\n        /* \"#utility.yul\":3097:3101   */\n      dup3\n        /* \"#utility.yul\":3075:3102   */\n      tag_80\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3067:3073   */\n      dup2\n        /* \"#utility.yul\":3063:3103   */\n      add\n        /* \"#utility.yul\":3205:3211   */\n      dup2\n        /* \"#utility.yul\":3193:3203   */\n      dup2\n        /* \"#utility.yul\":3190:3212   */\n      lt\n        /* \"#utility.yul\":3169:3187   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3157:3167   */\n      dup3\n        /* \"#utility.yul\":3154:3188   */\n      gt\n        /* \"#utility.yul\":3151:3213   */\n      or\n        /* \"#utility.yul\":3148:3150   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3216:3234   */\n      tag_98\n      tag_78\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3148:3150   */\n    tag_97:\n        /* \"#utility.yul\":3256:3266   */\n      dup1\n        /* \"#utility.yul\":3252:3254   */\n      0x40\n        /* \"#utility.yul\":3245:3267   */\n      mstore\n        /* \"#utility.yul\":3035:3273   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3279:3459   */\n    tag_92:\n        /* \"#utility.yul\":3327:3404   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3324:3325   */\n      0x00\n        /* \"#utility.yul\":3317:3405   */\n      mstore\n        /* \"#utility.yul\":3424:3428   */\n      0x11\n        /* \"#utility.yul\":3421:3422   */\n      0x04\n        /* \"#utility.yul\":3414:3429   */\n      mstore\n        /* \"#utility.yul\":3448:3452   */\n      0x24\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3438:3453   */\n      revert\n        /* \"#utility.yul\":3465:3645   */\n    tag_86:\n        /* \"#utility.yul\":3513:3590   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3510:3511   */\n      0x00\n        /* \"#utility.yul\":3503:3591   */\n      mstore\n        /* \"#utility.yul\":3610:3614   */\n      0x12\n        /* \"#utility.yul\":3607:3608   */\n      0x04\n        /* \"#utility.yul\":3600:3615   */\n      mstore\n        /* \"#utility.yul\":3634:3638   */\n      0x24\n        /* \"#utility.yul\":3631:3632   */\n      0x00\n        /* \"#utility.yul\":3624:3639   */\n      revert\n        /* \"#utility.yul\":3651:3831   */\n    tag_78:\n        /* \"#utility.yul\":3699:3776   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3696:3697   */\n      0x00\n        /* \"#utility.yul\":3689:3777   */\n      mstore\n        /* \"#utility.yul\":3796:3800   */\n      0x41\n        /* \"#utility.yul\":3793:3794   */\n      0x04\n        /* \"#utility.yul\":3786:3801   */\n      mstore\n        /* \"#utility.yul\":3820:3824   */\n      0x24\n        /* \"#utility.yul\":3817:3818   */\n      0x00\n        /* \"#utility.yul\":3810:3825   */\n      revert\n        /* \"#utility.yul\":3837:3939   */\n    tag_80:\n        /* \"#utility.yul\":3878:3884   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x1f\n        /* \"#utility.yul\":3925:3932   */\n      not\n        /* \"#utility.yul\":3920:3922   */\n      0x1f\n        /* \"#utility.yul\":3913:3918   */\n      dup4\n        /* \"#utility.yul\":3909:3923   */\n      add\n        /* \"#utility.yul\":3905:3933   */\n      and\n        /* \"#utility.yul\":3895:3933   */\n      swap1\n      pop\n        /* \"#utility.yul\":3885:3939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3945:4067   */\n    tag_57:\n        /* \"#utility.yul\":4018:4042   */\n      tag_104\n        /* \"#utility.yul\":4036:4041   */\n      dup2\n        /* \"#utility.yul\":4018:4042   */\n      tag_66\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":4011:4016   */\n      dup2\n        /* \"#utility.yul\":4008:4043   */\n      eq\n        /* \"#utility.yul\":3998:4000   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":4057:4058   */\n      0x00\n        /* \"#utility.yul\":4054:4055   */\n      dup1\n        /* \"#utility.yul\":4047:4059   */\n      revert\n        /* \"#utility.yul\":3998:4000   */\n    tag_105:\n        /* \"#utility.yul\":3988:4067   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122023267e448cff7fa03889618cbc12b0cf834ba5a1d4d8916c77860eaa9474f25564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:6"
															},
															"nodeType": "YulIf",
															"src": "243:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:6",
														"type": ""
													}
												],
												"src": "156:284:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:6",
														"type": ""
													}
												],
												"src": "446:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:6",
														"type": ""
													}
												],
												"src": "548:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:6"
															},
															"nodeType": "YulIf",
															"src": "733:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:6",
														"type": ""
													}
												],
												"src": "680:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516106293803806106298339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b61051b8061010e6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aa93c0ee14610030575b600080fd5b61004a60048036038101906100459190610287565b610060565b60405161005791906102ea565b60405180910390f35b60008061006c846100b0565b90506000610079846101bc565b9050670de0b6b3a7640000600a8284610092919061038c565b61009c919061035b565b6100a6919061038c565b9250505092915050565b600080828051906020012090507f8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f381146101ac577f181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a31081146101a3577f6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17811461019a577fb2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb811461018f577fb5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd811461018757600061018a565b60c85b610192565b60e15b60ff1661019e565b61012c5b6101a7565b6101c25b6101b0565b6102a35b61ffff16915050919050565b6000600182146101fd57600282146101f557600382146101ed57600482146101e55760006101e8565b60505b6101f0565b602a5b6101f8565b60165b610200565b600f5b60ff169050919050565b600061021d6102188461032a565b610305565b90508281526020810184848401111561023557600080fd5b6102408482856103f0565b509392505050565b600082601f83011261025957600080fd5b813561026984826020860161020a565b91505092915050565b600081359050610281816104ce565b92915050565b6000806040838503121561029a57600080fd5b600083013567ffffffffffffffff8111156102b457600080fd5b6102c085828601610248565b92505060206102d185828601610272565b9150509250929050565b6102e4816103e6565b82525050565b60006020820190506102ff60008301846102db565b92915050565b600061030f610320565b905061031b82826103ff565b919050565b6000604051905090565b600067ffffffffffffffff8211156103455761034461048e565b5b61034e826104bd565b9050602081019050919050565b6000610366826103e6565b9150610371836103e6565b9250826103815761038061045f565b5b828204905092915050565b6000610397826103e6565b91506103a2836103e6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103db576103da610430565b5b828202905092915050565b6000819050919050565b82818337600083830152505050565b610408826104bd565b810181811067ffffffffffffffff821117156104275761042661048e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6104d7816103e6565b81146104e257600080fd5b5056fea264697066735822122023267e448cff7fa03889618cbc12b0cf834ba5a1d4d8916c77860eaa9474f25564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x629 CODESIZE SUB DUP1 PUSH2 0x629 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x51B DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA93C0EE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C DUP5 PUSH2 0xB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x79 DUP5 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0xA DUP3 DUP5 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x38C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x8C57226533EC41D2857120DF9ACE6DFF88130D9B32385E09C9828F75027730F3 DUP2 EQ PUSH2 0x1AC JUMPI PUSH32 0x181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310 DUP2 EQ PUSH2 0x1A3 JUMPI PUSH32 0x6764D804D57285AE9D4C42CC380377D3D0EE9B90FF9EECCAA32D3B2E3E8D7F17 DUP2 EQ PUSH2 0x19A JUMPI PUSH32 0xB2C1AAAF9F516585466C9876E2EAF06EE68751AAD537B2A6FA22F473D03B58EB DUP2 EQ PUSH2 0x18F JUMPI PUSH32 0xB5333297A8BD10E190CB97FB1EE0F49587C8B2E015370E943C69FD680DABC6BD DUP2 EQ PUSH2 0x187 JUMPI PUSH1 0x0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0xC8 JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0xE1 JUMPDEST PUSH1 0xFF AND PUSH2 0x19E JUMP JUMPDEST PUSH2 0x12C JUMPDEST PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x1C2 JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x2A3 JUMPDEST PUSH2 0xFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x1FD JUMPI PUSH1 0x2 DUP3 EQ PUSH2 0x1F5 JUMPI PUSH1 0x3 DUP3 EQ PUSH2 0x1ED JUMPI PUSH1 0x4 DUP3 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x50 JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x2A JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x16 JUMPDEST PUSH2 0x200 JUMP JUMPDEST PUSH1 0xF JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D PUSH2 0x218 DUP5 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x240 DUP5 DUP3 DUP6 PUSH2 0x3F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x269 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x281 DUP2 PUSH2 0x4CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C0 DUP6 DUP3 DUP7 ADD PUSH2 0x248 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D1 DUP6 DUP3 DUP7 ADD PUSH2 0x272 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E4 DUP2 PUSH2 0x3E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F PUSH2 0x320 JUMP JUMPDEST SWAP1 POP PUSH2 0x31B DUP3 DUP3 PUSH2 0x3FF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x345 JUMPI PUSH2 0x344 PUSH2 0x48E JUMP JUMPDEST JUMPDEST PUSH2 0x34E DUP3 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366 DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x371 DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x45F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A2 DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DA PUSH2 0x430 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x408 DUP3 PUSH2 0x4BD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x427 JUMPI PUSH2 0x426 PUSH2 0x48E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D7 DUP2 PUSH2 0x3E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x26 PUSH31 0x448CFF7FA03889618CBC12B0CF834BA5A1D4D8916C77860EAA9474F2556473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "146:3415:1:-:0;;;523:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;578:5;560:4;;:24;;;;;;;;;;;;;;;;;;523:68;146:3415;;7:143:6;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;146:3415:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4070:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "91:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "101:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "168:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "126:41:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "110:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "110:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "192:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "199:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "185:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "185:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "185:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "215:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "230:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "237:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "226:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "219:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "280:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "292:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "282:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "282:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "282:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "261:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "257:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:16:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "275:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "254:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:25:6"
															},
															"nodeType": "YulIf",
															"src": "251:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "329:3:6"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "334:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "339:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "305:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "305:41:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "64:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "69:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "77:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "85:5:6",
														"type": ""
													}
												],
												"src": "7:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "434:211:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "483:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "492:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "495:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "485:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "485:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "485:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "462:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "470:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "477:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "454:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "454:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "447:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "447:35:6"
															},
															"nodeType": "YulIf",
															"src": "444:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "508:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "535:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "522:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "512:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "551:88:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "620:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "608:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "608:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "627:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "635:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "560:47:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:79:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "551:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "412:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "420:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "428:5:6",
														"type": ""
													}
												],
												"src": "372:273:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "703:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "713:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "735:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "722:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "722:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "713:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "778:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "751:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "681:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "689:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "697:5:6",
														"type": ""
													}
												],
												"src": "651:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:427:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "935:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "944:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "947:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "937:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "937:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "910:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "919:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "906:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "902:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:32:6"
															},
															"nodeType": "YulIf",
															"src": "899:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "961:220:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "976:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1007:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1018:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1003:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1003:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "990:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "990:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "980:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1068:16:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1077:1:6",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1080:1:6",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1070:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1070:12:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1070:12:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1048:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1037:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1037:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "1034:2:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1098:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1143:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1154:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1139:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1139:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1163:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1108:30:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1098:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1191:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1206:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1220:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1210:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1236:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1271:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1282:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1267:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1267:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1291:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1246:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1236:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "851:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "862:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "874:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "882:6:6",
														"type": ""
													}
												],
												"src": "796:520:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1387:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1404:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1427:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1409:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1409:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1397:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1397:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1375:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1382:3:6",
														"type": ""
													}
												],
												"src": "1322:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1544:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1554:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1566:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1577:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1562:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1554:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1647:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1658:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1643:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1643:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1590:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1590:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1590:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1516:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1528:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1539:4:6",
														"type": ""
													}
												],
												"src": "1446:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1715:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1725:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1735:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1784:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1792:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1764:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1764:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1699:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1708:6:6",
														"type": ""
													}
												],
												"src": "1674:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1859:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1869:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1842:6:6",
														"type": ""
													}
												],
												"src": "1809:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:241:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2062:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2064:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2064:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2064:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2034:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2042:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2031:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2031:30:6"
															},
															"nodeType": "YulIf",
															"src": "2028:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2094:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2102:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2094:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2168:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2180:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2186:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2168:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1941:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1952:4:6",
														"type": ""
													}
												],
												"src": "1890:308:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2246:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2256:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2279:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2261:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2256:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2290:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2313:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2295:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2290:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2337:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2339:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2339:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2339:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2334:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2327:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:9:6"
															},
															"nodeType": "YulIf",
															"src": "2324:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2369:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2378:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2381:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2374:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2369:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2235:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2238:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2244:1:6",
														"type": ""
													}
												],
												"src": "2204:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2443:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2453:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2476:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2458:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2453:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2487:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2510:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2492:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2487:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2685:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2687:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2687:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2687:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2597:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2590:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2590:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2583:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2583:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2605:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2612:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2680:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2608:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2608:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2602:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2602:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:105:6"
															},
															"nodeType": "YulIf",
															"src": "2576:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2717:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2732:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2735:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2728:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2728:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2717:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2426:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2429:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2435:7:6",
														"type": ""
													}
												],
												"src": "2395:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2794:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2804:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2815:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2804:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2776:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2786:7:6",
														"type": ""
													}
												],
												"src": "2749:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2883:103:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2906:3:6"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2911:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2916:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2893:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2893:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2964:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2969:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2960:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2960:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2978:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2953:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2953:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2865:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2870:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2875:6:6",
														"type": ""
													}
												],
												"src": "2832:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3035:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3045:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3067:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3097:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3075:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3075:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3063:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3049:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3214:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3216:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3216:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3216:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3157:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3169:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3154:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3193:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3205:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3190:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3190:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3151:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:62:6"
															},
															"nodeType": "YulIf",
															"src": "3148:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3256:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3245:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3245:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3021:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3029:4:6",
														"type": ""
													}
												],
												"src": "2992:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3307:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3327:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3317:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3317:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3317:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3414:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3445:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3448:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3438:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3438:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3279:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3510:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3513:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3503:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3607:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3610:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3600:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3600:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3631:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3634:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3624:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3624:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3465:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3679:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3696:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3699:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3689:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3689:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3689:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3793:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3796:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3786:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3786:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3786:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3817:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3820:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3810:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3810:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3651:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3885:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3895:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3913:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3920:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3909:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3929:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3925:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3925:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3905:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3895:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3878:6:6",
														"type": ""
													}
												],
												"src": "3837:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3988:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4045:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4054:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4057:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4047:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4047:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4047:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4011:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4036:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4018:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4018:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4008:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4008:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4001:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:43:6"
															},
															"nodeType": "YulIf",
															"src": "3998:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3981:5:6",
														"type": ""
													}
												],
												"src": "3945:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aa93c0ee14610030575b600080fd5b61004a60048036038101906100459190610287565b610060565b60405161005791906102ea565b60405180910390f35b60008061006c846100b0565b90506000610079846101bc565b9050670de0b6b3a7640000600a8284610092919061038c565b61009c919061035b565b6100a6919061038c565b9250505092915050565b600080828051906020012090507f8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f381146101ac577f181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a31081146101a3577f6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17811461019a577fb2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb811461018f577fb5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd811461018757600061018a565b60c85b610192565b60e15b60ff1661019e565b61012c5b6101a7565b6101c25b6101b0565b6102a35b61ffff16915050919050565b6000600182146101fd57600282146101f557600382146101ed57600482146101e55760006101e8565b60505b6101f0565b602a5b6101f8565b60165b610200565b600f5b60ff169050919050565b600061021d6102188461032a565b610305565b90508281526020810184848401111561023557600080fd5b6102408482856103f0565b509392505050565b600082601f83011261025957600080fd5b813561026984826020860161020a565b91505092915050565b600081359050610281816104ce565b92915050565b6000806040838503121561029a57600080fd5b600083013567ffffffffffffffff8111156102b457600080fd5b6102c085828601610248565b92505060206102d185828601610272565b9150509250929050565b6102e4816103e6565b82525050565b60006020820190506102ff60008301846102db565b92915050565b600061030f610320565b905061031b82826103ff565b919050565b6000604051905090565b600067ffffffffffffffff8211156103455761034461048e565b5b61034e826104bd565b9050602081019050919050565b6000610366826103e6565b9150610371836103e6565b9250826103815761038061045f565b5b828204905092915050565b6000610397826103e6565b91506103a2836103e6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103db576103da610430565b5b828202905092915050565b6000819050919050565b82818337600083830152505050565b610408826104bd565b810181811067ffffffffffffffff821117156104275761042661048e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6104d7816103e6565b81146104e257600080fd5b5056fea264697066735822122023267e448cff7fa03889618cbc12b0cf834ba5a1d4d8916c77860eaa9474f25564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA93C0EE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C DUP5 PUSH2 0xB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x79 DUP5 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH1 0xA DUP3 DUP5 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x38C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x8C57226533EC41D2857120DF9ACE6DFF88130D9B32385E09C9828F75027730F3 DUP2 EQ PUSH2 0x1AC JUMPI PUSH32 0x181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310 DUP2 EQ PUSH2 0x1A3 JUMPI PUSH32 0x6764D804D57285AE9D4C42CC380377D3D0EE9B90FF9EECCAA32D3B2E3E8D7F17 DUP2 EQ PUSH2 0x19A JUMPI PUSH32 0xB2C1AAAF9F516585466C9876E2EAF06EE68751AAD537B2A6FA22F473D03B58EB DUP2 EQ PUSH2 0x18F JUMPI PUSH32 0xB5333297A8BD10E190CB97FB1EE0F49587C8B2E015370E943C69FD680DABC6BD DUP2 EQ PUSH2 0x187 JUMPI PUSH1 0x0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0xC8 JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0xE1 JUMPDEST PUSH1 0xFF AND PUSH2 0x19E JUMP JUMPDEST PUSH2 0x12C JUMPDEST PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x1C2 JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x2A3 JUMPDEST PUSH2 0xFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x1FD JUMPI PUSH1 0x2 DUP3 EQ PUSH2 0x1F5 JUMPI PUSH1 0x3 DUP3 EQ PUSH2 0x1ED JUMPI PUSH1 0x4 DUP3 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x50 JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x2A JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x16 JUMPDEST PUSH2 0x200 JUMP JUMPDEST PUSH1 0xF JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D PUSH2 0x218 DUP5 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x240 DUP5 DUP3 DUP6 PUSH2 0x3F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x269 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x281 DUP2 PUSH2 0x4CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C0 DUP6 DUP3 DUP7 ADD PUSH2 0x248 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D1 DUP6 DUP3 DUP7 ADD PUSH2 0x272 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E4 DUP2 PUSH2 0x3E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F PUSH2 0x320 JUMP JUMPDEST SWAP1 POP PUSH2 0x31B DUP3 DUP3 PUSH2 0x3FF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x345 JUMPI PUSH2 0x344 PUSH2 0x48E JUMP JUMPDEST JUMPDEST PUSH2 0x34E DUP3 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366 DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x371 DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x45F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A2 DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DA PUSH2 0x430 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x408 DUP3 PUSH2 0x4BD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x427 JUMPI PUSH2 0x426 PUSH2 0x48E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D7 DUP2 PUSH2 0x3E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x26 PUSH31 0x448CFF7FA03889618CBC12B0CF834BA5A1D4D8916C77860EAA9474F2556473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "146:3415:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;708:7;731:19;753:32;779:5;753:25;:32::i;:::-;731:54;;795:19;817:32;843:5;817:25;:32::i;:::-;795:54;;904:4;898:2;883:11;869;:25;;;;:::i;:::-;868:32;;;;:::i;:::-;867:41;;;;:::i;:::-;860:48;;;;597:318;;;;:::o;1190:504::-;1293:7;1316:18;1353:5;1337:23;;;;;;1316:44;;212:22;1392:10;:23;:285;;277:22;1424:10;:23;:253;;337:17;1488:10;:18;:189;;401:26;1547:10;:27;:130;;467:19;1615:10;:20;:62;;1676:1;1615:62;;;1654:3;1615:62;1547:130;;;1593:3;1547:130;1488:189;;;;;1525:3;1488:189;1424:253;;;1466:3;1424:253;1392:285;;;1418:3;1392:285;1371:316;;;;;1190:504;;;:::o;921:263::-;1018:7;1071:1;1062:5;:10;:105;;1089:1;1080:5;:10;:87;;1107:1;1098:5;:10;:69;;1125:1;1116:5;:10;:51;;1166:1;1116:51;;;1145:2;1116:51;1098:69;;;1111:2;1098:69;1080:87;;;1093:2;1080:87;1062:105;;;1075:2;1062:105;1041:136;;;;921:263;;;:::o;7:345:6:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;372:273::-;428:5;477:3;470:4;462:6;458:17;454:27;444:2;;495:1;492;485:12;444:2;535:6;522:20;560:79;635:3;627:6;620:4;612:6;608:17;560:79;:::i;:::-;551:88;;434:211;;;;;:::o;651:139::-;697:5;735:6;722:20;713:29;;751:33;778:5;751:33;:::i;:::-;703:87;;;;:::o;796:520::-;874:6;882;931:2;919:9;910:7;906:23;902:32;899:2;;;947:1;944;937:12;899:2;1018:1;1007:9;1003:17;990:31;1048:18;1040:6;1037:30;1034:2;;;1080:1;1077;1070:12;1034:2;1108:63;1163:7;1154:6;1143:9;1139:22;1108:63;:::i;:::-;1098:73;;961:220;1220:2;1246:53;1291:7;1282:6;1271:9;1267:22;1246:53;:::i;:::-;1236:63;;1191:118;889:427;;;;;:::o;1322:118::-;1409:24;1427:5;1409:24;:::i;:::-;1404:3;1397:37;1387:53;;:::o;1446:222::-;1539:4;1577:2;1566:9;1562:18;1554:26;;1590:71;1658:1;1647:9;1643:17;1634:6;1590:71;:::i;:::-;1544:124;;;;:::o;1674:129::-;1708:6;1735:20;;:::i;:::-;1725:30;;1764:33;1792:4;1784:6;1764:33;:::i;:::-;1715:88;;;:::o;1809:75::-;1842:6;1875:2;1869:9;1859:19;;1849:35;:::o;1890:308::-;1952:4;2042:18;2034:6;2031:30;2028:2;;;2064:18;;:::i;:::-;2028:2;2102:29;2124:6;2102:29;:::i;:::-;2094:37;;2186:4;2180;2176:15;2168:23;;1957:241;;;:::o;2204:185::-;2244:1;2261:20;2279:1;2261:20;:::i;:::-;2256:25;;2295:20;2313:1;2295:20;:::i;:::-;2290:25;;2334:1;2324:2;;2339:18;;:::i;:::-;2324:2;2381:1;2378;2374:9;2369:14;;2246:143;;;;:::o;2395:348::-;2435:7;2458:20;2476:1;2458:20;:::i;:::-;2453:25;;2492:20;2510:1;2492:20;:::i;:::-;2487:25;;2680:1;2612:66;2608:74;2605:1;2602:81;2597:1;2590:9;2583:17;2579:105;2576:2;;;2687:18;;:::i;:::-;2576:2;2735:1;2732;2728:9;2717:20;;2443:300;;;;:::o;2749:77::-;2786:7;2815:5;2804:16;;2794:32;;;:::o;2832:154::-;2916:6;2911:3;2906;2893:30;2978:1;2969:6;2964:3;2960:16;2953:27;2883:103;;;:::o;2992:281::-;3075:27;3097:4;3075:27;:::i;:::-;3067:6;3063:40;3205:6;3193:10;3190:22;3169:18;3157:10;3154:34;3151:62;3148:2;;;3216:18;;:::i;:::-;3148:2;3256:10;3252:2;3245:22;3035:238;;;:::o;3279:180::-;3327:77;3324:1;3317:88;3424:4;3421:1;3414:15;3448:4;3445:1;3438:15;3465:180;3513:77;3510:1;3503:88;3610:4;3607:1;3600:15;3634:4;3631:1;3624:15;3651:180;3699:77;3696:1;3689:88;3796:4;3793:1;3786:15;3820:4;3817:1;3810:15;3837:102;3878:6;3929:2;3925:7;3920:2;3913:5;3909:14;3905:28;3895:38;;3885:54;;;:::o;3945:122::-;4018:24;4036:5;4018:24;:::i;:::-;4011:5;4008:35;3998:2;;4057:1;4054;4047:12;3998:2;3988:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "261400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateTokenAmount(string,uint256)": "infinite"
							},
							"internal": {
								"calculateBasicGradeAmount(string memory)": "infinite",
								"calculateBasicLevelAmount(uint256)": "170",
								"calculateItemIndex(uint256)": "infinite",
								"calculatePower(string memory,uint256)": "infinite",
								"makeRandomNumberForItem(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 3561,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 523,
									"end": 591,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 591,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 523,
									"end": 591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 591,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 591,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 523,
									"end": 591,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 523,
									"end": 591,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 523,
									"end": 591,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 523,
									"end": 591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 578,
									"end": 583,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 560,
									"end": 564,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 560,
									"end": 584,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 560,
									"end": 584,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 560,
									"end": 584,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 560,
									"end": 584,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 523,
									"end": 591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 585,
									"end": 592,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 3561,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122023267e448cff7fa03889618cbc12b0cf834ba5a1d4d8916c77860eaa9474f25564736f6c63430008040033",
									".code": [
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "AA93C0EE"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 3561,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 597,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 753,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 779,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 753,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 753,
											"end": 785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 753,
											"end": 785,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 753,
											"end": 785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 731,
											"end": 785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 731,
											"end": 785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 848,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 817,
											"end": 849,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 849,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 817,
											"end": 849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 795,
											"end": 849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 795,
											"end": 849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 904,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 898,
											"end": 900,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 883,
											"end": 894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 869,
											"end": 880,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 869,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 869,
											"end": 894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 869,
											"end": 894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 869,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 869,
											"end": 894,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 869,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 869,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 868,
											"end": 900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 868,
											"end": 900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 868,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 868,
											"end": 900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 868,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 868,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 867,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 867,
											"end": 908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 867,
											"end": 908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 867,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 867,
											"end": 908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 908,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 867,
											"end": 908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 860,
											"end": 908,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 860,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 860,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 860,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 597,
											"end": 915,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1190,
											"end": 1694,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1190,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 212,
											"end": 234,
											"name": "PUSH",
											"source": 1,
											"value": "8C57226533EC41D2857120DF9ACE6DFF88130D9B32385E09C9828F75027730F3"
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1415,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1392,
											"end": 1677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 277,
											"end": 299,
											"name": "PUSH",
											"source": 1,
											"value": "181EBE3A8FA130246D49BFD123AC54849B05BDCD02C6B1322C78DE2A3988A310"
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1424,
											"end": 1677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "6764D804D57285AE9D4C42CC380377D3D0EE9B90FF9EECCAA32D3B2E3E8D7F17"
										},
										{
											"begin": 1488,
											"end": 1498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1506,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 401,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "B2C1AAAF9F516585466C9876E2EAF06EE68751AAD537B2A6FA22F473D03B58EB"
										},
										{
											"begin": 1547,
											"end": 1557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1574,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1547,
											"end": 1677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 467,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "B5333297A8BD10E190CB97FB1EE0F49587C8B2E015370E943C69FD680DABC6BD"
										},
										{
											"begin": 1615,
											"end": 1625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1635,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1615,
											"end": 1677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1615,
											"end": 1677,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1615,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1657,
											"name": "PUSH",
											"source": 1,
											"value": "C8"
										},
										{
											"begin": 1615,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1615,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1547,
											"end": 1677,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1547,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "E1"
										},
										{
											"begin": 1547,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1547,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1528,
											"name": "PUSH",
											"source": 1,
											"value": "12C"
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1488,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1424,
											"end": 1677,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1424,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1469,
											"name": "PUSH",
											"source": 1,
											"value": "1C2"
										},
										{
											"begin": 1424,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1424,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1392,
											"end": 1677,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1392,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "2A3"
										},
										{
											"begin": 1392,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1392,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1687,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 1371,
											"end": 1687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1694,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 921,
											"end": 1184,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 921,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1072,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1062,
											"end": 1167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1080,
											"end": 1085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1090,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1080,
											"end": 1167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1108,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1098,
											"end": 1167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1126,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1116,
											"end": 1167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1116,
											"end": 1167,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1116,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1116,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1116,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1098,
											"end": 1167,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1098,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 1098,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1098,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1080,
											"end": 1167,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1080,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1080,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1080,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1062,
											"end": 1167,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1062,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1077,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1062,
											"end": 1167,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1062,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1177,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1041,
											"end": 1177,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 921,
											"end": 1184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 921,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 921,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 921,
											"end": 1184,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 7,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 85,
											"end": 90,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 168,
											"end": 174,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 101,
											"end": 176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 101,
											"end": 176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 192,
											"end": 197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 237,
											"end": 241,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 226,
											"end": 242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 278,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 266,
											"end": 272,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 261,
											"end": 264,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 257,
											"end": 273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 254,
											"end": 279,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 253,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 292,
											"end": 293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 290,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 282,
											"end": 294,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 253,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 305,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 334,
											"end": 337,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 332,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 305,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 91,
											"end": 352,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 372,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 372,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 428,
											"end": 433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 470,
											"end": 474,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 462,
											"end": 468,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 458,
											"end": 475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 454,
											"end": 481,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 444,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 444,
											"end": 446,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 495,
											"end": 496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 497,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 444,
											"end": 446,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 444,
											"end": 446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 522,
											"end": 542,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 635,
											"end": 638,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 627,
											"end": 633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 620,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 618,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 608,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 434,
											"end": 645,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 651,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 651,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 697,
											"end": 702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 722,
											"end": 742,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 778,
											"end": 783,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 703,
											"end": 790,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 796,
											"end": 1316,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 796,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 928,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 906,
											"end": 929,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 899,
											"end": 901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 937,
											"end": 949,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 899,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1018,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1016,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1021,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1152,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1108,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1171,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1280,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1246,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1299,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 889,
											"end": 1316,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1322,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1322,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1409,
											"end": 1433,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1409,
											"end": 1433,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1409,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1434,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1440,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1446,
											"end": 1668,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1446,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1579,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1656,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1643,
											"end": 1660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1590,
											"end": 1661,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1590,
											"end": 1661,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1590,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1668,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1668,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1674,
											"end": 1803,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1674,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1764,
											"end": 1797,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1764,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1803,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1715,
											"end": 1803,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1809,
											"end": 1884,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1809,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1877,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1884,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1890,
											"end": 2198,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1890,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2061,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2028,
											"end": 2030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2064,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2030,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2028,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2190,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2198,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2204,
											"end": 2389,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2204,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2279,
											"end": 2280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2261,
											"end": 2281,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2295,
											"end": 2315,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2295,
											"end": 2315,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2295,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2315,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2339,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2339,
											"end": 2357,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2357,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2339,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2383,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2389,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2389,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2395,
											"end": 2743,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2395,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2458,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2492,
											"end": 2512,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2492,
											"end": 2512,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2492,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2608,
											"end": 2682,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2683,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2599,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2736,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2743,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2743,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2749,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2793,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2826,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2832,
											"end": 2986,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2832,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 2909,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2923,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2975,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2967,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 2976,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2986,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2992,
											"end": 3273,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2992,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3097,
											"end": 3101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3067,
											"end": 3073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3212,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3157,
											"end": 3167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3188,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3213,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3267,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3035,
											"end": 3273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3035,
											"end": 3273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3035,
											"end": 3273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3035,
											"end": 3273,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3279,
											"end": 3459,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3279,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3404,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3324,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3405,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3428,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3414,
											"end": 3429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3452,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3453,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3645,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3465,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3590,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3510,
											"end": 3511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3614,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3631,
											"end": 3632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3831,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3651,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3776,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3696,
											"end": 3697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3777,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3800,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3793,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3824,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3837,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3925,
											"end": 3932,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3913,
											"end": 3918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 3923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3939,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3945,
											"end": 4067,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3945,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4036,
											"end": 4041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4008,
											"end": 4043,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4047,
											"end": 4059,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4067,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"calculateTokenAmount(string,uint256)": "aa93c0ee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/utils/LevelDiagram.sol\":\"LevelDiagram\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0x43b42e52b72aad116ed2144709eeef3cc11c4d7a01b29b0bb67d81fde93b0c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://001516dd4aabe95f201cc56585ed32cba5b586423752a66b6697d2dee110c2cf\",\"dweb:/ipfs/QmfAcw3p8x9kzEUoZ2sWLRkQC1W5mCGnVMFNYDa7nxW6uY\"]},\"Hero/utils/LevelDiagram.sol\":{\"keccak256\":\"0x4702cd913ea9ec6c9f55ca080e438cf65bf9986e174d6bcb00d02e0391c415bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18a6335bdb3e1e8983bc3f5de67e5e0863f8dd629f4e5efc800652b982ad1e1\",\"dweb:/ipfs/Qmd1szrPnwf3ETMsGK5QyXxSkkhQx6nbpgwmWC6CjUSfQT\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 80,
								"contract": "Hero/utils/LevelDiagram.sol:LevelDiagram",
								"label": "item",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IKIP37Full)548"
							}
						],
						"types": {
							"t_contract(IKIP37Full)548": {
								"encoding": "inplace",
								"label": "contract IKIP37Full",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP13.sol": {
				"IKIP13": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP13.sol\":\"IKIP13\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37.sol": {
				"IKIP37": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37.sol\":\"IKIP37\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"IKIP37Full": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37Full.sol\":\"IKIP37Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"IKIP37MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37MetadataURI.sol\":\"IKIP37MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Hero/interface/ILevelDiagram.sol": {
				"ast": {
					"absolutePath": "Hero/interface/ILevelDiagram.sol",
					"exportedSymbols": {
						"ILevelDiagram": [
							48
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "ILevelDiagram",
							"nameLocation": "66:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "aa93c0ee",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "96:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "131:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "117:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "117:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "146:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "138:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "116:36:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "200:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:9:0"
									},
									"scope": 48,
									"src": "87:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c9fd3f5",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicLevelAmount",
									"nameLocation": "224:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "258:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "250:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "249:15:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "312:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:9:0"
									},
									"scope": 48,
									"src": "215:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8cecd76d",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicGradeAmount",
									"nameLocation": "336:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "376:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "362:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:21:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "430:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:9:0"
									},
									"scope": 48,
									"src": "327:112:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b79d5db4",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateItemIndex",
									"nameLocation": "454:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:16:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "536:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:9:0"
									},
									"scope": 48,
									"src": "445:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8e1fcdd1",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePower",
									"nameLocation": "560:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "575:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "575:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "604:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "596:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:36:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "658:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:9:0"
									},
									"scope": 48,
									"src": "551:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c21a0884",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makeRandomNumberForItem",
									"nameLocation": "682:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "714:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "706:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:21:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "774:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:9:0"
									},
									"scope": 48,
									"src": "673:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 49,
							"src": "56:729:0",
							"usedErrors": []
						}
					],
					"src": "32:753:0"
				},
				"id": 0
			},
			"Hero/utils/LevelDiagram.sol": {
				"ast": {
					"absolutePath": "Hero/utils/LevelDiagram.sol",
					"exportedSymbols": {
						"IKIP13": [
							406
						],
						"IKIP37": [
							524
						],
						"IKIP37Full": [
							548
						],
						"IKIP37MetadataURI": [
							561
						],
						"ILevelDiagram": [
							48
						],
						"LevelDiagram": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 50,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37Full.sol",
							"file": "../../interface/IKIP37/IKIP37Full.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 549,
							"src": "56:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Hero/interface/ILevelDiagram.sol",
							"file": "../interface/ILevelDiagram.sol",
							"id": 52,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 49,
							"src": "104:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "LevelDiagram",
							"nameLocation": "155:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 57,
									"mutability": "constant",
									"name": "MYTHOLOGY",
									"nameLocation": "200:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "175:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 53,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "175:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d7974686f6c6f6779",
												"id": 55,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "222:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f3",
													"typeString": "literal_string \"Mythology\""
												},
												"value": "Mythology"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8c57226533ec41d2857120df9ace6dff88130d9b32385e09c9828f75027730f3",
													"typeString": "literal_string \"Mythology\""
												}
											],
											"id": 54,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "212:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 56,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "212:22:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 62,
									"mutability": "constant",
									"name": "LEGENDARY",
									"nameLocation": "265:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "240:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 58,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "240:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4c6567656e64617279",
												"id": 60,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "287:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310",
													"typeString": "literal_string \"Legendary\""
												},
												"value": "Legendary"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_181ebe3a8fa130246d49bfd123ac54849b05bdcd02c6b1322c78de2a3988a310",
													"typeString": "literal_string \"Legendary\""
												}
											],
											"id": 59,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "277:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 61,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "277:22:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 67,
									"mutability": "constant",
									"name": "EPIC",
									"nameLocation": "330:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "305:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 63,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "305:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "45706963",
												"id": 65,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "347:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17",
													"typeString": "literal_string \"Epic\""
												},
												"value": "Epic"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6764d804d57285ae9d4c42cc380377d3d0ee9b90ff9eeccaa32d3b2e3e8d7f17",
													"typeString": "literal_string \"Epic\""
												}
											],
											"id": 64,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "337:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "337:17:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 72,
									"mutability": "constant",
									"name": "ADMINISTRATOR",
									"nameLocation": "385:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "360:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 68,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "360:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41646d696e6973747261746f72",
												"id": 70,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "411:15:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb",
													"typeString": "literal_string \"Administrator\""
												},
												"value": "Administrator"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b2c1aaaf9f516585466c9876e2eaf06ee68751aad537b2a6fa22f473d03b58eb",
													"typeString": "literal_string \"Administrator\""
												}
											],
											"id": 69,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "401:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 71,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "401:26:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 77,
									"mutability": "constant",
									"name": "NORMAL",
									"nameLocation": "458:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "433:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 73,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "433:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4e6f726d616c",
												"id": 75,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "477:8:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd",
													"typeString": "literal_string \"Normal\""
												},
												"value": "Normal"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b5333297a8bd10e190cb97fb1ee0f49587c8b2e015370e943c69fd680dabc6bd",
													"typeString": "literal_string \"Normal\""
												}
											],
											"id": 74,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "467:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 76,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "467:19:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 80,
									"mutability": "mutable",
									"name": "item",
									"nameLocation": "512:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "493:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP37Full_$548",
										"typeString": "contract IKIP37Full"
									},
									"typeName": {
										"id": 79,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 78,
											"name": "IKIP37Full",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 548,
											"src": "493:10:1"
										},
										"referencedDeclaration": 548,
										"src": "493:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP37Full_$548",
											"typeString": "contract IKIP37Full"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "550:41:1",
										"statements": [
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "560:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$548",
															"typeString": "contract IKIP37Full"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 87,
																"name": "_item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "578:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 86,
															"name": "IKIP37Full",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "567:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP37Full_$548_$",
																"typeString": "type(contract IKIP37Full)"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "567:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$548",
															"typeString": "contract IKIP37Full"
														}
													},
													"src": "560:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$548",
														"typeString": "contract IKIP37Full"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "560:24:1"
											}
										]
									},
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "_item",
												"nameLocation": "543:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "535:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:15:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:0:1"
									},
									"scope": 394,
									"src": "523:68:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "721:194:1",
										"statements": [
											{
												"assignments": [
													102
												],
												"declarations": [
													{
														"constant": false,
														"id": 102,
														"mutability": "mutable",
														"name": "gradeAmount",
														"nameLocation": "739:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 123,
														"src": "731:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "731:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [
														{
															"id": 104,
															"name": "grade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "779:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 103,
														"name": "calculateBasicGradeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "753:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) pure returns (uint256)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "753:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "731:54:1"
											},
											{
												"assignments": [
													108
												],
												"declarations": [
													{
														"constant": false,
														"id": 108,
														"mutability": "mutable",
														"name": "levelAmount",
														"nameLocation": "803:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 123,
														"src": "795:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "795:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"arguments": [
														{
															"id": 110,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "843:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 109,
														"name": "calculateBasicLevelAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "817:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:54:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 113,
																				"name": "gradeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 102,
																				"src": "869:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 114,
																				"name": "levelAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 108,
																				"src": "883:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "869:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 116,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "868:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "898:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "868:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 119,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "867:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "904:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "867:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 100,
												"id": 122,
												"nodeType": "Return",
												"src": "860:48:1"
											}
										]
									},
									"functionSelector": "aa93c0ee",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "606:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "641:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "627:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 93,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "627:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "656:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "648:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:36:1"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:1"
									},
									"scope": 394,
									"src": "597:318:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1031:153:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 131,
																	"name": "level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 126,
																	"src": "1062:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1071:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1062:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 135,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "1080:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1089:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1080:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 139,
																			"name": "level",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "1098:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1107:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "1098:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 143,
																				"name": "level",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 126,
																				"src": "1116:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "1116:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1166:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "1116:51:1",
																		"trueExpression": {
																			"hexValue": "3830",
																			"id": 146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1145:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_80_by_1",
																				"typeString": "int_const 80"
																			},
																			"value": "80"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1098:69:1",
																	"trueExpression": {
																		"hexValue": "3432",
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1111:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_42_by_1",
																			"typeString": "int_const 42"
																		},
																		"value": "42"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1080:87:1",
																"trueExpression": {
																	"hexValue": "3232",
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1093:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_22_by_1",
																		"typeString": "int_const 22"
																	},
																	"value": "22"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1062:105:1",
															"trueExpression": {
																"hexValue": "3135",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1075:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 152,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1048:129:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 130,
												"id": 153,
												"nodeType": "Return",
												"src": "1041:136:1"
											}
										]
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicLevelAmount",
									"nameLocation": "930:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "964:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "956:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:15:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1018:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:9:1"
									},
									"scope": 394,
									"src": "921:263:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1306:388:1",
										"statements": [
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "gradeCheck",
														"nameLocation": "1324:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "1316:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 162,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1316:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 167,
																	"name": "grade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "1353:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1347:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 165,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1347:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1347:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 164,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1337:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1316:44:1"
											},
											{
												"expression": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 171,
																	"name": "gradeCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1392:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 172,
																	"name": "MYTHOLOGY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "1406:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1392:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 175,
																		"name": "gradeCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "1424:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 176,
																		"name": "LEGENDARY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "1438:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "1424:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 179,
																			"name": "gradeCheck",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "1488:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 180,
																			"name": "EPIC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "1502:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "1488:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 183,
																				"name": "gradeCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "1547:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 184,
																				"name": "ADMINISTRATOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "1561:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "1547:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"id": 189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 187,
																					"name": "gradeCheck",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 163,
																					"src": "1615:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 188,
																					"name": "NORMAL",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 77,
																					"src": "1629:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"src": "1615:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1676:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "1615:62:1",
																			"trueExpression": {
																				"hexValue": "323030",
																				"id": 190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1654:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_200_by_1",
																					"typeString": "int_const 200"
																				},
																				"value": "200"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "1547:130:1",
																		"trueExpression": {
																			"hexValue": "323235",
																			"id": 186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1593:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225_by_1",
																				"typeString": "int_const 225"
																			},
																			"value": "225"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1488:189:1",
																	"trueExpression": {
																		"hexValue": "333030",
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1525:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_300_by_1",
																			"typeString": "int_const 300"
																		},
																		"value": "300"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1424:253:1",
																"trueExpression": {
																	"hexValue": "343530",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1466:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	},
																	"value": "450"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1392:285:1",
															"trueExpression": {
																"hexValue": "363735",
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1418:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_675_by_1",
																	"typeString": "int_const 675"
																},
																"value": "675"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"id": 197,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1378:309:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 161,
												"id": 198,
												"nodeType": "Return",
												"src": "1371:316:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicGradeAmount",
									"nameLocation": "1199:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "1239:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1225:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1225:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:21:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1293:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:9:1"
									},
									"scope": 394,
									"src": "1190:504:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "1804:286:1",
										"statements": [
											{
												"body": {
													"id": 235,
													"nodeType": "Block",
													"src": "1847:218:1",
													"statements": [
														{
															"assignments": [
																218
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 218,
																	"mutability": "mutable",
																	"name": "randomNumber",
																	"nameLocation": "1869:12:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 235,
																	"src": "1861:20:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 217,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1861:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 222,
															"initialValue": {
																"arguments": [
																	{
																		"id": 220,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "1908:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 219,
																	"name": "makeRandomNumberForItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1884:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1884:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1861:49:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "1929:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 224,
																	"name": "randomNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1939:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1929:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 233,
																"nodeType": "Block",
																"src": "2014:41:1",
																"statements": [
																	{
																		"expression": {
																			"id": 231,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "2039:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 206,
																		"id": 232,
																		"nodeType": "Return",
																		"src": "2032:8:1"
																	}
																]
															},
															"id": 234,
															"nodeType": "IfStatement",
															"src": "1925:130:1",
															"trueBody": {
																"id": 230,
																"nodeType": "Block",
																"src": "1953:55:1",
																"statements": [
																	{
																		"expression": {
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 226,
																				"name": "_power",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 202,
																				"src": "1971:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 227,
																				"name": "randomNumber",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 218,
																				"src": "1981:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1971:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 229,
																		"nodeType": "ExpressionStatement",
																		"src": "1971:22:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 211,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1834:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "35",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1834:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"initializationExpression": {
													"assignments": [
														208
													],
													"declarations": [
														{
															"constant": false,
															"id": 208,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1827:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 236,
															"src": "1819:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 207,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1819:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 210,
													"initialValue": {
														"hexValue": "31",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1831:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1819:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1842:3:1",
														"subExpression": {
															"id": 214,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1842:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 216,
													"nodeType": "ExpressionStatement",
													"src": "1842:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1814:251:1"
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2082:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 206,
												"id": 238,
												"nodeType": "Return",
												"src": "2075:8:1"
											}
										]
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateItemIndex",
									"nameLocation": "1709:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "1736:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "1728:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:16:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "1791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:9:1"
									},
									"scope": 394,
									"src": "1700:390:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2216:934:1",
										"statements": [
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "gradeCheck",
														"nameLocation": "2234:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2226:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 249,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2226:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 254,
																	"name": "grade",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "2263:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2257:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 252,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2257:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2257:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 251,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2247:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2247:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2226:44:1"
											},
											{
												"assignments": [
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "basicPower",
														"nameLocation": "2289:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2281:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 287,
												"initialValue": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 260,
																	"name": "gradeCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "2316:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 261,
																	"name": "MYTHOLOGY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "2330:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2316:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 264,
																		"name": "gradeCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "2348:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 265,
																		"name": "LEGENDARY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "2362:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "2348:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 268,
																			"name": "gradeCheck",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 250,
																			"src": "2412:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 269,
																			"name": "EPIC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "2426:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "2412:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 272,
																				"name": "gradeCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 250,
																				"src": "2471:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 273,
																				"name": "ADMINISTRATOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "2485:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2471:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"id": 278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 276,
																					"name": "gradeCheck",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 250,
																					"src": "2539:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 277,
																					"name": "NORMAL",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 77,
																					"src": "2553:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"src": "2539:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2600:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "2539:62:1",
																			"trueExpression": {
																				"hexValue": "313030",
																				"id": 279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2578:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "2471:130:1",
																		"trueExpression": {
																			"hexValue": "313530",
																			"id": 275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2517:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_150_by_1",
																				"typeString": "int_const 150"
																			},
																			"value": "150"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "2412:189:1",
																	"trueExpression": {
																		"hexValue": "323030",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2449:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "2348:253:1",
																"trueExpression": {
																	"hexValue": "333030",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2390:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"value": "300"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2316:285:1",
															"trueExpression": {
																"hexValue": "343530",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2342:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_450_by_1",
																	"typeString": "int_const 450"
																},
																"value": "450"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"id": 286,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2302:309:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:330:1"
											},
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "levelCheck",
														"nameLocation": "2630:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2622:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2622:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"components": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 290,
																	"name": "level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "2657:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2666:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2657:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 294,
																		"name": "level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2675:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2684:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2675:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 298,
																			"name": "level",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "2693:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2702:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "2693:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 302,
																				"name": "level",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 244,
																				"src": "2711:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2720:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "2711:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 306,
																					"name": "level",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 244,
																					"src": "2761:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 307,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2770:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "2761:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "2761:51:1",
																			"trueExpression": {
																				"hexValue": "3730",
																				"id": 309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2790:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_70_by_1",
																					"typeString": "int_const 70"
																				},
																				"value": "70"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "2711:101:1",
																		"trueExpression": {
																			"hexValue": "3430",
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2740:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_40_by_1",
																				"typeString": "int_const 40"
																			},
																			"value": "40"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "2693:119:1",
																	"trueExpression": {
																		"hexValue": "3235",
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2706:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_25_by_1",
																			"typeString": "int_const 25"
																		},
																		"value": "25"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "2675:137:1",
																"trueExpression": {
																	"hexValue": "3135",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2688:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "15"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2657:155:1",
															"trueExpression": {
																"hexValue": "3130",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2670:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 316,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2643:179:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2622:200:1"
											},
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "itemPower",
														"nameLocation": "2841:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2833:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2833:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"hexValue": "30",
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2853:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2833:21:1"
											},
											{
												"body": {
													"id": 356,
													"nodeType": "Block",
													"src": "2898:184:1",
													"statements": [
														{
															"assignments": [
																333
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 333,
																	"mutability": "mutable",
																	"name": "balanceOf",
																	"nameLocation": "2920:9:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 356,
																	"src": "2912:17:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 332,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2912:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 340,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 336,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2947:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2947:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 338,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "2959:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 334,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "2932:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IKIP37Full_$548",
																			"typeString": "contract IKIP37Full"
																		}
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 488,
																	"src": "2932:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view external returns (uint256)"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2932:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2912:49:1"
														},
														{
															"assignments": [
																342
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 342,
																	"mutability": "mutable",
																	"name": "basicItemPower",
																	"nameLocation": "2983:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 356,
																	"src": "2975:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 341,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2975:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 346,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 343,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "3000:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3004:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3000:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2975:30:1"
														},
														{
															"expression": {
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 347,
																	"name": "itemPower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "3019:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 348,
																		"name": "itemPower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "3031:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 349,
																					"name": "basicItemPower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "3044:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 350,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 333,
																					"src": "3061:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3044:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 352,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3043:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3031:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3019:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 355,
															"nodeType": "ExpressionStatement",
															"src": "3019:52:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 326,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "2885:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "35",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2890:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "2885:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 357,
												"initializationExpression": {
													"assignments": [
														323
													],
													"declarations": [
														{
															"constant": false,
															"id": 323,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2878:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 357,
															"src": "2870:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 322,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2870:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 325,
													"initialValue": {
														"hexValue": "31",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2882:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2870:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2893:3:1",
														"subExpression": {
															"id": 329,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "2893:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 331,
													"nodeType": "ExpressionStatement",
													"src": "2893:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2865:217:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 358,
																				"name": "basicPower",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "3101:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 359,
																				"name": "itemPower",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 319,
																				"src": "3114:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3101:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 361,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3100:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 362,
																	"name": "levelCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "3127:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3100:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 364,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3099:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3141:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "3099:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 367,
												"nodeType": "Return",
												"src": "3092:51:1"
											}
										]
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePower",
									"nameLocation": "2105:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "2134:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2120:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2120:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "2149:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2141:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:36:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2203:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:9:1"
									},
									"scope": 394,
									"src": "2096:1054:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3270:289:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 381,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3397:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3397:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 383,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3438:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "difficulty",
																				"nodeType": "MemberAccess",
																				"src": "3438:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 385,
																				"name": "_tokenIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 371,
																				"src": "3480:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 379,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3355:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "3355:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3355:158:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 378,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "3324:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3324:207:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3299:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 376,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3299:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3299:246:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3548:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "3299:253:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 375,
												"id": 391,
												"nodeType": "Return",
												"src": "3280:272:1"
											}
										]
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeRandomNumberForItem",
									"nameLocation": "3165:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "3197:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3189:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:21:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3257:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3257:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3256:9:1"
									},
									"scope": 394,
									"src": "3156:403:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 395,
							"src": "146:3415:1",
							"usedErrors": []
						}
					],
					"src": "32:3530:1"
				},
				"id": 1
			},
			"interface/IKIP13.sol": {
				"ast": {
					"absolutePath": "interface/IKIP13.sol",
					"exportedSymbols": {
						"IKIP13": [
							406
						]
					},
					"id": 407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "258:22:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "282:142:2",
								"text": " @dev Interface of the KIP13 standard as defined in the KIP.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard"
							},
							"fullyImplemented": false,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "IKIP13",
							"nameLocation": "435:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "448:387:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n to learn more about how these ids are created.\n Requirements:\n - implementation of this function call must use less than 30 000 gas"
									},
									"functionSelector": "01ffc9a7",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "849:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "874:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "867:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 399,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "867:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:20:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "910:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "910:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:6:2"
									},
									"scope": 406,
									"src": "840:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 407,
							"src": "425:493:2",
							"usedErrors": []
						}
					],
					"src": "258:661:2"
				},
				"id": 2
			},
			"interface/IKIP37/IKIP37.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37.sol",
					"exportedSymbols": {
						"IKIP13": [
							406
						],
						"IKIP37": [
							524
						]
					},
					"id": 525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 408,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:3"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 525,
							"sourceUnit": 407,
							"src": "56:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 410,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 406,
										"src": "101:6:3"
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "101:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 524,
							"linearizedBaseContracts": [
								524,
								406
							],
							"name": "IKIP37",
							"nameLocation": "91:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 423,
									"name": "TransferSingle",
									"nameLocation": "120:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "160:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "144:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "195:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "179:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "226:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "210:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "247:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "239:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "268:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "260:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:146:3"
									},
									"src": "114:167:3"
								},
								{
									"anonymous": false,
									"id": 437,
									"name": "TransferBatch",
									"nameLocation": "292:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "331:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "315:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "366:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "350:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "397:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "381:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "410:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 430,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "410:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 431,
													"nodeType": "ArrayTypeName",
													"src": "410:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": false,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "434:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 433,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "434:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 434,
													"nodeType": "ArrayTypeName",
													"src": "434:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:152:3"
									},
									"src": "286:172:3"
								},
								{
									"anonymous": false,
									"id": 445,
									"name": "ApprovalForAll",
									"nameLocation": "469:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "509:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "493:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "541:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "525:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "565:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "560:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:97:3"
									},
									"src": "463:118:3"
								},
								{
									"anonymous": false,
									"id": 451,
									"name": "URI",
									"nameLocation": "592:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "603:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "596:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "596:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "627:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "611:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:36:3"
									},
									"src": "586:46:3"
								},
								{
									"functionSelector": "f242432a",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "647:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "681:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "673:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "704:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "696:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "725:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "717:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "746:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "738:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "777:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "762:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:125:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:0:3"
									},
									"scope": 524,
									"src": "638:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2eb2c2d6",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "813:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "852:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "844:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "875:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "867:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "907:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "888:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 469,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "888:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 470,
													"nodeType": "ArrayTypeName",
													"src": "888:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "921:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 472,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "921:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 473,
													"nodeType": "ArrayTypeName",
													"src": "921:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "972:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "957:20:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "957:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:149:3"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:3"
									},
									"scope": 524,
									"src": "804:189:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00fdd58e",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1026:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1018:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1042:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1034:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:29:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1094:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:3"
									},
									"scope": 524,
									"src": "999:104:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e1273f4",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1118:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "_owners",
												"nameLocation": "1152:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1133:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 489,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1133:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 490,
													"nodeType": "ArrayTypeName",
													"src": "1133:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "1180:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1161:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 492,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1161:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 493,
													"nodeType": "ArrayTypeName",
													"src": "1161:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:53:3"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1233:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 496,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1233:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 497,
													"nodeType": "ArrayTypeName",
													"src": "1233:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:18:3"
									},
									"scope": 524,
									"src": "1109:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1266:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1292:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1284:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1308:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1303:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1303:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:35:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:3"
									},
									"scope": 524,
									"src": "1257:71:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1343:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1368:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1360:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1384:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1376:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:35:3"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1442:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:6:3"
									},
									"scope": 524,
									"src": "1334:114:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bd85b039",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1463:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1483:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1475:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:13:3"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1511:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:3"
									},
									"scope": 524,
									"src": "1454:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 525,
							"src": "81:1441:3",
							"usedErrors": []
						}
					],
					"src": "32:1491:3"
				},
				"id": 3
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37Full.sol",
					"exportedSymbols": {
						"IKIP13": [
							406
						],
						"IKIP37": [
							524
						],
						"IKIP37Full": [
							548
						],
						"IKIP37MetadataURI": [
							561
						]
					},
					"id": 549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 526,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:4"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
							"file": "./IKIP37MetadataURI.sol",
							"id": 527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 562,
							"src": "56:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 528,
										"name": "IKIP37MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 561,
										"src": "115:17:4"
									},
									"id": 529,
									"nodeType": "InheritanceSpecifier",
									"src": "115:17:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 548,
							"linearizedBaseContracts": [
								548,
								561,
								524,
								406
							],
							"name": "IKIP37Full",
							"nameLocation": "101:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "156e29f6",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "148:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "170:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "162:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "193:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "185:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "219:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "211:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:80:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:4"
									},
									"scope": 548,
									"src": "139:103:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f5298aca",
									"id": 547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "257:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "279:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "271:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "302:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "294:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "328:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "320:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:80:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:4"
									},
									"scope": 548,
									"src": "248:103:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 549,
							"src": "91:262:4",
							"usedErrors": []
						}
					],
					"src": "32:322:4"
				},
				"id": 4
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
					"exportedSymbols": {
						"IKIP13": [
							406
						],
						"IKIP37": [
							524
						],
						"IKIP37MetadataURI": [
							561
						]
					},
					"id": 562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 550,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:5"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37.sol",
							"file": "./IKIP37.sol",
							"id": 551,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 525,
							"src": "56:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 552,
										"name": "IKIP37",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 524,
										"src": "111:6:5"
									},
									"id": 553,
									"nodeType": "InheritanceSpecifier",
									"src": "111:6:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 561,
							"linearizedBaseContracts": [
								561,
								524,
								406
							],
							"name": "IKIP37MetadataURI",
							"nameLocation": "90:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0e89341c",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "133:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "145:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "137:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:12:5"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "172:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "172:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:15:5"
									},
									"scope": 561,
									"src": "124:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 562,
							"src": "80:109:5",
							"usedErrors": []
						}
					],
					"src": "32:158:5"
				},
				"id": 5
			}
		}
	}
}