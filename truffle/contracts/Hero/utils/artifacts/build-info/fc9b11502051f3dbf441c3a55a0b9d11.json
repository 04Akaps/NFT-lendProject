{
	"id": "fc9b11502051f3dbf441c3a55a0b9d11",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Hero/utils/HeroController.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../utils/SafeMath.sol\";\n\nimport \"../interface/IHeroNFT.sol\";\nimport \"../interface/ILevelDiagram.sol\";\n\nimport \"../../interface/IKIP7/IKIP7.sol\";\nimport \"../../interface/IKIP37/IKIP37Full.sol\";\n\ncontract HeroController {\n    using SafeMath for *;\n\n    IHeroNFT private heroNFT;\n    IKIP7 private token;\n    IKIP37Full private item;\n    ILevelDiagram private levelDiagram;\n\n    address payable private coreOwner;\n    address depositAddress;\n    address miningAddress;\n\n    bool private paused;\n    bool private miningPaused;\n\n    uint256 public priceOfKlay;\n    uint256 public priceOfToken;\n    uint256 private constant DECIMALS = 1e18;\n\n    modifier notPaused() {\n        require(!paused, \"Paused State\");\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\");\n        _;\n    }\n\n    constructor() {\n        paused = true;\n        miningPaused = true;\n        coreOwner = payable(msg.sender);\n    }\n\n        // ILevelDiagram private levelDiagram;\n\n    function initialize(\n        address _heroNFT,\n        address _token,\n        address _item,\n        address _levelDiagram,\n        address _depositAddress,\n        address _miningAddress,\n        uint256 _klay,\n        uint256 _tokenPrice\n    ) external onlyOwner {\n        priceOfKlay = _klay.mul(DECIMALS);\n        priceOfToken = _tokenPrice.mul(DECIMALS);\n\n        heroNFT = IHeroNFT(_heroNFT);\n        token = IKIP7(_token);\n        item = IKIP37Full(_item);\n        levelDiagram = ILevelDiagram(_levelDiagram);\n\n        depositAddress = _depositAddress;\n        miningAddress = _miningAddress;\n    }\n\n    function changePaused() external onlyOwner {\n        paused = !paused;\n    }\n\n    function changeMiningPaused() external onlyOwner {\n        miningPaused = !miningPaused;\n    }\n\n    // **** view Function ****\n\n    function getOwner() public view returns (address payable) {\n        return coreOwner;\n    }\n\n    function getPaused() public view returns (bool) {\n        return paused;\n    }\n\n    function getMiningPaused() public view returns (bool) {\n        return miningPaused;\n    }\n\n    function getLevelDiagram() public view returns(ILevelDiagram){\n        return levelDiagram;\n    }\n\n    function getItem() public view returns (IKIP37Full) {\n        return item;\n    }\n\n    function getToken() public view returns (IKIP7) {\n        return token;\n    }\n\n    function getHeroNFT() public view returns (IHeroNFT) {\n        return heroNFT;\n    }\n\n    function _currentTime() internal view returns (uint256) {\n        return block.timestamp;\n    }\n}\n"
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37MetadataURI.sol\";\n\ninterface IKIP37Full is IKIP37MetadataURI {\n    function mint(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n\n    function burn(\n        address _user,\n        uint256 _tokenId,\n        uint256 _amount\n    ) external;\n}\n"
			},
			"interface/IKIP7/IKIP7.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP7 standard as defined in the KIP.\n * See http://kips.klaytn.com/KIPs/kip-7-fungible_token\n */\ninterface IKIP7 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev  Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(address recipient, uint256 amount) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external;\n}\n"
			},
			"Hero/interface/ILevelDiagram.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nabstract contract ILevelDiagram {\n     function calculateTokenAmount(string memory grade, uint256 level)\n        public\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateBasicLevelAmount(uint256 level)\n        internal\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateBasicGradeAmount(string memory grade)\n        internal\n        pure\n        virtual\n        returns (uint256);\n\n    function calculateItemIndex(uint256 _power)\n        internal\n        view\n        virtual\n        returns (uint256);\n\n    function calculatePower(string memory grade, uint256 level)\n        internal\n        view\n        virtual\n        returns (uint256);\n\n    function makeRandomNumberForItem(uint256 _tokenIndex)\n        internal\n        view\n        virtual\n        returns (uint256);\n}"
			},
			"Hero/interface/IHeroNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../../interface/IKIP17/IKIP17.sol\";\n\ninterface IHeroNFT is IKIP17 {\n    function mint(address _to) external;\n\n    function burn(uint256 _tokenId) external;\n\n    function setContract(address _heroCore) external;\n\n    function getHeroCore() external view returns (address);\n\n    function getTokenIndex() external view returns (uint256);\n}\n"
			},
			"utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"./IKIP37.sol\";\n\ninterface IKIP37MetadataURI is IKIP37 {\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"interface/IKIP17/IKIP17.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/IKIP17.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/IERC721.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IKIP17 is IKIP13 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed approved,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId)\n        external\n        view\n        returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator)\n        external\n        view\n        returns (bool);\n}\n"
			},
			"interface/IKIP37/IKIP37.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"../IKIP13.sol\";\n\ninterface IKIP37 is IKIP13 {\n    event TransferSingle(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256 _id,\n        uint256 _value\n    );\n    event TransferBatch(\n        address indexed _operator,\n        address indexed _from,\n        address indexed _to,\n        uint256[] _ids,\n        uint256[] _values\n    );\n    event ApprovalForAll(\n        address indexed _owner,\n        address indexed _operator,\n        bool _approved\n    );\n    event URI(string _value, uint256 indexed _id);\n\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _id,\n        uint256 _value,\n        bytes calldata _data\n    ) external;\n\n    function safeBatchTransferFrom(\n        address _from,\n        address _to,\n        uint256[] calldata _ids,\n        uint256[] calldata _values,\n        bytes calldata _data\n    ) external;\n\n    function balanceOf(address _owner, uint256 _id)\n        external\n        view\n        returns (uint256);\n\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    function isApprovedForAll(address _owner, address _operator)\n        external\n        view\n        returns (bool);\n\n    function totalSupply(uint256 _id) external view returns (uint256);\n}\n"
			},
			"interface/IKIP13.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity 0.8.4;\n\n/**\n * @dev Interface of the KIP13 standard as defined in the KIP.\n *\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\n */\ninterface IKIP13 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`.\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n     * to learn more about how these ids are created.\n     *\n     * Requirements:\n     *\n     * - implementation of this function call must use less than 30 000 gas\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Hero/interface/IHeroNFT.sol": {
				"IHeroNFT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHeroCore",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_heroCore",
									"type": "address"
								}
							],
							"name": "setContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"getHeroCore()": "bcbb72c8",
							"getTokenIndex()": "295d3ee8",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address)": "6a627842",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setContract(address)": "75f890ab",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHeroCore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heroCore\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/interface/IHeroNFT.sol\":\"IHeroNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/IHeroNFT.sol\":{\"keccak256\":\"0x28719918b6bcd5da2fc05c963dd0c407c3d256a41ba787fd7dd05cfb8e0eefbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922cc5d0a7c86837ac8697ee76295642fb8ca35453f7e2b20392dc4d3403e651\",\"dweb:/ipfs/QmPYwhoSmrcTJDR8HgQKH4nTfauncjRUMBDWJTAY99ygX5\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/interface/ILevelDiagram.sol": {
				"ILevelDiagram": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "grade",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateTokenAmount(string,uint256)": "aa93c0ee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"grade\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/interface/ILevelDiagram.sol\":\"ILevelDiagram\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0xc0fbbbe5dc964f6f965fc1abde3b5cc387b9ec09527a147f261bfdead58a3b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9303cf1617cff14dbcd02dea01cdb5e5306e0c6196f31208f1ffce1bf4de3466\",\"dweb:/ipfs/QmWJrmzoPuR8oDUQ56pm2Z4DrvTVr7frpsLtGdWdAHsEi6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Hero/utils/HeroController.sol": {
				"HeroController": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "changeMiningPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "changePaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHeroNFT",
							"outputs": [
								{
									"internalType": "contract IHeroNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getItem",
							"outputs": [
								{
									"internalType": "contract IKIP37Full",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLevelDiagram",
							"outputs": [
								{
									"internalType": "contract ILevelDiagram",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMiningPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getToken",
							"outputs": [
								{
									"internalType": "contract IKIP7",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_heroNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_item",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_levelDiagram",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_depositAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_miningAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_klay",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfKlay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOfToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Hero/utils/HeroController.sol\":261:2641  contract HeroController {... */\n  mstore(0x40, 0x80)\n    /* \"Hero/utils/HeroController.sol\":911:1025  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Hero/utils/HeroController.sol\":944:948  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":935:941  paused */\n  0x06\n  0x14\n    /* \"Hero/utils/HeroController.sol\":935:948  paused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":973:977  true */\n  0x01\n    /* \"Hero/utils/HeroController.sol\":958:970  miningPaused */\n  0x06\n  0x15\n    /* \"Hero/utils/HeroController.sol\":958:977  miningPaused = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":1007:1017  msg.sender */\n  caller\n    /* \"Hero/utils/HeroController.sol\":987:996  coreOwner */\n  0x04\n  0x00\n    /* \"Hero/utils/HeroController.sol\":987:1018  coreOwner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Hero/utils/HeroController.sol\":261:2641  contract HeroController {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Hero/utils/HeroController.sol\":261:2641  contract HeroController {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9eb4eae5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc412eaba\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc740671f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd36d0c18\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xee72b8cc\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x1b9cbdfb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21df0da7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x28919df6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a1a8080\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6805b84b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7cac00ee\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Hero/utils/HeroController.sol\":627:654  uint256 public priceOfToken */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2371:2448  function getToken() public view returns (IKIP7) {... */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2086:2176  function getMiningPaused() public view returns (bool) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":595:621  uint256 public priceOfKlay */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2002:2080  function getPaused() public view returns (bool) {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":2454:2538  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1905:1996  function getOwner() public view returns (address payable) {... */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1691:1767  function changePaused() external onlyOwner {... */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Hero/utils/HeroController.sol\":2285:2365  function getItem() public view returns (IKIP37Full) {... */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1079:1685  function initialize(... */\n    tag_12:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"Hero/utils/HeroController.sol\":2182:2279  function getLevelDiagram() public view returns(ILevelDiagram){... */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Hero/utils/HeroController.sol\":1773:1867  function changeMiningPaused() external onlyOwner {... */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"Hero/utils/HeroController.sol\":627:654  uint256 public priceOfToken */\n    tag_17:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2371:2448  function getToken() public view returns (IKIP7) {... */\n    tag_21:\n        /* \"Hero/utils/HeroController.sol\":2412:2417  IKIP7 */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2436:2441  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2429:2441  return token */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2371:2448  function getToken() public view returns (IKIP7) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2086:2176  function getMiningPaused() public view returns (bool) {... */\n    tag_25:\n        /* \"Hero/utils/HeroController.sol\":2134:2138  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2157:2169  miningPaused */\n      0x06\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":2150:2169  return miningPaused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2086:2176  function getMiningPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":595:621  uint256 public priceOfKlay */\n    tag_29:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2002:2080  function getPaused() public view returns (bool) {... */\n    tag_32:\n        /* \"Hero/utils/HeroController.sol\":2044:2048  bool */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2067:2073  paused */\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":2060:2073  return paused */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2002:2080  function getPaused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2454:2538  function getHeroNFT() public view returns (IHeroNFT) {... */\n    tag_35:\n        /* \"Hero/utils/HeroController.sol\":2497:2505  IHeroNFT */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2524:2531  heroNFT */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2517:2531  return heroNFT */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2454:2538  function getHeroNFT() public view returns (IHeroNFT) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1905:1996  function getOwner() public view returns (address payable) {... */\n    tag_39:\n        /* \"Hero/utils/HeroController.sol\":1946:1961  address payable */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1980:1989  coreOwner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":1973:1989  return coreOwner */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":1905:1996  function getOwner() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1691:1767  function changePaused() external onlyOwner {... */\n    tag_43:\n        /* \"Hero/utils/HeroController.sol\":847:856  coreOwner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:843  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":825:887  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"Hero/utils/HeroController.sol\":1754:1760  paused */\n      0x06\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1753:1760  !paused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1744:1750  paused */\n      0x06\n      0x14\n        /* \"Hero/utils/HeroController.sol\":1744:1760  paused = !paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1691:1767  function changePaused() external onlyOwner {... */\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2285:2365  function getItem() public view returns (IKIP37Full) {... */\n    tag_45:\n        /* \"Hero/utils/HeroController.sol\":2325:2335  IKIP37Full */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2354:2358  item */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2347:2358  return item */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2285:2365  function getItem() public view returns (IKIP37Full) {... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1079:1685  function initialize(... */\n    tag_51:\n        /* \"Hero/utils/HeroController.sol\":847:856  coreOwner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:843  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":825:887  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_66\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"Hero/utils/HeroController.sol\":1369:1388  _klay.mul(DECIMALS) */\n      tag_73\n        /* \"Hero/utils/HeroController.sol\":696:700  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1369:1374  _klay */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1369:1378  _klay.mul */\n      tag_74\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1369:1388  _klay.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"Hero/utils/HeroController.sol\":1355:1366  priceOfKlay */\n      0x07\n        /* \"Hero/utils/HeroController.sol\":1355:1388  priceOfKlay = _klay.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1413:1438  _tokenPrice.mul(DECIMALS) */\n      tag_75\n        /* \"Hero/utils/HeroController.sol\":696:700  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Hero/utils/HeroController.sol\":1413:1424  _tokenPrice */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1413:1428  _tokenPrice.mul */\n      tag_74\n      swap1\n        /* \"Hero/utils/HeroController.sol\":1413:1438  _tokenPrice.mul(DECIMALS) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"Hero/utils/HeroController.sol\":1398:1410  priceOfToken */\n      0x08\n        /* \"Hero/utils/HeroController.sol\":1398:1438  priceOfToken = _tokenPrice.mul(DECIMALS) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1468:1476  _heroNFT */\n      dup8\n        /* \"Hero/utils/HeroController.sol\":1449:1456  heroNFT */\n      0x00\n      dup1\n        /* \"Hero/utils/HeroController.sol\":1449:1477  heroNFT = IHeroNFT(_heroNFT) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1501:1507  _token */\n      dup7\n        /* \"Hero/utils/HeroController.sol\":1487:1492  token */\n      0x01\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1487:1508  token = IKIP7(_token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1536:1541  _item */\n      dup6\n        /* \"Hero/utils/HeroController.sol\":1518:1522  item */\n      0x02\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1518:1542  item = IKIP37Full(_item) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1581:1594  _levelDiagram */\n      dup5\n        /* \"Hero/utils/HeroController.sol\":1552:1564  levelDiagram */\n      0x03\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1552:1595  levelDiagram = ILevelDiagram(_levelDiagram) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1623:1638  _depositAddress */\n      dup4\n        /* \"Hero/utils/HeroController.sol\":1606:1620  depositAddress */\n      0x05\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1606:1638  depositAddress = _depositAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1664:1678  _miningAddress */\n      dup3\n        /* \"Hero/utils/HeroController.sol\":1648:1661  miningAddress */\n      0x06\n      0x00\n        /* \"Hero/utils/HeroController.sol\":1648:1678  miningAddress = _miningAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1079:1685  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":2182:2279  function getLevelDiagram() public view returns(ILevelDiagram){... */\n    tag_53:\n        /* \"Hero/utils/HeroController.sol\":2229:2242  ILevelDiagram */\n      0x00\n        /* \"Hero/utils/HeroController.sol\":2260:2272  levelDiagram */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":2253:2272  return levelDiagram */\n      swap1\n      pop\n        /* \"Hero/utils/HeroController.sol\":2182:2279  function getLevelDiagram() public view returns(ILevelDiagram){... */\n      swap1\n      jump\t// out\n        /* \"Hero/utils/HeroController.sol\":1773:1867  function changeMiningPaused() external onlyOwner {... */\n    tag_57:\n        /* \"Hero/utils/HeroController.sol\":847:856  coreOwner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Hero/utils/HeroController.sol\":833:843  msg.sender */\n      caller\n        /* \"Hero/utils/HeroController.sol\":833:856  msg.sender == coreOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Hero/utils/HeroController.sol\":825:887  require(msg.sender == coreOwner, \"HeroCore Error : onlyOwner\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_66\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"Hero/utils/HeroController.sol\":1848:1860  miningPaused */\n      0x06\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Hero/utils/HeroController.sol\":1847:1860  !miningPaused */\n      iszero\n        /* \"Hero/utils/HeroController.sol\":1832:1844  miningPaused */\n      0x06\n      0x15\n        /* \"Hero/utils/HeroController.sol\":1832:1860  miningPaused = !miningPaused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Hero/utils/HeroController.sol\":1773:1867  function changeMiningPaused() external onlyOwner {... */\n      jump\t// out\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_74:\n        /* \"utils/SafeMath.sol\":341:348  uint256 */\n      0x00\n        /* \"utils/SafeMath.sol\":371:372  b */\n      dup2\n        /* \"utils/SafeMath.sol\":367:368  a */\n      dup4\n        /* \"utils/SafeMath.sol\":367:372  a * b */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"utils/SafeMath.sol\":360:372  return a * b */\n      swap1\n      pop\n        /* \"utils/SafeMath.sol\":283:379  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_85:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_87\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_89:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_91\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:1579   */\n    tag_50:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":467:473   */\n      0x00\n        /* \"#utility.yul\":475:481   */\n      dup1\n        /* \"#utility.yul\":524:527   */\n      0x0100\n        /* \"#utility.yul\":512:521   */\n      dup10\n        /* \"#utility.yul\":503:510   */\n      dup12\n        /* \"#utility.yul\":499:522   */\n      sub\n        /* \"#utility.yul\":495:528   */\n      slt\n        /* \"#utility.yul\":492:494   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":541:542   */\n      0x00\n        /* \"#utility.yul\":538:539   */\n      dup1\n        /* \"#utility.yul\":531:543   */\n      revert\n        /* \"#utility.yul\":492:494   */\n    tag_94:\n        /* \"#utility.yul\":584:585   */\n      0x00\n        /* \"#utility.yul\":609:662   */\n      tag_95\n        /* \"#utility.yul\":654:661   */\n      dup12\n        /* \"#utility.yul\":645:651   */\n      dup3\n        /* \"#utility.yul\":634:643   */\n      dup13\n        /* \"#utility.yul\":630:652   */\n      add\n        /* \"#utility.yul\":609:662   */\n      tag_85\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":599:662   */\n      swap9\n      pop\n        /* \"#utility.yul\":555:672   */\n      pop\n        /* \"#utility.yul\":711:713   */\n      0x20\n        /* \"#utility.yul\":737:790   */\n      tag_96\n        /* \"#utility.yul\":782:789   */\n      dup12\n        /* \"#utility.yul\":773:779   */\n      dup3\n        /* \"#utility.yul\":762:771   */\n      dup13\n        /* \"#utility.yul\":758:780   */\n      add\n        /* \"#utility.yul\":737:790   */\n      tag_85\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":727:790   */\n      swap8\n      pop\n        /* \"#utility.yul\":682:800   */\n      pop\n        /* \"#utility.yul\":839:841   */\n      0x40\n        /* \"#utility.yul\":865:918   */\n      tag_97\n        /* \"#utility.yul\":910:917   */\n      dup12\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":890:899   */\n      dup13\n        /* \"#utility.yul\":886:908   */\n      add\n        /* \"#utility.yul\":865:918   */\n      tag_85\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":855:918   */\n      swap7\n      pop\n        /* \"#utility.yul\":810:928   */\n      pop\n        /* \"#utility.yul\":967:969   */\n      0x60\n        /* \"#utility.yul\":993:1046   */\n      tag_98\n        /* \"#utility.yul\":1038:1045   */\n      dup12\n        /* \"#utility.yul\":1029:1035   */\n      dup3\n        /* \"#utility.yul\":1018:1027   */\n      dup13\n        /* \"#utility.yul\":1014:1036   */\n      add\n        /* \"#utility.yul\":993:1046   */\n      tag_85\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":983:1046   */\n      swap6\n      pop\n        /* \"#utility.yul\":938:1056   */\n      pop\n        /* \"#utility.yul\":1095:1098   */\n      0x80\n        /* \"#utility.yul\":1122:1175   */\n      tag_99\n        /* \"#utility.yul\":1167:1174   */\n      dup12\n        /* \"#utility.yul\":1158:1164   */\n      dup3\n        /* \"#utility.yul\":1147:1156   */\n      dup13\n        /* \"#utility.yul\":1143:1165   */\n      add\n        /* \"#utility.yul\":1122:1175   */\n      tag_85\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1112:1175   */\n      swap5\n      pop\n        /* \"#utility.yul\":1066:1185   */\n      pop\n        /* \"#utility.yul\":1224:1227   */\n      0xa0\n        /* \"#utility.yul\":1251:1304   */\n      tag_100\n        /* \"#utility.yul\":1296:1303   */\n      dup12\n        /* \"#utility.yul\":1287:1293   */\n      dup3\n        /* \"#utility.yul\":1276:1285   */\n      dup13\n        /* \"#utility.yul\":1272:1294   */\n      add\n        /* \"#utility.yul\":1251:1304   */\n      tag_85\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1241:1304   */\n      swap4\n      pop\n        /* \"#utility.yul\":1195:1314   */\n      pop\n        /* \"#utility.yul\":1353:1356   */\n      0xc0\n        /* \"#utility.yul\":1380:1433   */\n      tag_101\n        /* \"#utility.yul\":1425:1432   */\n      dup12\n        /* \"#utility.yul\":1416:1422   */\n      dup3\n        /* \"#utility.yul\":1405:1414   */\n      dup13\n        /* \"#utility.yul\":1401:1423   */\n      add\n        /* \"#utility.yul\":1380:1433   */\n      tag_89\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1370:1433   */\n      swap3\n      pop\n        /* \"#utility.yul\":1324:1443   */\n      pop\n        /* \"#utility.yul\":1482:1485   */\n      0xe0\n        /* \"#utility.yul\":1509:1562   */\n      tag_102\n        /* \"#utility.yul\":1554:1561   */\n      dup12\n        /* \"#utility.yul\":1545:1551   */\n      dup3\n        /* \"#utility.yul\":1534:1543   */\n      dup13\n        /* \"#utility.yul\":1530:1552   */\n      add\n        /* \"#utility.yul\":1509:1562   */\n      tag_89\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1499:1562   */\n      swap2\n      pop\n        /* \"#utility.yul\":1453:1572   */\n      pop\n        /* \"#utility.yul\":482:1579   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1585:1727   */\n    tag_103:\n        /* \"#utility.yul\":1688:1720   */\n      tag_105\n        /* \"#utility.yul\":1714:1719   */\n      dup2\n        /* \"#utility.yul\":1688:1720   */\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1721   */\n      mstore\n        /* \"#utility.yul\":1666:1727   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1733:1842   */\n    tag_107:\n        /* \"#utility.yul\":1814:1835   */\n      tag_109\n        /* \"#utility.yul\":1829:1834   */\n      dup2\n        /* \"#utility.yul\":1814:1835   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1809:1812   */\n      dup3\n        /* \"#utility.yul\":1802:1836   */\n      mstore\n        /* \"#utility.yul\":1792:1842   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1848:2009   */\n    tag_111:\n        /* \"#utility.yul\":1950:2002   */\n      tag_113\n        /* \"#utility.yul\":1996:2001   */\n      dup2\n        /* \"#utility.yul\":1950:2002   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1945:1948   */\n      dup3\n        /* \"#utility.yul\":1938:2003   */\n      mstore\n        /* \"#utility.yul\":1928:2009   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2015:2182   */\n    tag_115:\n        /* \"#utility.yul\":2120:2175   */\n      tag_117\n        /* \"#utility.yul\":2169:2174   */\n      dup2\n        /* \"#utility.yul\":2120:2175   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2115:2118   */\n      dup3\n        /* \"#utility.yul\":2108:2176   */\n      mstore\n        /* \"#utility.yul\":2098:2182   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2188:2345   */\n    tag_119:\n        /* \"#utility.yul\":2288:2338   */\n      tag_121\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2288:2338   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2283:2286   */\n      dup3\n        /* \"#utility.yul\":2276:2339   */\n      mstore\n        /* \"#utility.yul\":2266:2345   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2351:2522   */\n    tag_123:\n        /* \"#utility.yul\":2458:2515   */\n      tag_125\n        /* \"#utility.yul\":2509:2514   */\n      dup2\n        /* \"#utility.yul\":2458:2515   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2453:2456   */\n      dup3\n        /* \"#utility.yul\":2446:2516   */\n      mstore\n        /* \"#utility.yul\":2436:2522   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2528:2894   */\n    tag_127:\n        /* \"#utility.yul\":2670:2673   */\n      0x00\n        /* \"#utility.yul\":2691:2758   */\n      tag_129\n        /* \"#utility.yul\":2755:2757   */\n      0x1a\n        /* \"#utility.yul\":2750:2753   */\n      dup4\n        /* \"#utility.yul\":2691:2758   */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2684:2758   */\n      swap2\n      pop\n        /* \"#utility.yul\":2767:2860   */\n      tag_131\n        /* \"#utility.yul\":2856:2859   */\n      dup3\n        /* \"#utility.yul\":2767:2860   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2885:2887   */\n      0x20\n        /* \"#utility.yul\":2880:2883   */\n      dup3\n        /* \"#utility.yul\":2876:2888   */\n      add\n        /* \"#utility.yul\":2869:2888   */\n      swap1\n      pop\n        /* \"#utility.yul\":2674:2894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2900:3018   */\n    tag_133:\n        /* \"#utility.yul\":2987:3011   */\n      tag_135\n        /* \"#utility.yul\":3005:3010   */\n      dup2\n        /* \"#utility.yul\":2987:3011   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2982:2985   */\n      dup3\n        /* \"#utility.yul\":2975:3012   */\n      mstore\n        /* \"#utility.yul\":2965:3018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3024:3278   */\n    tag_41:\n        /* \"#utility.yul\":3133:3137   */\n      0x00\n        /* \"#utility.yul\":3171:3173   */\n      0x20\n        /* \"#utility.yul\":3160:3169   */\n      dup3\n        /* \"#utility.yul\":3156:3174   */\n      add\n        /* \"#utility.yul\":3148:3174   */\n      swap1\n      pop\n        /* \"#utility.yul\":3184:3271   */\n      tag_138\n        /* \"#utility.yul\":3268:3269   */\n      0x00\n        /* \"#utility.yul\":3257:3266   */\n      dup4\n        /* \"#utility.yul\":3253:3270   */\n      add\n        /* \"#utility.yul\":3244:3250   */\n      dup5\n        /* \"#utility.yul\":3184:3271   */\n      tag_103\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3138:3278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3284:3494   */\n    tag_27:\n        /* \"#utility.yul\":3371:3375   */\n      0x00\n        /* \"#utility.yul\":3409:3411   */\n      0x20\n        /* \"#utility.yul\":3398:3407   */\n      dup3\n        /* \"#utility.yul\":3394:3412   */\n      add\n        /* \"#utility.yul\":3386:3412   */\n      swap1\n      pop\n        /* \"#utility.yul\":3422:3487   */\n      tag_140\n        /* \"#utility.yul\":3484:3485   */\n      0x00\n        /* \"#utility.yul\":3473:3482   */\n      dup4\n        /* \"#utility.yul\":3469:3486   */\n      add\n        /* \"#utility.yul\":3460:3466   */\n      dup5\n        /* \"#utility.yul\":3422:3487   */\n      tag_107\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3376:3494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3500:3752   */\n    tag_37:\n        /* \"#utility.yul\":3608:3612   */\n      0x00\n        /* \"#utility.yul\":3646:3648   */\n      0x20\n        /* \"#utility.yul\":3635:3644   */\n      dup3\n        /* \"#utility.yul\":3631:3649   */\n      add\n        /* \"#utility.yul\":3623:3649   */\n      swap1\n      pop\n        /* \"#utility.yul\":3659:3745   */\n      tag_142\n        /* \"#utility.yul\":3742:3743   */\n      0x00\n        /* \"#utility.yul\":3731:3740   */\n      dup4\n        /* \"#utility.yul\":3727:3744   */\n      add\n        /* \"#utility.yul\":3718:3724   */\n      dup5\n        /* \"#utility.yul\":3659:3745   */\n      tag_111\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3613:3752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3758:4016   */\n    tag_47:\n        /* \"#utility.yul\":3869:3873   */\n      0x00\n        /* \"#utility.yul\":3907:3909   */\n      0x20\n        /* \"#utility.yul\":3896:3905   */\n      dup3\n        /* \"#utility.yul\":3892:3910   */\n      add\n        /* \"#utility.yul\":3884:3910   */\n      swap1\n      pop\n        /* \"#utility.yul\":3920:4009   */\n      tag_144\n        /* \"#utility.yul\":4006:4007   */\n      0x00\n        /* \"#utility.yul\":3995:4004   */\n      dup4\n        /* \"#utility.yul\":3991:4008   */\n      add\n        /* \"#utility.yul\":3982:3988   */\n      dup5\n        /* \"#utility.yul\":3920:4009   */\n      tag_115\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3874:4016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4022:4270   */\n    tag_23:\n        /* \"#utility.yul\":4128:4132   */\n      0x00\n        /* \"#utility.yul\":4166:4168   */\n      0x20\n        /* \"#utility.yul\":4155:4164   */\n      dup3\n        /* \"#utility.yul\":4151:4169   */\n      add\n        /* \"#utility.yul\":4143:4169   */\n      swap1\n      pop\n        /* \"#utility.yul\":4179:4263   */\n      tag_146\n        /* \"#utility.yul\":4260:4261   */\n      0x00\n        /* \"#utility.yul\":4249:4258   */\n      dup4\n        /* \"#utility.yul\":4245:4262   */\n      add\n        /* \"#utility.yul\":4236:4242   */\n      dup5\n        /* \"#utility.yul\":4179:4263   */\n      tag_119\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4133:4270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4276:4538   */\n    tag_55:\n        /* \"#utility.yul\":4389:4393   */\n      0x00\n        /* \"#utility.yul\":4427:4429   */\n      0x20\n        /* \"#utility.yul\":4416:4425   */\n      dup3\n        /* \"#utility.yul\":4412:4430   */\n      add\n        /* \"#utility.yul\":4404:4430   */\n      swap1\n      pop\n        /* \"#utility.yul\":4440:4531   */\n      tag_148\n        /* \"#utility.yul\":4528:4529   */\n      0x00\n        /* \"#utility.yul\":4517:4526   */\n      dup4\n        /* \"#utility.yul\":4513:4530   */\n      add\n        /* \"#utility.yul\":4504:4510   */\n      dup5\n        /* \"#utility.yul\":4440:4531   */\n      tag_123\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4394:4538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4544:4963   */\n    tag_66:\n        /* \"#utility.yul\":4710:4714   */\n      0x00\n        /* \"#utility.yul\":4748:4750   */\n      0x20\n        /* \"#utility.yul\":4737:4746   */\n      dup3\n        /* \"#utility.yul\":4733:4751   */\n      add\n        /* \"#utility.yul\":4725:4751   */\n      swap1\n      pop\n        /* \"#utility.yul\":4797:4806   */\n      dup2\n        /* \"#utility.yul\":4791:4795   */\n      dup2\n        /* \"#utility.yul\":4787:4807   */\n      sub\n        /* \"#utility.yul\":4783:4784   */\n      0x00\n        /* \"#utility.yul\":4772:4781   */\n      dup4\n        /* \"#utility.yul\":4768:4785   */\n      add\n        /* \"#utility.yul\":4761:4808   */\n      mstore\n        /* \"#utility.yul\":4825:4956   */\n      tag_150\n        /* \"#utility.yul\":4951:4955   */\n      dup2\n        /* \"#utility.yul\":4825:4956   */\n      tag_127\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4817:4956   */\n      swap1\n      pop\n        /* \"#utility.yul\":4715:4963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4969:5191   */\n    tag_19:\n        /* \"#utility.yul\":5062:5066   */\n      0x00\n        /* \"#utility.yul\":5100:5102   */\n      0x20\n        /* \"#utility.yul\":5089:5098   */\n      dup3\n        /* \"#utility.yul\":5085:5103   */\n      add\n        /* \"#utility.yul\":5077:5103   */\n      swap1\n      pop\n        /* \"#utility.yul\":5113:5184   */\n      tag_152\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5170:5179   */\n      dup4\n        /* \"#utility.yul\":5166:5183   */\n      add\n        /* \"#utility.yul\":5157:5163   */\n      dup5\n        /* \"#utility.yul\":5113:5184   */\n      tag_133\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5067:5191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5197:5366   */\n    tag_130:\n        /* \"#utility.yul\":5281:5292   */\n      0x00\n        /* \"#utility.yul\":5315:5321   */\n      dup3\n        /* \"#utility.yul\":5310:5313   */\n      dup3\n        /* \"#utility.yul\":5303:5322   */\n      mstore\n        /* \"#utility.yul\":5355:5359   */\n      0x20\n        /* \"#utility.yul\":5350:5353   */\n      dup3\n        /* \"#utility.yul\":5346:5360   */\n      add\n        /* \"#utility.yul\":5331:5360   */\n      swap1\n      pop\n        /* \"#utility.yul\":5293:5366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5372:5720   */\n    tag_83:\n        /* \"#utility.yul\":5412:5419   */\n      0x00\n        /* \"#utility.yul\":5435:5455   */\n      tag_155\n        /* \"#utility.yul\":5453:5454   */\n      dup3\n        /* \"#utility.yul\":5435:5455   */\n      tag_136\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5430:5455   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5489   */\n      tag_156\n        /* \"#utility.yul\":5487:5488   */\n      dup4\n        /* \"#utility.yul\":5469:5489   */\n      tag_136\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5464:5489   */\n      swap3\n      pop\n        /* \"#utility.yul\":5657:5658   */\n      dup2\n        /* \"#utility.yul\":5589:5655   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5585:5659   */\n      div\n        /* \"#utility.yul\":5582:5583   */\n      dup4\n        /* \"#utility.yul\":5579:5660   */\n      gt\n        /* \"#utility.yul\":5574:5575   */\n      dup3\n        /* \"#utility.yul\":5567:5576   */\n      iszero\n        /* \"#utility.yul\":5560:5577   */\n      iszero\n        /* \"#utility.yul\":5556:5661   */\n      and\n        /* \"#utility.yul\":5553:5555   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":5664:5682   */\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5553:5555   */\n    tag_157:\n        /* \"#utility.yul\":5712:5713   */\n      dup3\n        /* \"#utility.yul\":5709:5710   */\n      dup3\n        /* \"#utility.yul\":5705:5714   */\n      mul\n        /* \"#utility.yul\":5694:5714   */\n      swap1\n      pop\n        /* \"#utility.yul\":5420:5720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5726:5822   */\n    tag_160:\n        /* \"#utility.yul\":5763:5770   */\n      0x00\n        /* \"#utility.yul\":5792:5816   */\n      tag_162\n        /* \"#utility.yul\":5810:5815   */\n      dup3\n        /* \"#utility.yul\":5792:5816   */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5781:5816   */\n      swap1\n      pop\n        /* \"#utility.yul\":5771:5822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5828:5932   */\n    tag_106:\n        /* \"#utility.yul\":5873:5880   */\n      0x00\n        /* \"#utility.yul\":5902:5926   */\n      tag_165\n        /* \"#utility.yul\":5920:5925   */\n      dup3\n        /* \"#utility.yul\":5902:5926   */\n      tag_163\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5891:5926   */\n      swap1\n      pop\n        /* \"#utility.yul\":5881:5932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6028   */\n    tag_110:\n        /* \"#utility.yul\":5972:5979   */\n      0x00\n        /* \"#utility.yul\":6015:6020   */\n      dup2\n        /* \"#utility.yul\":6008:6021   */\n      iszero\n        /* \"#utility.yul\":6001:6022   */\n      iszero\n        /* \"#utility.yul\":5990:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":5980:6028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6034:6160   */\n    tag_163:\n        /* \"#utility.yul\":6071:6078   */\n      0x00\n        /* \"#utility.yul\":6111:6153   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6104:6109   */\n      dup3\n        /* \"#utility.yul\":6100:6154   */\n      and\n        /* \"#utility.yul\":6089:6154   */\n      swap1\n      pop\n        /* \"#utility.yul\":6079:6160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6166:6243   */\n    tag_136:\n        /* \"#utility.yul\":6203:6210   */\n      0x00\n        /* \"#utility.yul\":6232:6237   */\n      dup2\n        /* \"#utility.yul\":6221:6237   */\n      swap1\n      pop\n        /* \"#utility.yul\":6211:6243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6249:6405   */\n    tag_114:\n        /* \"#utility.yul\":6314:6323   */\n      0x00\n        /* \"#utility.yul\":6347:6399   */\n      tag_170\n        /* \"#utility.yul\":6393:6398   */\n      dup3\n        /* \"#utility.yul\":6347:6399   */\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6334:6399   */\n      swap1\n      pop\n        /* \"#utility.yul\":6324:6405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6411:6539   */\n    tag_171:\n        /* \"#utility.yul\":6476:6485   */\n      0x00\n        /* \"#utility.yul\":6509:6533   */\n      tag_173\n        /* \"#utility.yul\":6527:6532   */\n      dup3\n        /* \"#utility.yul\":6509:6533   */\n      tag_163\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6496:6533   */\n      swap1\n      pop\n        /* \"#utility.yul\":6486:6539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6545:6707   */\n    tag_118:\n        /* \"#utility.yul\":6613:6622   */\n      0x00\n        /* \"#utility.yul\":6646:6701   */\n      tag_175\n        /* \"#utility.yul\":6695:6700   */\n      dup3\n        /* \"#utility.yul\":6646:6701   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6633:6701   */\n      swap1\n      pop\n        /* \"#utility.yul\":6623:6707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6713:6844   */\n    tag_176:\n        /* \"#utility.yul\":6781:6790   */\n      0x00\n        /* \"#utility.yul\":6814:6838   */\n      tag_178\n        /* \"#utility.yul\":6832:6837   */\n      dup3\n        /* \"#utility.yul\":6814:6838   */\n      tag_163\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6801:6838   */\n      swap1\n      pop\n        /* \"#utility.yul\":6791:6844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6850:7002   */\n    tag_122:\n        /* \"#utility.yul\":6913:6922   */\n      0x00\n        /* \"#utility.yul\":6946:6996   */\n      tag_180\n        /* \"#utility.yul\":6990:6995   */\n      dup3\n        /* \"#utility.yul\":6946:6996   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6933:6996   */\n      swap1\n      pop\n        /* \"#utility.yul\":6923:7002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7008:7134   */\n    tag_181:\n        /* \"#utility.yul\":7071:7080   */\n      0x00\n        /* \"#utility.yul\":7104:7128   */\n      tag_183\n        /* \"#utility.yul\":7122:7127   */\n      dup3\n        /* \"#utility.yul\":7104:7128   */\n      tag_163\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7091:7128   */\n      swap1\n      pop\n        /* \"#utility.yul\":7081:7134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7140:7306   */\n    tag_126:\n        /* \"#utility.yul\":7210:7219   */\n      0x00\n        /* \"#utility.yul\":7243:7300   */\n      tag_185\n        /* \"#utility.yul\":7294:7299   */\n      dup3\n        /* \"#utility.yul\":7243:7300   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7230:7300   */\n      swap1\n      pop\n        /* \"#utility.yul\":7220:7306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7312:7445   */\n    tag_186:\n        /* \"#utility.yul\":7382:7391   */\n      0x00\n        /* \"#utility.yul\":7415:7439   */\n      tag_188\n        /* \"#utility.yul\":7433:7438   */\n      dup3\n        /* \"#utility.yul\":7415:7439   */\n      tag_163\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":7402:7439   */\n      swap1\n      pop\n        /* \"#utility.yul\":7392:7445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7451:7631   */\n    tag_159:\n        /* \"#utility.yul\":7499:7576   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7496:7497   */\n      0x00\n        /* \"#utility.yul\":7489:7577   */\n      mstore\n        /* \"#utility.yul\":7596:7600   */\n      0x11\n        /* \"#utility.yul\":7593:7594   */\n      0x04\n        /* \"#utility.yul\":7586:7601   */\n      mstore\n        /* \"#utility.yul\":7620:7624   */\n      0x24\n        /* \"#utility.yul\":7617:7618   */\n      0x00\n        /* \"#utility.yul\":7610:7625   */\n      revert\n        /* \"#utility.yul\":7637:7813   */\n    tag_132:\n        /* \"#utility.yul\":7777:7805   */\n      0x4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000\n        /* \"#utility.yul\":7773:7774   */\n      0x00\n        /* \"#utility.yul\":7765:7771   */\n      dup3\n        /* \"#utility.yul\":7761:7775   */\n      add\n        /* \"#utility.yul\":7754:7806   */\n      mstore\n        /* \"#utility.yul\":7743:7813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:7941   */\n    tag_88:\n        /* \"#utility.yul\":7892:7916   */\n      tag_192\n        /* \"#utility.yul\":7910:7915   */\n      dup2\n        /* \"#utility.yul\":7892:7916   */\n      tag_160\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7885:7890   */\n      dup2\n        /* \"#utility.yul\":7882:7917   */\n      eq\n        /* \"#utility.yul\":7872:7874   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":7931:7932   */\n      0x00\n        /* \"#utility.yul\":7928:7929   */\n      dup1\n        /* \"#utility.yul\":7921:7933   */\n      revert\n        /* \"#utility.yul\":7872:7874   */\n    tag_193:\n        /* \"#utility.yul\":7862:7941   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7947:8069   */\n    tag_92:\n        /* \"#utility.yul\":8020:8044   */\n      tag_195\n        /* \"#utility.yul\":8038:8043   */\n      dup2\n        /* \"#utility.yul\":8020:8044   */\n      tag_136\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":8013:8018   */\n      dup2\n        /* \"#utility.yul\":8010:8045   */\n      eq\n        /* \"#utility.yul\":8000:8002   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":8059:8060   */\n      0x00\n        /* \"#utility.yul\":8056:8057   */\n      dup1\n        /* \"#utility.yul\":8049:8061   */\n      revert\n        /* \"#utility.yul\":8000:8002   */\n    tag_196:\n        /* \"#utility.yul\":7990:8069   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220515ca58c727cab2cb200e58d4f092bc129055d5376fe52dfa77420cab964ad4564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001600660146101000a81548160ff0219169083151502179055506001600660156101000a81548160ff02191690831515021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b47806100976000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063893d20e811610071578063893d20e81461016d5780639eb4eae51461018b578063c412eaba14610195578063c740671f146101b3578063d36d0c18146101cf578063ee72b8cc146101ed576100b4565b80631b9cbdfb146100b957806321df0da7146100d757806328919df6146100f55780633a1a8080146101135780636805b84b146101315780637cac00ee1461014f575b600080fd5b6100c16101f7565b6040516100ce919061091b565b60405180910390f35b6100df6101fd565b6040516100ec91906108c5565b60405180910390f35b6100fd610227565b60405161010a9190610874565b60405180910390f35b61011b61023e565b604051610128919061091b565b60405180910390f35b610139610244565b6040516101469190610874565b60405180910390f35b61015761025b565b604051610164919061088f565b60405180910390f35b610175610284565b6040516101829190610859565b60405180910390f35b6101936102ae565b005b61019d61036a565b6040516101aa91906108aa565b60405180910390f35b6101cd60048036038101906101c8919061071b565b610394565b005b6101d76105f5565b6040516101e491906108e0565b60405180910390f35b6101f561061f565b005b60085481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660159054906101000a900460ff16905090565b60075481565b6000600660149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610335906108fb565b60405180910390fd5b600660149054906101000a900460ff1615600660146101000a81548160ff021916908315150217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041b906108fb565b60405180910390fd5b61043f670de0b6b3a7640000836106db90919063ffffffff16565b600781905550610460670de0b6b3a7640000826106db90919063ffffffff16565b600881905550876000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906108fb565b60405180910390fd5b600660159054906101000a900460ff1615600660156101000a81548160ff021916908315150217905550565b600081836106e99190610947565b905092915050565b60008135905061070081610ae3565b92915050565b60008135905061071581610afa565b92915050565b600080600080600080600080610100898b03121561073857600080fd5b60006107468b828c016106f1565b98505060206107578b828c016106f1565b97505060406107688b828c016106f1565b96505060606107798b828c016106f1565b955050608061078a8b828c016106f1565b94505060a061079b8b828c016106f1565b93505060c06107ac8b828c01610706565b92505060e06107bd8b828c01610706565b9150509295985092959890939650565b6107d6816109b3565b82525050565b6107e5816109c5565b82525050565b6107f4816109fb565b82525050565b61080381610a1f565b82525050565b61081281610a43565b82525050565b61082181610a67565b82525050565b6000610834601a83610936565b915061083f82610aba565b602082019050919050565b610853816109f1565b82525050565b600060208201905061086e60008301846107cd565b92915050565b600060208201905061088960008301846107dc565b92915050565b60006020820190506108a460008301846107eb565b92915050565b60006020820190506108bf60008301846107fa565b92915050565b60006020820190506108da6000830184610809565b92915050565b60006020820190506108f56000830184610818565b92915050565b6000602082019050818103600083015261091481610827565b9050919050565b6000602082019050610930600083018461084a565b92915050565b600082825260208201905092915050565b6000610952826109f1565b915061095d836109f1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561099657610995610a8b565b5b828202905092915050565b60006109ac826109d1565b9050919050565b60006109be826109d1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a0682610a0d565b9050919050565b6000610a18826109d1565b9050919050565b6000610a2a82610a31565b9050919050565b6000610a3c826109d1565b9050919050565b6000610a4e82610a55565b9050919050565b6000610a60826109d1565b9050919050565b6000610a7282610a79565b9050919050565b6000610a84826109d1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b610aec816109a1565b8114610af757600080fd5b50565b610b03816109f1565b8114610b0e57600080fd5b5056fea2646970667358221220515ca58c727cab2cb200e58d4f092bc129055d5376fe52dfa77420cab964ad4564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xB47 DUP1 PUSH2 0x97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xC740671F EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xD36D0C18 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1ED JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x2AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x335 SWAP1 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41B SWAP1 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x43F PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x6DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x460 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x6DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x6 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x700 DUP2 PUSH2 0xAE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x715 DUP2 PUSH2 0xAFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x746 DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x757 DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x768 DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x779 DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x78A DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x79B DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x7AC DUP12 DUP3 DUP13 ADD PUSH2 0x706 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x7BD DUP12 DUP3 DUP13 ADD PUSH2 0x706 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x7D6 DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7E5 DUP2 PUSH2 0x9C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x9FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x803 DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x812 DUP2 PUSH2 0xA43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x821 DUP2 PUSH2 0xA67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 PUSH1 0x1A DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH2 0x83F DUP3 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x853 DUP2 PUSH2 0x9F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x889 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x809 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x914 DUP2 PUSH2 0x827 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x930 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x84A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x952 DUP3 PUSH2 0x9F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x95D DUP4 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0xA8B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BE DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA06 DUP3 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA18 DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP3 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4E DUP3 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA60 DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA72 DUP3 PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA84 DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0x9A1 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB03 DUP2 PUSH2 0x9F1 JUMP JUMPDEST DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0x5C 0xA5 DUP13 PUSH19 0x7CAB2CB200E58D4F092BC129055D5376FE52DF 0xA7 PUSH21 0x20CAB964AD4564736F6C6343000804003300000000 ",
							"sourceMap": "261:2380:2:-:0;;;911:114;;;;;;;;;;944:4;935:6;;:13;;;;;;;;;;;;;;;;;;973:4;958:12;;:19;;;;;;;;;;;;;;;;;;1007:10;987:9;;:31;;;;;;;;;;;;;;;;;;261:2380;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8072:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "7:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:10",
														"type": ""
													}
												],
												"src": "152:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:1097:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "529:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "538:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "541:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "531:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "531:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "531:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "503:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "512:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "524:3:10",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "495:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:33:10"
															},
															"nodeType": "YulIf",
															"src": "492:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "555:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "570:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "574:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "599:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "634:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "645:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "630:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "654:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "609:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "599:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "682:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "697:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "711:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "701:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "727:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "762:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "773:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "758:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "758:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "782:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "737:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "727:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "810:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "825:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "829:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "855:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "890:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "901:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "886:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "886:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "910:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "865:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "865:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "855:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "938:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "953:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "967:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "957:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "983:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1018:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1029:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1014:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1014:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1038:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "993:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "993:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "983:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1066:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1081:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1095:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1085:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1112:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1147:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1158:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1143:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1143:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1167:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1122:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1122:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1112:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1195:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1210:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1224:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1214:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1241:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1276:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1287:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1272:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1272:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1296:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1251:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "1241:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1324:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1339:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1353:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1343:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1370:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1405:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1416:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1401:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1401:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1425:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1380:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1380:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "1370:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1453:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1468:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:3:10",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1472:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1499:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1534:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1545:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1530:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1530:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1554:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1509:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "451:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "459:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "467:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"src": "297:1282:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1714:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1688:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1688:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1676:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1654:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1661:3:10",
														"type": ""
													}
												],
												"src": "1585:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1792:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1809:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1829:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1814:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1814:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1802:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1802:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1787:3:10",
														"type": ""
													}
												],
												"src": "1733:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1928:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1945:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1996:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1950:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1950:52:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:65:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1916:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1923:3:10",
														"type": ""
													}
												],
												"src": "1848:161:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2115:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2169:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP37Full_$589_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2120:48:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2120:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2108:68:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP37Full_$589_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2086:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2093:3:10",
														"type": ""
													}
												],
												"src": "2015:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2266:79:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2283:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IKIP7_$720_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2288:43:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:50:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2276:63:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IKIP7_$720_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2254:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2261:3:10",
														"type": ""
													}
												],
												"src": "2188:157:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2436:86:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2453:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2509:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ILevelDiagram_$79_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2458:50:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2458:57:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:70:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2446:70:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_ILevelDiagram_$79_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2424:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2431:3:10",
														"type": ""
													}
												],
												"src": "2351:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2674:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2684:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2750:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2755:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2691:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2684:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2856:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																	"nodeType": "YulIdentifier",
																	"src": "2767:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2767:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2869:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2880:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2885:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2869:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2662:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2670:3:10",
														"type": ""
													}
												],
												"src": "2528:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2965:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2982:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3005:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2987:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2987:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2975:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2953:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2960:3:10",
														"type": ""
													}
												],
												"src": "2900:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3138:140:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3148:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3160:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3156:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3156:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3148:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3244:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3257:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3268:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3253:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3253:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3184:59:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:87:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3110:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3122:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:10",
														"type": ""
													}
												],
												"src": "3024:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3376:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3386:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3398:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3409:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3386:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3460:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3422:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3422:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3348:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3360:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3371:4:10",
														"type": ""
													}
												],
												"src": "3284:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3613:139:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3623:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3635:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3646:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3631:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3623:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3718:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3731:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3727:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3727:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3659:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:86:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:86:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3585:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3597:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3608:4:10",
														"type": ""
													}
												],
												"src": "3500:252:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3874:142:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3884:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3896:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3907:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3892:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3892:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3884:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3982:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3995:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4006:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3991:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3991:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP37Full_$589_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3920:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:89:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3920:89:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP37Full_$589__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3846:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3858:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3869:4:10",
														"type": ""
													}
												],
												"src": "3758:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4133:137:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4143:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4155:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4166:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4151:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4143:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4236:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4249:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4260:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4245:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4245:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IKIP7_$720_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4179:56:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4179:84:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4179:84:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKIP7_$720__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4105:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4117:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4128:4:10",
														"type": ""
													}
												],
												"src": "4022:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:144:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4416:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4412:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4504:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4517:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4528:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4513:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4513:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ILevelDiagram_$79_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4440:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:91:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:91:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILevelDiagram_$79__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4389:4:10",
														"type": ""
													}
												],
												"src": "4276:262:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4715:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4725:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4737:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4748:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4733:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4725:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4772:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4783:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4768:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4768:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4791:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4797:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4787:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4787:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4761:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4817:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4951:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4825:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4825:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4817:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4695:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4710:4:10",
														"type": ""
													}
												],
												"src": "4544:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5067:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5077:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5089:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5100:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5085:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5085:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5077:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5157:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5170:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5181:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5166:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5166:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5113:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5113:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5113:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5039:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5051:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5062:4:10",
														"type": ""
													}
												],
												"src": "4969:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5310:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5315:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5303:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5303:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5331:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5350:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5355:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5346:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5346:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5331:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5265:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5270:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5281:11:10",
														"type": ""
													}
												],
												"src": "5197:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5420:300:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5430:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5453:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5435:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5435:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5430:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5464:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5487:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5469:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5464:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5662:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5664:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5664:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5664:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5574:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5567:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5567:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5560:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5560:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5582:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5589:66:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5657:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5585:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5585:74:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5579:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5579:81:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5556:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:105:10"
															},
															"nodeType": "YulIf",
															"src": "5553:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5694:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5709:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5712:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5705:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5705:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5694:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5403:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5406:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5412:7:10",
														"type": ""
													}
												],
												"src": "5372:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5771:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5781:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5810:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5792:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5792:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5781:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5753:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5763:7:10",
														"type": ""
													}
												],
												"src": "5726:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5881:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5891:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5920:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5902:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5902:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5891:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5863:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5873:7:10",
														"type": ""
													}
												],
												"src": "5828:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5980:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5990:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6015:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6008:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6008:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6001:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6001:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5990:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5962:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5972:7:10",
														"type": ""
													}
												],
												"src": "5938:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6079:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6089:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6104:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6111:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6100:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6100:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6089:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6061:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6071:7:10",
														"type": ""
													}
												],
												"src": "6034:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6211:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6221:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6232:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6221:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6193:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6203:7:10",
														"type": ""
													}
												],
												"src": "6166:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6324:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6334:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6393:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6347:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6347:52:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6334:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6304:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6314:9:10",
														"type": ""
													}
												],
												"src": "6249:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6486:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6496:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6527:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6509:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6509:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6496:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHeroNFT_$30_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6466:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6476:9:10",
														"type": ""
													}
												],
												"src": "6411:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6623:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6633:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6695:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP37Full_$589_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6646:48:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6646:55:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6633:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$589_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6603:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6613:9:10",
														"type": ""
													}
												],
												"src": "6545:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6791:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6801:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6832:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6814:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6814:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6801:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP37Full_$589_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6771:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6781:9:10",
														"type": ""
													}
												],
												"src": "6713:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6923:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6933:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6990:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IKIP7_$720_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6946:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6946:50:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6933:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$720_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6903:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6913:9:10",
														"type": ""
													}
												],
												"src": "6850:152:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7081:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7091:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7122:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7104:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7104:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7091:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IKIP7_$720_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7061:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7071:9:10",
														"type": ""
													}
												],
												"src": "7008:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7220:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7230:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7294:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_ILevelDiagram_$79_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7243:50:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7243:57:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7230:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ILevelDiagram_$79_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7200:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7210:9:10",
														"type": ""
													}
												],
												"src": "7140:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7392:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7402:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7433:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7415:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7415:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7402:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ILevelDiagram_$79_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7372:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7382:9:10",
														"type": ""
													}
												],
												"src": "7312:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7479:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7496:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7499:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7489:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7489:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7489:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7593:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7596:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7586:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7586:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7586:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7617:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7620:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7610:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7610:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7610:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7451:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7743:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7765:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7773:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7761:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7761:14:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7777:28:10",
																		"type": "",
																		"value": "HeroCore Error : onlyOwner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7754:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7754:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7754:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7735:6:10",
														"type": ""
													}
												],
												"src": "7637:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7862:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7919:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7928:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7931:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7921:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7921:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7921:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7885:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7910:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7892:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7892:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7882:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7882:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7875:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7875:43:10"
															},
															"nodeType": "YulIf",
															"src": "7872:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7855:5:10",
														"type": ""
													}
												],
												"src": "7819:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7990:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8047:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8056:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8059:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8049:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8049:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8049:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8013:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8038:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8020:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8020:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8010:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8010:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8003:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8003:43:10"
															},
															"nodeType": "YulIf",
															"src": "8000:2:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7983:5:10",
														"type": ""
													}
												],
												"src": "7947:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IHeroNFT_$30_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP37Full_$589_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP37Full_$589_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IKIP7_$720_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IKIP7_$720_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ILevelDiagram_$79_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILevelDiagram_$79_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IHeroNFT_$30__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IHeroNFT_$30_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP37Full_$589__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP37Full_$589_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IKIP7_$720__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IKIP7_$720_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ILevelDiagram_$79__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILevelDiagram_$79_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IHeroNFT_$30_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IHeroNFT_$30_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$589_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP37Full_$589_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP37Full_$589_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$720_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IKIP7_$720_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IKIP7_$720_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ILevelDiagram_$79_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ILevelDiagram_$79_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ILevelDiagram_$79_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"HeroCore Error : onlyOwner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063893d20e811610071578063893d20e81461016d5780639eb4eae51461018b578063c412eaba14610195578063c740671f146101b3578063d36d0c18146101cf578063ee72b8cc146101ed576100b4565b80631b9cbdfb146100b957806321df0da7146100d757806328919df6146100f55780633a1a8080146101135780636805b84b146101315780637cac00ee1461014f575b600080fd5b6100c16101f7565b6040516100ce919061091b565b60405180910390f35b6100df6101fd565b6040516100ec91906108c5565b60405180910390f35b6100fd610227565b60405161010a9190610874565b60405180910390f35b61011b61023e565b604051610128919061091b565b60405180910390f35b610139610244565b6040516101469190610874565b60405180910390f35b61015761025b565b604051610164919061088f565b60405180910390f35b610175610284565b6040516101829190610859565b60405180910390f35b6101936102ae565b005b61019d61036a565b6040516101aa91906108aa565b60405180910390f35b6101cd60048036038101906101c8919061071b565b610394565b005b6101d76105f5565b6040516101e491906108e0565b60405180910390f35b6101f561061f565b005b60085481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660159054906101000a900460ff16905090565b60075481565b6000600660149054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610335906108fb565b60405180910390fd5b600660149054906101000a900460ff1615600660146101000a81548160ff021916908315150217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041b906108fb565b60405180910390fd5b61043f670de0b6b3a7640000836106db90919063ffffffff16565b600781905550610460670de0b6b3a7640000826106db90919063ffffffff16565b600881905550876000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906108fb565b60405180910390fd5b600660159054906101000a900460ff1615600660156101000a81548160ff021916908315150217905550565b600081836106e99190610947565b905092915050565b60008135905061070081610ae3565b92915050565b60008135905061071581610afa565b92915050565b600080600080600080600080610100898b03121561073857600080fd5b60006107468b828c016106f1565b98505060206107578b828c016106f1565b97505060406107688b828c016106f1565b96505060606107798b828c016106f1565b955050608061078a8b828c016106f1565b94505060a061079b8b828c016106f1565b93505060c06107ac8b828c01610706565b92505060e06107bd8b828c01610706565b9150509295985092959890939650565b6107d6816109b3565b82525050565b6107e5816109c5565b82525050565b6107f4816109fb565b82525050565b61080381610a1f565b82525050565b61081281610a43565b82525050565b61082181610a67565b82525050565b6000610834601a83610936565b915061083f82610aba565b602082019050919050565b610853816109f1565b82525050565b600060208201905061086e60008301846107cd565b92915050565b600060208201905061088960008301846107dc565b92915050565b60006020820190506108a460008301846107eb565b92915050565b60006020820190506108bf60008301846107fa565b92915050565b60006020820190506108da6000830184610809565b92915050565b60006020820190506108f56000830184610818565b92915050565b6000602082019050818103600083015261091481610827565b9050919050565b6000602082019050610930600083018461084a565b92915050565b600082825260208201905092915050565b6000610952826109f1565b915061095d836109f1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561099657610995610a8b565b5b828202905092915050565b60006109ac826109d1565b9050919050565b60006109be826109d1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a0682610a0d565b9050919050565b6000610a18826109d1565b9050919050565b6000610a2a82610a31565b9050919050565b6000610a3c826109d1565b9050919050565b6000610a4e82610a55565b9050919050565b6000610a60826109d1565b9050919050565b6000610a7282610a79565b9050919050565b6000610a84826109d1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4865726f436f7265204572726f72203a206f6e6c794f776e6572000000000000600082015250565b610aec816109a1565b8114610af757600080fd5b50565b610b03816109f1565b8114610b0e57600080fd5b5056fea2646970667358221220515ca58c727cab2cb200e58d4f092bc129055d5376fe52dfa77420cab964ad4564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x9EB4EAE5 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xC412EABA EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xC740671F EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xD36D0C18 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xEE72B8CC EQ PUSH2 0x1ED JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x1B9CBDFB EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x28919DF6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x3A1A8080 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x6805B84B EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x7CAC00EE EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x2AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x335 SWAP1 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x6 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41B SWAP1 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x43F PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x6DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x460 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x6DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x6 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x700 DUP2 PUSH2 0xAE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x715 DUP2 PUSH2 0xAFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x746 DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x757 DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x768 DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x779 DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x78A DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x79B DUP12 DUP3 DUP13 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x7AC DUP12 DUP3 DUP13 ADD PUSH2 0x706 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x7BD DUP12 DUP3 DUP13 ADD PUSH2 0x706 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x7D6 DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7E5 DUP2 PUSH2 0x9C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x9FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x803 DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x812 DUP2 PUSH2 0xA43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x821 DUP2 PUSH2 0xA67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 PUSH1 0x1A DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH2 0x83F DUP3 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x853 DUP2 PUSH2 0x9F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x889 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x809 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x914 DUP2 PUSH2 0x827 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x930 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x84A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x952 DUP3 PUSH2 0x9F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x95D DUP4 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0xA8B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BE DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA06 DUP3 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA18 DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP3 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4E DUP3 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA60 DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA72 DUP3 PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA84 DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0x9A1 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB03 DUP2 PUSH2 0x9F1 JUMP JUMPDEST DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0x5C 0xA5 DUP13 PUSH19 0x7CAB2CB200E58D4F092BC129055D5376FE52DF 0xA7 PUSH21 0x20CAB964AD4564736F6C6343000804003300000000 ",
							"sourceMap": "261:2380:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2371:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2086:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;595:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2002:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2454:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1905:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1691:76;;;:::i;:::-;;2285:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1079:606;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2182:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1773:94;;;:::i;:::-;;627:27;;;;:::o;2371:77::-;2412:5;2436;;;;;;;;;;;2429:12;;2371:77;:::o;2086:90::-;2134:4;2157:12;;;;;;;;;;;2150:19;;2086:90;:::o;595:26::-;;;;:::o;2002:78::-;2044:4;2067:6;;;;;;;;;;;2060:13;;2002:78;:::o;2454:84::-;2497:8;2524:7;;;;;;;;;;;2517:14;;2454:84;:::o;1905:91::-;1946:15;1980:9;;;;;;;;;;;1973:16;;1905:91;:::o;1691:76::-;847:9;;;;;;;;;;;833:23;;:10;:23;;;825:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1754:6:::1;;;;;;;;;;;1753:7;1744:6;;:16;;;;;;;;;;;;;;;;;;1691:76::o:0;2285:80::-;2325:10;2354:4;;;;;;;;;;;2347:11;;2285:80;:::o;1079:606::-;847:9;;;;;;;;;;;833:23;;:10;:23;;;825:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1369:19:::1;696:4;1369:5;:9;;:19;;;;:::i;:::-;1355:11;:33;;;;1413:25;696:4;1413:11;:15;;:25;;;;:::i;:::-;1398:12;:40;;;;1468:8;1449:7;::::0;:28:::1;;;;;;;;;;;;;;;;;;1501:6;1487:5;;:21;;;;;;;;;;;;;;;;;;1536:5;1518:4;;:24;;;;;;;;;;;;;;;;;;1581:13;1552:12;;:43;;;;;;;;;;;;;;;;;;1623:15;1606:14;;:32;;;;;;;;;;;;;;;;;;1664:14;1648:13;;:30;;;;;;;;;;;;;;;;;;1079:606:::0;;;;;;;;:::o;2182:97::-;2229:13;2260:12;;;;;;;;;;;2253:19;;2182:97;:::o;1773:94::-;847:9;;;;;;;;;;;833:23;;:10;:23;;;825:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1848:12:::1;;;;;;;;;;;1847:13;1832:12;;:28;;;;;;;;;;;;;;;;;;1773:94::o:0;283:96:9:-;341:7;371:1;367;:5;;;;:::i;:::-;360:12;;283:96;;;;:::o;7:139:10:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:1282::-;419:6;427;435;443;451;459;467;475;524:3;512:9;503:7;499:23;495:33;492:2;;;541:1;538;531:12;492:2;584:1;609:53;654:7;645:6;634:9;630:22;609:53;:::i;:::-;599:63;;555:117;711:2;737:53;782:7;773:6;762:9;758:22;737:53;:::i;:::-;727:63;;682:118;839:2;865:53;910:7;901:6;890:9;886:22;865:53;:::i;:::-;855:63;;810:118;967:2;993:53;1038:7;1029:6;1018:9;1014:22;993:53;:::i;:::-;983:63;;938:118;1095:3;1122:53;1167:7;1158:6;1147:9;1143:22;1122:53;:::i;:::-;1112:63;;1066:119;1224:3;1251:53;1296:7;1287:6;1276:9;1272:22;1251:53;:::i;:::-;1241:63;;1195:119;1353:3;1380:53;1425:7;1416:6;1405:9;1401:22;1380:53;:::i;:::-;1370:63;;1324:119;1482:3;1509:53;1554:7;1545:6;1534:9;1530:22;1509:53;:::i;:::-;1499:63;;1453:119;482:1097;;;;;;;;;;;:::o;1585:142::-;1688:32;1714:5;1688:32;:::i;:::-;1683:3;1676:45;1666:61;;:::o;1733:109::-;1814:21;1829:5;1814:21;:::i;:::-;1809:3;1802:34;1792:50;;:::o;1848:161::-;1950:52;1996:5;1950:52;:::i;:::-;1945:3;1938:65;1928:81;;:::o;2015:167::-;2120:55;2169:5;2120:55;:::i;:::-;2115:3;2108:68;2098:84;;:::o;2188:157::-;2288:50;2332:5;2288:50;:::i;:::-;2283:3;2276:63;2266:79;;:::o;2351:171::-;2458:57;2509:5;2458:57;:::i;:::-;2453:3;2446:70;2436:86;;:::o;2528:366::-;2670:3;2691:67;2755:2;2750:3;2691:67;:::i;:::-;2684:74;;2767:93;2856:3;2767:93;:::i;:::-;2885:2;2880:3;2876:12;2869:19;;2674:220;;;:::o;2900:118::-;2987:24;3005:5;2987:24;:::i;:::-;2982:3;2975:37;2965:53;;:::o;3024:254::-;3133:4;3171:2;3160:9;3156:18;3148:26;;3184:87;3268:1;3257:9;3253:17;3244:6;3184:87;:::i;:::-;3138:140;;;;:::o;3284:210::-;3371:4;3409:2;3398:9;3394:18;3386:26;;3422:65;3484:1;3473:9;3469:17;3460:6;3422:65;:::i;:::-;3376:118;;;;:::o;3500:252::-;3608:4;3646:2;3635:9;3631:18;3623:26;;3659:86;3742:1;3731:9;3727:17;3718:6;3659:86;:::i;:::-;3613:139;;;;:::o;3758:258::-;3869:4;3907:2;3896:9;3892:18;3884:26;;3920:89;4006:1;3995:9;3991:17;3982:6;3920:89;:::i;:::-;3874:142;;;;:::o;4022:248::-;4128:4;4166:2;4155:9;4151:18;4143:26;;4179:84;4260:1;4249:9;4245:17;4236:6;4179:84;:::i;:::-;4133:137;;;;:::o;4276:262::-;4389:4;4427:2;4416:9;4412:18;4404:26;;4440:91;4528:1;4517:9;4513:17;4504:6;4440:91;:::i;:::-;4394:144;;;;:::o;4544:419::-;4710:4;4748:2;4737:9;4733:18;4725:26;;4797:9;4791:4;4787:20;4783:1;4772:9;4768:17;4761:47;4825:131;4951:4;4825:131;:::i;:::-;4817:139;;4715:248;;;:::o;4969:222::-;5062:4;5100:2;5089:9;5085:18;5077:26;;5113:71;5181:1;5170:9;5166:17;5157:6;5113:71;:::i;:::-;5067:124;;;;:::o;5197:169::-;5281:11;5315:6;5310:3;5303:19;5355:4;5350:3;5346:14;5331:29;;5293:73;;;;:::o;5372:348::-;5412:7;5435:20;5453:1;5435:20;:::i;:::-;5430:25;;5469:20;5487:1;5469:20;:::i;:::-;5464:25;;5657:1;5589:66;5585:74;5582:1;5579:81;5574:1;5567:9;5560:17;5556:105;5553:2;;;5664:18;;:::i;:::-;5553:2;5712:1;5709;5705:9;5694:20;;5420:300;;;;:::o;5726:96::-;5763:7;5792:24;5810:5;5792:24;:::i;:::-;5781:35;;5771:51;;;:::o;5828:104::-;5873:7;5902:24;5920:5;5902:24;:::i;:::-;5891:35;;5881:51;;;:::o;5938:90::-;5972:7;6015:5;6008:13;6001:21;5990:32;;5980:48;;;:::o;6034:126::-;6071:7;6111:42;6104:5;6100:54;6089:65;;6079:81;;;:::o;6166:77::-;6203:7;6232:5;6221:16;;6211:32;;;:::o;6249:156::-;6314:9;6347:52;6393:5;6347:52;:::i;:::-;6334:65;;6324:81;;;:::o;6411:128::-;6476:9;6509:24;6527:5;6509:24;:::i;:::-;6496:37;;6486:53;;;:::o;6545:162::-;6613:9;6646:55;6695:5;6646:55;:::i;:::-;6633:68;;6623:84;;;:::o;6713:131::-;6781:9;6814:24;6832:5;6814:24;:::i;:::-;6801:37;;6791:53;;;:::o;6850:152::-;6913:9;6946:50;6990:5;6946:50;:::i;:::-;6933:63;;6923:79;;;:::o;7008:126::-;7071:9;7104:24;7122:5;7104:24;:::i;:::-;7091:37;;7081:53;;;:::o;7140:166::-;7210:9;7243:57;7294:5;7243:57;:::i;:::-;7230:70;;7220:86;;;:::o;7312:133::-;7382:9;7415:24;7433:5;7415:24;:::i;:::-;7402:37;;7392:53;;;:::o;7451:180::-;7499:77;7496:1;7489:88;7596:4;7593:1;7586:15;7620:4;7617:1;7610:15;7637:176;7777:28;7773:1;7765:6;7761:14;7754:52;7743:70;:::o;7819:122::-;7892:24;7910:5;7892:24;:::i;:::-;7885:5;7882:35;7872:2;;7931:1;7928;7921:12;7872:2;7862:79;:::o;7947:122::-;8020:24;8038:5;8020:24;:::i;:::-;8013:5;8010:35;8000:2;;8059:1;8056;8049:12;8000:2;7990:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "577400",
								"executionCost": "63313",
								"totalCost": "640713"
							},
							"external": {
								"changeMiningPaused()": "22930",
								"changePaused()": "22842",
								"getHeroNFT()": "1376",
								"getItem()": "1309",
								"getLevelDiagram()": "1353",
								"getMiningPaused()": "1274",
								"getOwner()": "1222",
								"getPaused()": "1318",
								"getToken()": "1288",
								"initialize(address,address,address,address,address,address,uint256,uint256)": "infinite",
								"priceOfKlay()": "1196",
								"priceOfToken()": "1130"
							},
							"internal": {
								"_currentTime()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 261,
									"end": 2641,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 261,
									"end": 2641,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 261,
									"end": 2641,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 911,
									"end": 1025,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 944,
									"end": 948,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 935,
									"end": 941,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 935,
									"end": 941,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 935,
									"end": 948,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 935,
									"end": 948,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 935,
									"end": 948,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 935,
									"end": 948,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 973,
									"end": 977,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 958,
									"end": 977,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 958,
									"end": 977,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 958,
									"end": 977,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 958,
									"end": 977,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1007,
									"end": 1017,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 987,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 987,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 261,
									"end": 2641,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 2641,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 261,
									"end": 2641,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 2641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2641,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 261,
									"end": 2641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2641,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220515ca58c727cab2cb200e58d4f092bc129055d5376fe52dfa77420cab964ad4564736f6c63430008040033",
									".code": [
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "893D20E8"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "9EB4EAE5"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "C412EABA"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "C740671F"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "D36D0C18"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "EE72B8CC"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "1B9CBDFB"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "21DF0DA7"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "28919DF6"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "3A1A8080"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "6805B84B"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "7CAC00EE"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 2641,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 627,
											"end": 654,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2448,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2138,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2176,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 595,
											"end": 621,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 595,
											"end": 621,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2080,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2538,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1996,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 843,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1767,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2365,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 843,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 696,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1369,
											"end": 1378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 696,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1413,
											"end": 1424,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1413,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1413,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1410,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1398,
											"end": 1438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1438,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1501,
											"end": 1507,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1594,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1552,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1638,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1678,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1685,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2279,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 847,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 843,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 833,
											"end": 856,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 825,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 825,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1832,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1867,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 341,
											"end": 348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 360,
											"end": 372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 283,
											"end": 379,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 1579,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 297,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 524,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 512,
											"end": 521,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 499,
											"end": 522,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 495,
											"end": 528,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 492,
											"end": 494,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 492,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 492,
											"end": 494,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 531,
											"end": 543,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 492,
											"end": 494,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 492,
											"end": 494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 654,
											"end": 661,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 645,
											"end": 651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 634,
											"end": 643,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 630,
											"end": 652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 609,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 609,
											"end": 662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 599,
											"end": 662,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 599,
											"end": 662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 555,
											"end": 672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 713,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 782,
											"end": 789,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 773,
											"end": 779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 762,
											"end": 771,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 758,
											"end": 780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 737,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 737,
											"end": 790,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 737,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 727,
											"end": 790,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 727,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 682,
											"end": 800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 839,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 890,
											"end": 899,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 886,
											"end": 908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 865,
											"end": 918,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 865,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 855,
											"end": 918,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 855,
											"end": 918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 810,
											"end": 928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 967,
											"end": 969,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 993,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 983,
											"end": 1046,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 983,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 938,
											"end": 1056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1098,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1167,
											"end": 1174,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1156,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1122,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1175,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1227,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1296,
											"end": 1303,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1285,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1272,
											"end": 1294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1251,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 1304,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1241,
											"end": 1304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1195,
											"end": 1314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1356,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1425,
											"end": 1432,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1443,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1482,
											"end": 1485,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 1545,
											"end": 1551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1534,
											"end": 1543,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 482,
											"end": 1579,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1585,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1585,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1714,
											"end": 1719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1727,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1733,
											"end": 1842,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1733,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1809,
											"end": 1812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1842,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1848,
											"end": 2009,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1848,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1950,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 1948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1938,
											"end": 2003,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 2009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 2009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 2009,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2182,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2015,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2169,
											"end": 2174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2120,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2115,
											"end": 2118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2176,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2182,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2345,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2188,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2288,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2345,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2351,
											"end": 2522,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2351,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2458,
											"end": 2515,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2515,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2458,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2446,
											"end": 2516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2522,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2528,
											"end": 2894,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2528,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2755,
											"end": 2757,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2691,
											"end": 2758,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2691,
											"end": 2758,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2691,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2758,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2856,
											"end": 2859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2767,
											"end": 2860,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2767,
											"end": 2860,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2767,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2885,
											"end": 2887,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2894,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3018,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3024,
											"end": 3278,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3024,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3268,
											"end": 3269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3266,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3244,
											"end": 3250,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3184,
											"end": 3271,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3184,
											"end": 3271,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3184,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3278,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3278,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3278,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3284,
											"end": 3494,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 3284,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3411,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3386,
											"end": 3412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3386,
											"end": 3412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3482,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3422,
											"end": 3487,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3422,
											"end": 3487,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3422,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3494,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3494,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3500,
											"end": 3752,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 3500,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3608,
											"end": 3612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3648,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3635,
											"end": 3644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3631,
											"end": 3649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3742,
											"end": 3743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3744,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3718,
											"end": 3724,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 3659,
											"end": 3745,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3745,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3659,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3752,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3758,
											"end": 4016,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3758,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3869,
											"end": 3873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4006,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3920,
											"end": 4009,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 4009,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3920,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3874,
											"end": 4016,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3874,
											"end": 4016,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3874,
											"end": 4016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3874,
											"end": 4016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3874,
											"end": 4016,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4022,
											"end": 4270,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4022,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4260,
											"end": 4261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4258,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4245,
											"end": 4262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4179,
											"end": 4263,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4263,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4179,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4270,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4270,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4270,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4276,
											"end": 4538,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4276,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4440,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4528,
											"end": 4529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4526,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4504,
											"end": 4510,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4440,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4440,
											"end": 4531,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4440,
											"end": 4531,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4440,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4538,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4538,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4538,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4544,
											"end": 4963,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4544,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4750,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4737,
											"end": 4746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4807,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4781,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4761,
											"end": 4808,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4951,
											"end": 4955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 4825,
											"end": 4956,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4825,
											"end": 4956,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4825,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4963,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4969,
											"end": 5191,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4969,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5062,
											"end": 5066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5113,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5191,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5197,
											"end": 5366,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 5197,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5315,
											"end": 5321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5359,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5331,
											"end": 5360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5331,
											"end": 5360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5366,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5366,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5366,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5372,
											"end": 5720,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 5372,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5435,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5453,
											"end": 5454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 5435,
											"end": 5455,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5435,
											"end": 5455,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5435,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5455,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 5469,
											"end": 5489,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5469,
											"end": 5489,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 5469,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5489,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5657,
											"end": 5658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5655,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5585,
											"end": 5659,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5660,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5556,
											"end": 5661,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5712,
											"end": 5713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5714,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5694,
											"end": 5714,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5694,
											"end": 5714,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5720,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5720,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5726,
											"end": 5822,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5726,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5810,
											"end": 5815,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5792,
											"end": 5816,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5792,
											"end": 5816,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5792,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 5816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 5816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5822,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5828,
											"end": 5932,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5828,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5920,
											"end": 5925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5902,
											"end": 5926,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5902,
											"end": 5926,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5902,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 5926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 5926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5932,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5938,
											"end": 6028,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 5938,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5972,
											"end": 5979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6021,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6001,
											"end": 6022,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6028,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6034,
											"end": 6160,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6034,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6153,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6104,
											"end": 6109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6100,
											"end": 6154,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6160,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6160,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6166,
											"end": 6243,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 6166,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6237,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6243,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6249,
											"end": 6405,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 6249,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6393,
											"end": 6398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6347,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6347,
											"end": 6399,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6347,
											"end": 6399,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6347,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6334,
											"end": 6399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6334,
											"end": 6399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6405,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6405,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6411,
											"end": 6539,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6411,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 6485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6527,
											"end": 6532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6509,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6509,
											"end": 6533,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6509,
											"end": 6533,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6509,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6496,
											"end": 6533,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6496,
											"end": 6533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6486,
											"end": 6539,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6486,
											"end": 6539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6486,
											"end": 6539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6486,
											"end": 6539,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6545,
											"end": 6707,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 6545,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 6695,
											"end": 6700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6633,
											"end": 6701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6633,
											"end": 6701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6707,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6707,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6713,
											"end": 6844,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 6713,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 6790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6814,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6832,
											"end": 6837,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6814,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6814,
											"end": 6838,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6814,
											"end": 6838,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6814,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6844,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6850,
											"end": 7002,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 6850,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 6990,
											"end": 6995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 6946,
											"end": 6996,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6946,
											"end": 6996,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 6946,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6923,
											"end": 7002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6923,
											"end": 7002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6923,
											"end": 7002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6923,
											"end": 7002,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7008,
											"end": 7134,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7008,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7071,
											"end": 7080,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7104,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7104,
											"end": 7128,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7104,
											"end": 7128,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7104,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7134,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7134,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7140,
											"end": 7306,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 7140,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7294,
											"end": 7299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7243,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 7243,
											"end": 7300,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7243,
											"end": 7300,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7243,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7306,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7312,
											"end": 7445,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 7312,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7433,
											"end": 7438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7415,
											"end": 7439,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7415,
											"end": 7439,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7415,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7451,
											"end": 7631,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 7451,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7499,
											"end": 7576,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7496,
											"end": 7497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7489,
											"end": 7577,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7596,
											"end": 7600,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7593,
											"end": 7594,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7586,
											"end": 7601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7620,
											"end": 7624,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7625,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7813,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 7637,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7777,
											"end": 7805,
											"name": "PUSH",
											"source": 10,
											"value": "4865726F436F7265204572726F72203A206F6E6C794F776E6572000000000000"
										},
										{
											"begin": 7773,
											"end": 7774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7806,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7813,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7819,
											"end": 7941,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 7819,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7892,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 7910,
											"end": 7915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7892,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 7892,
											"end": 7916,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7892,
											"end": 7916,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 7892,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 7917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7872,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 7872,
											"end": 7874,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 7929,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7933,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7872,
											"end": 7874,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 7872,
											"end": 7874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7947,
											"end": 8069,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 7947,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8020,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 8038,
											"end": 8043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8020,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 8020,
											"end": 8044,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8020,
											"end": 8044,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 8020,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8010,
											"end": 8045,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8059,
											"end": 8060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8049,
											"end": 8061,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8069,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeMiningPaused()": "ee72b8cc",
							"changePaused()": "9eb4eae5",
							"getHeroNFT()": "7cac00ee",
							"getItem()": "c412eaba",
							"getLevelDiagram()": "d36d0c18",
							"getMiningPaused()": "28919df6",
							"getOwner()": "893d20e8",
							"getPaused()": "6805b84b",
							"getToken()": "21df0da7",
							"initialize(address,address,address,address,address,address,uint256,uint256)": "c740671f",
							"priceOfKlay()": "3a1a8080",
							"priceOfToken()": "1b9cbdfb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"changeMiningPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changePaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHeroNFT\",\"outputs\":[{\"internalType\":\"contract IHeroNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getItem\",\"outputs\":[{\"internalType\":\"contract IKIP37Full\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLevelDiagram\",\"outputs\":[{\"internalType\":\"contract ILevelDiagram\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMiningPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IKIP7\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heroNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_levelDiagram\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_miningAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_klay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfKlay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Hero/utils/HeroController.sol\":\"HeroController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Hero/interface/IHeroNFT.sol\":{\"keccak256\":\"0x28719918b6bcd5da2fc05c963dd0c407c3d256a41ba787fd7dd05cfb8e0eefbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922cc5d0a7c86837ac8697ee76295642fb8ca35453f7e2b20392dc4d3403e651\",\"dweb:/ipfs/QmPYwhoSmrcTJDR8HgQKH4nTfauncjRUMBDWJTAY99ygX5\"]},\"Hero/interface/ILevelDiagram.sol\":{\"keccak256\":\"0xc0fbbbe5dc964f6f965fc1abde3b5cc387b9ec09527a147f261bfdead58a3b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9303cf1617cff14dbcd02dea01cdb5e5306e0c6196f31208f1ffce1bf4de3466\",\"dweb:/ipfs/QmWJrmzoPuR8oDUQ56pm2Z4DrvTVr7frpsLtGdWdAHsEi6\"]},\"Hero/utils/HeroController.sol\":{\"keccak256\":\"0xe603cc4bd26ab6084846a4d34ad9ecb10e7dc108ef6402fcdbb63169cd719ae8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e9a668be1d84bb51ac19bc74c351b740430523d36cd33cf457fa68fcb895ef7\",\"dweb:/ipfs/QmVCdV4xWL7vpebbBG39nNatCH3p2sRASFWHb94MH6pCCX\"]},\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]},\"interface/IKIP7/IKIP7.sol\":{\"keccak256\":\"0x5682f350cd2e8a78fc918639e421e7e81ca17576106687049595d84ca248346e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537a3ac6311e841c1fdb2b8b9270219bf6e7b2c91271f361c189dc90159a4bff\",\"dweb:/ipfs/QmRa5jJs3S3WjPPL4mWpXE2eGEk97gYR2S8yoDxtU8Tm68\"]},\"utils/SafeMath.sol\":{\"keccak256\":\"0x884e0eaf6a4a9779317975ad010c62f3a4bd66ed64334977bc7afba8d97fab58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61f2e9002f930fb312e3e6fe19753b1dedb5980b1baaef8914b794ba2a3106e\",\"dweb:/ipfs/QmYKxUyMMoak1sEdyQvq6hcEdsKtiAUunj1f51LBM6M8fm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "heroNFT",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IHeroNFT)30"
							},
							{
								"astId": 94,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IKIP7)720"
							},
							{
								"astId": 97,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "item",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IKIP37Full)589"
							},
							{
								"astId": 100,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "levelDiagram",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ILevelDiagram)79"
							},
							{
								"astId": 102,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "coreOwner",
								"offset": 0,
								"slot": "4",
								"type": "t_address_payable"
							},
							{
								"astId": 104,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "depositAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 106,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "miningAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 108,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "paused",
								"offset": 20,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 110,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "miningPaused",
								"offset": 21,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 112,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "priceOfKlay",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 114,
								"contract": "Hero/utils/HeroController.sol:HeroController",
								"label": "priceOfToken",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IHeroNFT)30": {
								"encoding": "inplace",
								"label": "contract IHeroNFT",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP37Full)589": {
								"encoding": "inplace",
								"label": "contract IKIP37Full",
								"numberOfBytes": "20"
							},
							"t_contract(IKIP7)720": {
								"encoding": "inplace",
								"label": "contract IKIP7",
								"numberOfBytes": "20"
							},
							"t_contract(ILevelDiagram)79": {
								"encoding": "inplace",
								"label": "contract ILevelDiagram",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP13.sol": {
				"IKIP13": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP13.sol\":\"IKIP13\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP17/IKIP17.sol": {
				"IKIP17": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP17/IKIP17.sol\":\"IKIP17\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP17/IKIP17.sol\":{\"keccak256\":\"0x8aaca7322408ebd3c1086d3b0c285721b92f9c87984dedf03a6b2698a25e1188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b071a01cc3eb2ce9b303ba24905f43f8d537466042dc2dbf6a1877db018670\",\"dweb:/ipfs/QmXbtEuZzGDwGTAsXBhBUVwcPGN7UEPc6zKSUF3LfMxSPm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37.sol": {
				"IKIP37": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37.sol\":\"IKIP37\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"IKIP37Full": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37Full.sol\":\"IKIP37Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37Full.sol\":{\"keccak256\":\"0xdd12853a84ddb6d1e6f11cea359d858206916acf6c4f2781d9bbb5ceabd3d917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2bcd5c381beede46e7b8ca489837706617c3c702fd8fe70563b0c4d3f85bcea\",\"dweb:/ipfs/QmXPCqN2Yj8Tawkeg6aCwRUcnsn6JcVfRvKYyZgtS1Lgtj\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"IKIP37MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP37/IKIP37MetadataURI.sol\":\"IKIP37MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP13.sol\":{\"keccak256\":\"0xfdc08b420cede6482f052a07ef775bf7c0103ceae60337727004f731a6bd2653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9eddad72f93d392fea0f3f0e67776553b6c9bbe06fc3fbd880dac47a61bf1b1\",\"dweb:/ipfs/QmfYexZsRLaVRfDoReAGBd2L5fAwUJe4o4b7JiiiFpjeUf\"]},\"interface/IKIP37/IKIP37.sol\":{\"keccak256\":\"0xd5ab10c6d1d62b27a38ecd19d534ba8bf3db56425069065b1cb0b5a16c47f7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e535a86c28ed23615fa385e004f46e795d549d6ccb77c73ccba99dcf692fc58\",\"dweb:/ipfs/QmR6w6fArhEaRnE3NfhjrMDsTEq893EE9PHVwJCcgGTsac\"]},\"interface/IKIP37/IKIP37MetadataURI.sol\":{\"keccak256\":\"0x436fce34d12c87b533de86dd98b218716ef59e7b5fc7677a6d82e54347d8f217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccdef2e041234906d7adf73194d3d29c0885d263546da69c85aac4f1460847da\",\"dweb:/ipfs/QmfYJFHs97agtUWpeDsVmjFrdWDWh9sm82NzqVBJmXXwuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interface/IKIP7/IKIP7.sol": {
				"IKIP7": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"safeTransfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event."
							},
							"safeTransfer(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"safeTransfer(address,uint256)": "423f6cef",
							"safeTransfer(address,uint256,bytes)": "eb795549",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"safeTransfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event.\"},\"safeTransfer(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IKIP7/IKIP7.sol\":\"IKIP7\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IKIP7/IKIP7.sol\":{\"keccak256\":\"0x5682f350cd2e8a78fc918639e421e7e81ca17576106687049595d84ca248346e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537a3ac6311e841c1fdb2b8b9270219bf6e7b2c91271f361c189dc90159a4bff\",\"dweb:/ipfs/QmRa5jJs3S3WjPPL4mWpXE2eGEk97gYR2S8yoDxtU8Tm68\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/SafeMath.sol\":56:1294  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"utils/SafeMath.sol\":56:1294  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 ISZERO 0xC8 PUSH3 0xCEEC4D 0xAE 0xB0 0xFB ISZERO POP 0x2F SWAP8 0xB9 0x1F 0xD6 PUSH19 0xD2F6D61E11AB05EAD2217EE9910764736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:1238:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 ISZERO 0xC8 PUSH3 0xCEEC4D 0xAE 0xB0 0xFB ISZERO POP 0x2F SWAP8 0xB9 0x1F 0xD6 PUSH19 0xD2F6D61E11AB05EAD2217EE9910764736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:1238:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 56,
									"end": 1294,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d415c862ceec4daeb0fb15502f97b91fd672d2f6d61e11ab05ead2217ee9910764736f6c63430008040033",
									".code": [
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 56,
											"end": 1294,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"utils/SafeMath.sol\":{\"keccak256\":\"0x884e0eaf6a4a9779317975ad010c62f3a4bd66ed64334977bc7afba8d97fab58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61f2e9002f930fb312e3e6fe19753b1dedb5980b1baaef8914b794ba2a3106e\",\"dweb:/ipfs/QmYKxUyMMoak1sEdyQvq6hcEdsKtiAUunj1f51LBM6M8fm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Hero/interface/IHeroNFT.sol": {
				"ast": {
					"absolutePath": "Hero/interface/IHeroNFT.sol",
					"exportedSymbols": {
						"IHeroNFT": [
							30
						],
						"IKIP13": [
							331
						],
						"IKIP17": [
							447
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"absolutePath": "interface/IKIP17/IKIP17.sol",
							"file": "../../interface/IKIP17/IKIP17.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 31,
							"sourceUnit": 448,
							"src": "56:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IKIP17",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 447,
										"src": "123:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "123:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 30,
							"linearizedBaseContracts": [
								30,
								447,
								331
							],
							"name": "IHeroNFT",
							"nameLocation": "111:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6a627842",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "145:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "158:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "150:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:13:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:0:0"
									},
									"scope": 30,
									"src": "136:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "187:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "200:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "192:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:18:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:0"
									},
									"scope": 30,
									"src": "178:41:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "75f890ab",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setContract",
									"nameLocation": "234:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_heroCore",
												"nameLocation": "254:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "246:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:19:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:0:0"
									},
									"scope": 30,
									"src": "225:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bcbb72c8",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getHeroCore",
									"nameLocation": "289:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "326:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:9:0"
									},
									"scope": 30,
									"src": "280:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "295d3ee8",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenIndex",
									"nameLocation": "350:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "389:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:9:0"
									},
									"scope": 30,
									"src": "341:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "101:299:0",
							"usedErrors": []
						}
					],
					"src": "32:369:0"
				},
				"id": 0
			},
			"Hero/interface/ILevelDiagram.sol": {
				"ast": {
					"absolutePath": "Hero/interface/ILevelDiagram.sol",
					"exportedSymbols": {
						"ILevelDiagram": [
							79
						]
					},
					"id": 80,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "ILevelDiagram",
							"nameLocation": "74:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "aa93c0ee",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nameLocation": "104:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "139:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "125:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "125:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "154:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "146:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:36:1"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "222:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "221:9:1"
									},
									"scope": 79,
									"src": "95:136:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicLevelAmount",
									"nameLocation": "246:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "280:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "272:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:15:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "350:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:9:1"
									},
									"scope": 79,
									"src": "237:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBasicGradeAmount",
									"nameLocation": "374:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "414:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "400:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "400:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:21:1"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "484:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:9:1"
									},
									"scope": 79,
									"src": "365:128:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateItemIndex",
									"nameLocation": "508:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "535:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "527:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:16:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "606:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:1"
									},
									"scope": 79,
									"src": "499:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePower",
									"nameLocation": "630:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "grade",
												"nameLocation": "659:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "645:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 63,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "645:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "674:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "666:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:36:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "744:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:9:1"
									},
									"scope": 79,
									"src": "621:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makeRandomNumberForItem",
									"nameLocation": "768:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "800:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "792:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:21:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "876:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:9:1"
									},
									"scope": 79,
									"src": "759:126:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 80,
							"src": "56:831:1",
							"usedErrors": []
						}
					],
					"src": "32:855:1"
				},
				"id": 1
			},
			"Hero/utils/HeroController.sol": {
				"ast": {
					"absolutePath": "Hero/utils/HeroController.sol",
					"exportedSymbols": {
						"HeroController": [
							319
						],
						"IHeroNFT": [
							30
						],
						"IKIP13": [
							331
						],
						"IKIP17": [
							447
						],
						"IKIP37": [
							565
						],
						"IKIP37Full": [
							589
						],
						"IKIP37MetadataURI": [
							602
						],
						"IKIP7": [
							720
						],
						"ILevelDiagram": [
							79
						],
						"SafeMath": [
							865
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 81,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"absolutePath": "utils/SafeMath.sol",
							"file": "../../utils/SafeMath.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 866,
							"src": "56:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Hero/interface/IHeroNFT.sol",
							"file": "../interface/IHeroNFT.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 31,
							"src": "92:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Hero/interface/ILevelDiagram.sol",
							"file": "../interface/ILevelDiagram.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 80,
							"src": "128:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IKIP7/IKIP7.sol",
							"file": "../../interface/IKIP7/IKIP7.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 721,
							"src": "170:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37Full.sol",
							"file": "../../interface/IKIP37/IKIP37Full.sol",
							"id": 86,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 590,
							"src": "212:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319
							],
							"name": "HeroController",
							"nameLocation": "270:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 88,
									"libraryName": {
										"id": 87,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 865,
										"src": "297:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "291:21:2"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "heroNFT",
									"nameLocation": "335:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "318:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IHeroNFT_$30",
										"typeString": "contract IHeroNFT"
									},
									"typeName": {
										"id": 90,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 89,
											"name": "IHeroNFT",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 30,
											"src": "318:8:2"
										},
										"referencedDeclaration": 30,
										"src": "318:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IHeroNFT_$30",
											"typeString": "contract IHeroNFT"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "362:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "348:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP7_$720",
										"typeString": "contract IKIP7"
									},
									"typeName": {
										"id": 93,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 92,
											"name": "IKIP7",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 720,
											"src": "348:5:2"
										},
										"referencedDeclaration": 720,
										"src": "348:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP7_$720",
											"typeString": "contract IKIP7"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "item",
									"nameLocation": "392:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "373:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKIP37Full_$589",
										"typeString": "contract IKIP37Full"
									},
									"typeName": {
										"id": 96,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 95,
											"name": "IKIP37Full",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 589,
											"src": "373:10:2"
										},
										"referencedDeclaration": 589,
										"src": "373:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKIP37Full_$589",
											"typeString": "contract IKIP37Full"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "levelDiagram",
									"nameLocation": "424:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "402:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILevelDiagram_$79",
										"typeString": "contract ILevelDiagram"
									},
									"typeName": {
										"id": 99,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 98,
											"name": "ILevelDiagram",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 79,
											"src": "402:13:2"
										},
										"referencedDeclaration": 79,
										"src": "402:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILevelDiagram_$79",
											"typeString": "contract ILevelDiagram"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "coreOwner",
									"nameLocation": "467:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "443:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 101,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "443:15:2",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 104,
									"mutability": "mutable",
									"name": "depositAddress",
									"nameLocation": "490:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "482:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 103,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "482:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 106,
									"mutability": "mutable",
									"name": "miningAddress",
									"nameLocation": "518:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "510:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 108,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "551:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "538:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 107,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "538:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 110,
									"mutability": "mutable",
									"name": "miningPaused",
									"nameLocation": "576:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "563:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 109,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "563:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3a1a8080",
									"id": 112,
									"mutability": "mutable",
									"name": "priceOfKlay",
									"nameLocation": "610:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "595:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "595:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b9cbdfb",
									"id": 114,
									"mutability": "mutable",
									"name": "priceOfToken",
									"nameLocation": "642:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "627:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 113,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "627:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 117,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "685:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "660:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 115,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "660:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "696:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "728:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "746:7:2",
															"subExpression": {
																"id": 120,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "747:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506175736564205374617465",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "755:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e92cd5d6dee16db56ebcf69b310fcfe1ea5001963f42c77d6d92785a76241b",
																"typeString": "literal_string \"Paused State\""
															},
															"value": "Paused State"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e92cd5d6dee16db56ebcf69b310fcfe1ea5001963f42c77d6d92785a76241b",
																"typeString": "literal_string \"Paused State\""
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "738:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "738:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "738:32:2"
											},
											{
												"id": 125,
												"nodeType": "PlaceholderStatement",
												"src": "780:1:2"
											}
										]
									},
									"id": 127,
									"name": "notPaused",
									"nameLocation": "716:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:2"
									},
									"src": "707:81:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "815:90:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 130,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "833:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "833:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 132,
																"name": "coreOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "847:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "833:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4865726f436f7265204572726f72203a206f6e6c794f776e6572",
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "858:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																"typeString": "literal_string \"HeroCore Error : onlyOwner\""
															},
															"value": "HeroCore Error : onlyOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72cf50db0f060e6fe0056ed8bb78d1c74722eaa20a26065d75e278372f87fed4",
																"typeString": "literal_string \"HeroCore Error : onlyOwner\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "825:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "825:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "825:62:2"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "897:1:2"
											}
										]
									},
									"id": 139,
									"name": "onlyOwner",
									"nameLocation": "803:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:2"
									},
									"src": "794:111:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "925:100:2",
										"statements": [
											{
												"expression": {
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 142,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "935:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "944:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "935:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "935:13:2"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "miningPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "958:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "973:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "958:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "958:19:2"
											},
											{
												"expression": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "coreOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "987:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 153,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1007:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1007:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "999:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "999:8:2",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "999:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "987:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "987:31:2"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:2:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:0:2"
									},
									"scope": 319,
									"src": "911:114:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1345:340:2",
										"statements": [
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "priceOfKlay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "1355:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 183,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1379:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 181,
																"name": "_klay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "1369:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 764,
															"src": "1369:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1369:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1355:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1355:33:2"
											},
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "priceOfToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1398:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 190,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1429:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 188,
																"name": "_tokenPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "1413:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 764,
															"src": "1413:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1413:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1398:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "1398:40:2"
											},
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 194,
														"name": "heroNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "1449:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHeroNFT_$30",
															"typeString": "contract IHeroNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 196,
																"name": "_heroNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1468:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 195,
															"name": "IHeroNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1459:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IHeroNFT_$30_$",
																"typeString": "type(contract IHeroNFT)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1459:18:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHeroNFT_$30",
															"typeString": "contract IHeroNFT"
														}
													},
													"src": "1449:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "1449:28:2"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 200,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1487:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP7_$720",
															"typeString": "contract IKIP7"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 202,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "1501:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 201,
															"name": "IKIP7",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "1495:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP7_$720_$",
																"typeString": "type(contract IKIP7)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1495:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP7_$720",
															"typeString": "contract IKIP7"
														}
													},
													"src": "1487:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$720",
														"typeString": "contract IKIP7"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1487:21:2"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 206,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1518:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$589",
															"typeString": "contract IKIP37Full"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 208,
																"name": "_item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "1536:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 207,
															"name": "IKIP37Full",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "1525:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IKIP37Full_$589_$",
																"typeString": "type(contract IKIP37Full)"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1525:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKIP37Full_$589",
															"typeString": "contract IKIP37Full"
														}
													},
													"src": "1518:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$589",
														"typeString": "contract IKIP37Full"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1518:24:2"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 212,
														"name": "levelDiagram",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1552:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILevelDiagram_$79",
															"typeString": "contract ILevelDiagram"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 214,
																"name": "_levelDiagram",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1581:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 213,
															"name": "ILevelDiagram",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1567:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILevelDiagram_$79_$",
																"typeString": "type(contract ILevelDiagram)"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1567:28:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILevelDiagram_$79",
															"typeString": "contract ILevelDiagram"
														}
													},
													"src": "1552:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILevelDiagram_$79",
														"typeString": "contract ILevelDiagram"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "1552:43:2"
											},
											{
												"expression": {
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 218,
														"name": "depositAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "1606:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 219,
														"name": "_depositAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1623:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1606:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "1606:32:2"
											},
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "miningAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1648:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "_miningAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1664:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1648:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1648:30:2"
											}
										]
									},
									"functionSelector": "c740671f",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 139,
												"src": "1335:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1335:9:2"
										}
									],
									"name": "initialize",
									"nameLocation": "1088:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "_heroNFT",
												"nameLocation": "1116:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1108:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1142:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1134:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "_item",
												"nameLocation": "1166:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1158:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_levelDiagram",
												"nameLocation": "1189:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1181:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "_depositAddress",
												"nameLocation": "1220:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1212:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_miningAddress",
												"nameLocation": "1253:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1245:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "_klay",
												"nameLocation": "1285:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1277:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "1308:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1300:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:227:2"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:0:2"
									},
									"scope": 319,
									"src": "1079:606:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1734:33:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1744:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1753:7:2",
														"subExpression": {
															"id": 233,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1754:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1744:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1744:16:2"
											}
										]
									},
									"functionSelector": "9eb4eae5",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 139,
												"src": "1724:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1724:9:2"
										}
									],
									"name": "changePaused",
									"nameLocation": "1700:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1712:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:2"
									},
									"scope": 319,
									"src": "1691:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "1822:45:2",
										"statements": [
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 243,
														"name": "miningPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1832:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1847:13:2",
														"subExpression": {
															"id": 244,
															"name": "miningPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1848:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1832:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1832:28:2"
											}
										]
									},
									"functionSelector": "ee72b8cc",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 241,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 240,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 139,
												"src": "1812:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1812:9:2"
										}
									],
									"name": "changeMiningPaused",
									"nameLocation": "1782:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1800:2:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1822:0:2"
									},
									"scope": 319,
									"src": "1773:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "1963:33:2",
										"statements": [
											{
												"expression": {
													"id": 254,
													"name": "coreOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 102,
													"src": "1980:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 253,
												"id": 255,
												"nodeType": "Return",
												"src": "1973:16:2"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1914:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:2:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1946:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:17:2"
									},
									"scope": 319,
									"src": "1905:91:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2050:30:2",
										"statements": [
											{
												"expression": {
													"id": 262,
													"name": "paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 108,
													"src": "2067:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 261,
												"id": 263,
												"nodeType": "Return",
												"src": "2060:13:2"
											}
										]
									},
									"functionSelector": "6805b84b",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPaused",
									"nameLocation": "2011:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2020:2:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2044:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2044:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2043:6:2"
									},
									"scope": 319,
									"src": "2002:78:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2140:36:2",
										"statements": [
											{
												"expression": {
													"id": 270,
													"name": "miningPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 110,
													"src": "2157:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 269,
												"id": 271,
												"nodeType": "Return",
												"src": "2150:19:2"
											}
										]
									},
									"functionSelector": "28919df6",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMiningPaused",
									"nameLocation": "2095:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2110:2:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2134:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2134:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:6:2"
									},
									"scope": 319,
									"src": "2086:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2243:36:2",
										"statements": [
											{
												"expression": {
													"id": 279,
													"name": "levelDiagram",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "2260:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILevelDiagram_$79",
														"typeString": "contract ILevelDiagram"
													}
												},
												"functionReturnParameters": 278,
												"id": 280,
												"nodeType": "Return",
												"src": "2253:19:2"
											}
										]
									},
									"functionSelector": "d36d0c18",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevelDiagram",
									"nameLocation": "2191:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2206:2:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2229:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILevelDiagram_$79",
													"typeString": "contract ILevelDiagram"
												},
												"typeName": {
													"id": 276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 275,
														"name": "ILevelDiagram",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "2229:13:2"
													},
													"referencedDeclaration": 79,
													"src": "2229:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILevelDiagram_$79",
														"typeString": "contract ILevelDiagram"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:15:2"
									},
									"scope": 319,
									"src": "2182:97:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2337:28:2",
										"statements": [
											{
												"expression": {
													"id": 288,
													"name": "item",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "2354:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$589",
														"typeString": "contract IKIP37Full"
													}
												},
												"functionReturnParameters": 287,
												"id": 289,
												"nodeType": "Return",
												"src": "2347:11:2"
											}
										]
									},
									"functionSelector": "c412eaba",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getItem",
									"nameLocation": "2294:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2301:2:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2325:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKIP37Full_$589",
													"typeString": "contract IKIP37Full"
												},
												"typeName": {
													"id": 285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 284,
														"name": "IKIP37Full",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 589,
														"src": "2325:10:2"
													},
													"referencedDeclaration": 589,
													"src": "2325:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP37Full_$589",
														"typeString": "contract IKIP37Full"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:12:2"
									},
									"scope": 319,
									"src": "2285:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "2419:29:2",
										"statements": [
											{
												"expression": {
													"id": 297,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "2436:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$720",
														"typeString": "contract IKIP7"
													}
												},
												"functionReturnParameters": 296,
												"id": 298,
												"nodeType": "Return",
												"src": "2429:12:2"
											}
										]
									},
									"functionSelector": "21df0da7",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nameLocation": "2380:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:2:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2412:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKIP7_$720",
													"typeString": "contract IKIP7"
												},
												"typeName": {
													"id": 294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 293,
														"name": "IKIP7",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 720,
														"src": "2412:5:2"
													},
													"referencedDeclaration": 720,
													"src": "2412:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKIP7_$720",
														"typeString": "contract IKIP7"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2411:7:2"
									},
									"scope": 319,
									"src": "2371:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "2507:31:2",
										"statements": [
											{
												"expression": {
													"id": 306,
													"name": "heroNFT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2524:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"functionReturnParameters": 305,
												"id": 307,
												"nodeType": "Return",
												"src": "2517:14:2"
											}
										]
									},
									"functionSelector": "7cac00ee",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHeroNFT",
									"nameLocation": "2463:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2473:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2497:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IHeroNFT_$30",
													"typeString": "contract IHeroNFT"
												},
												"typeName": {
													"id": 303,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 302,
														"name": "IHeroNFT",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 30,
														"src": "2497:8:2"
													},
													"referencedDeclaration": 30,
													"src": "2497:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHeroNFT_$30",
														"typeString": "contract IHeroNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:10:2"
									},
									"scope": 319,
									"src": "2454:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2600:39:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 314,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2617:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2617:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 316,
												"nodeType": "Return",
												"src": "2610:22:2"
											}
										]
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_currentTime",
									"nameLocation": "2553:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2565:2:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2591:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:9:2"
									},
									"scope": 319,
									"src": "2544:95:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "261:2380:2",
							"usedErrors": []
						}
					],
					"src": "32:2610:2"
				},
				"id": 2
			},
			"interface/IKIP13.sol": {
				"ast": {
					"absolutePath": "interface/IKIP13.sol",
					"exportedSymbols": {
						"IKIP13": [
							331
						]
					},
					"id": 332,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "258:22:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "282:142:3",
								"text": " @dev Interface of the KIP13 standard as defined in the KIP.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard"
							},
							"fullyImplemented": false,
							"id": 331,
							"linearizedBaseContracts": [
								331
							],
							"name": "IKIP13",
							"nameLocation": "435:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "448:387:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n to learn more about how these ids are created.\n Requirements:\n - implementation of this function call must use less than 30 000 gas"
									},
									"functionSelector": "01ffc9a7",
									"id": 330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "849:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "874:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "867:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 324,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "867:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:20:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "910:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "910:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:6:3"
									},
									"scope": 331,
									"src": "840:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 332,
							"src": "425:493:3",
							"usedErrors": []
						}
					],
					"src": "258:661:3"
				},
				"id": 3
			},
			"interface/IKIP17/IKIP17.sol": {
				"ast": {
					"absolutePath": "interface/IKIP17/IKIP17.sol",
					"exportedSymbols": {
						"IKIP13": [
							331
						],
						"IKIP17": [
							447
						]
					},
					"id": 448,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 333,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "243:22:4"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 332,
							"src": "267:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 336,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 331,
										"src": "380:6:4"
									},
									"id": 337,
									"nodeType": "InheritanceSpecifier",
									"src": "380:6:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 335,
								"nodeType": "StructuredDocumentation",
								"src": "292:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 447,
							"linearizedBaseContracts": [
								447,
								331
							],
							"name": "IKIP17",
							"nameLocation": "370:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "393:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 346,
									"name": "Transfer",
									"nameLocation": "492:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "526:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "510:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "540:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "584:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "568:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:97:4"
									},
									"src": "486:112:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "604:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 355,
									"name": "Approval",
									"nameLocation": "709:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "743:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "727:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "774:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "758:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "808:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "792:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:104:4"
									},
									"src": "703:119:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "828:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 364,
									"name": "ApprovalForAll",
									"nameLocation": "956:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "996:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "980:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1027:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1011:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1050:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1045:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:94:4"
									},
									"src": "950:115:4"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "1071:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1161:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:15:4"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1217:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1209:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:17:4"
									},
									"scope": 447,
									"src": "1152:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1232:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1377:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1393:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1385:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:17:4"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1433:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1425:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:15:4"
									},
									"scope": 447,
									"src": "1368:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1446:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2016:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2050:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2042:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2072:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2064:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2124:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2109:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2109:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:102:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2143:0:4"
									},
									"scope": 447,
									"src": "2007:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2150:690:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2854:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2888:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2880:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2910:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2902:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2930:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2922:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:73:4"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2952:0:4"
									},
									"scope": 447,
									"src": "2845:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "2959:504:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3477:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3507:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3499:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3529:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3521:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3549:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3541:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:73:4"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3571:0:4"
									},
									"scope": 447,
									"src": "3468:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "3578:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4044:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4060:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "4052:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4072:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "4064:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4064:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:29:4"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:0:4"
									},
									"scope": 447,
									"src": "4035:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "4096:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4419:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4445:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "4437:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4460:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "4455:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4455:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4436:34:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4479:0:4"
									},
									"scope": 447,
									"src": "4410:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "4486:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4639:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4659:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "4651:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4651:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:17:4"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4723:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "4715:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4714:18:4"
									},
									"scope": 447,
									"src": "4630:103:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "4739:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4891:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4916:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "4908:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4931:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "4923:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4907:33:4"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "4988:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4988:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4987:6:4"
									},
									"scope": 447,
									"src": "4882:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 448,
							"src": "360:4636:4",
							"usedErrors": []
						}
					],
					"src": "243:4754:4"
				},
				"id": 4
			},
			"interface/IKIP37/IKIP37.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37.sol",
					"exportedSymbols": {
						"IKIP13": [
							331
						],
						"IKIP37": [
							565
						]
					},
					"id": 566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 449,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:5"
						},
						{
							"absolutePath": "interface/IKIP13.sol",
							"file": "../IKIP13.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 566,
							"sourceUnit": 332,
							"src": "56:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 451,
										"name": "IKIP13",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 331,
										"src": "101:6:5"
									},
									"id": 452,
									"nodeType": "InheritanceSpecifier",
									"src": "101:6:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 565,
							"linearizedBaseContracts": [
								565,
								331
							],
							"name": "IKIP37",
							"nameLocation": "91:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 464,
									"name": "TransferSingle",
									"nameLocation": "120:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "160:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "144:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "195:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "179:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "226:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "210:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": false,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "247:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "239:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "268:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "260:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:146:5"
									},
									"src": "114:167:5"
								},
								{
									"anonymous": false,
									"id": 478,
									"name": "TransferBatch",
									"nameLocation": "292:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "331:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "315:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "366:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "350:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "397:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "381:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "410:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 471,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "410:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ArrayTypeName",
													"src": "410:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"indexed": false,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "444:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "434:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 474,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "434:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 475,
													"nodeType": "ArrayTypeName",
													"src": "434:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:152:5"
									},
									"src": "286:172:5"
								},
								{
									"anonymous": false,
									"id": 486,
									"name": "ApprovalForAll",
									"nameLocation": "469:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "509:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "493:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "541:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "525:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "565:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "560:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:97:5"
									},
									"src": "463:118:5"
								},
								{
									"anonymous": false,
									"id": 492,
									"name": "URI",
									"nameLocation": "592:3:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "603:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "596:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"indexed": true,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "627:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "611:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:36:5"
									},
									"src": "586:46:5"
								},
								{
									"functionSelector": "f242432a",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "647:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "704:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "696:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "725:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "717:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "746:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "738:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "777:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "762:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:125:5"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "797:0:5"
									},
									"scope": 565,
									"src": "638:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2eb2c2d6",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "813:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "852:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "844:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "875:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "867:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "907:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "888:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 510,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "888:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 511,
													"nodeType": "ArrayTypeName",
													"src": "888:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "_values",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "921:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 513,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "921:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 514,
													"nodeType": "ArrayTypeName",
													"src": "921:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "972:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "957:20:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 516,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:149:5"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:5"
									},
									"scope": 565,
									"src": "804:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00fdd58e",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1026:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1018:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1042:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1034:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1094:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:5"
									},
									"scope": 565,
									"src": "999:104:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e1273f4",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1118:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "_owners",
												"nameLocation": "1152:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1133:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 530,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1133:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 531,
													"nodeType": "ArrayTypeName",
													"src": "1133:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "_ids",
												"nameLocation": "1180:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1161:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 533,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1161:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"nodeType": "ArrayTypeName",
													"src": "1161:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:53:5"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1233:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 537,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1233:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 538,
													"nodeType": "ArrayTypeName",
													"src": "1233:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:18:5"
									},
									"scope": 565,
									"src": "1109:142:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1266:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1292:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1284:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1308:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1303:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1303:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:35:5"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:5"
									},
									"scope": 565,
									"src": "1257:71:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1343:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1368:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1360:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1384:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1376:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:35:5"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1442:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:6:5"
									},
									"scope": 565,
									"src": "1334:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bd85b039",
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1463:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1483:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1475:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:13:5"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 565,
									"src": "1454:66:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 566,
							"src": "81:1441:5",
							"usedErrors": []
						}
					],
					"src": "32:1491:5"
				},
				"id": 5
			},
			"interface/IKIP37/IKIP37Full.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37Full.sol",
					"exportedSymbols": {
						"IKIP13": [
							331
						],
						"IKIP37": [
							565
						],
						"IKIP37Full": [
							589
						],
						"IKIP37MetadataURI": [
							602
						]
					},
					"id": 590,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 567,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:6"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
							"file": "./IKIP37MetadataURI.sol",
							"id": 568,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 590,
							"sourceUnit": 603,
							"src": "56:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 569,
										"name": "IKIP37MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 602,
										"src": "115:17:6"
									},
									"id": 570,
									"nodeType": "InheritanceSpecifier",
									"src": "115:17:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 589,
							"linearizedBaseContracts": [
								589,
								602,
								565,
								331
							],
							"name": "IKIP37Full",
							"nameLocation": "101:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "156e29f6",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "148:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "170:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "162:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "193:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "185:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "219:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "211:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:80:6"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:6"
									},
									"scope": 589,
									"src": "139:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f5298aca",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "257:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "279:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "271:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "302:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "294:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "328:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "320:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:80:6"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:6"
									},
									"scope": 589,
									"src": "248:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 590,
							"src": "91:262:6",
							"usedErrors": []
						}
					],
					"src": "32:322:6"
				},
				"id": 6
			},
			"interface/IKIP37/IKIP37MetadataURI.sol": {
				"ast": {
					"absolutePath": "interface/IKIP37/IKIP37MetadataURI.sol",
					"exportedSymbols": {
						"IKIP13": [
							331
						],
						"IKIP37": [
							565
						],
						"IKIP37MetadataURI": [
							602
						]
					},
					"id": 603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 591,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:7"
						},
						{
							"absolutePath": "interface/IKIP37/IKIP37.sol",
							"file": "./IKIP37.sol",
							"id": 592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 603,
							"sourceUnit": 566,
							"src": "56:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 593,
										"name": "IKIP37",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 565,
										"src": "111:6:7"
									},
									"id": 594,
									"nodeType": "InheritanceSpecifier",
									"src": "111:6:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 602,
							"linearizedBaseContracts": [
								602,
								565,
								331
							],
							"name": "IKIP37MetadataURI",
							"nameLocation": "90:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0e89341c",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "133:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "145:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "137:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:12:7"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "172:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "172:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:15:7"
									},
									"scope": 602,
									"src": "124:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 603,
							"src": "80:109:7",
							"usedErrors": []
						}
					],
					"src": "32:158:7"
				},
				"id": 7
			},
			"interface/IKIP7/IKIP7.sol": {
				"ast": {
					"absolutePath": "interface/IKIP7/IKIP7.sol",
					"exportedSymbols": {
						"IKIP7": [
							720
						]
					},
					"id": 721,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 604,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 605,
								"nodeType": "StructuredDocumentation",
								"src": "56:125:8",
								"text": " @dev Interface of the KIP7 standard as defined in the KIP.\n See http://kips.klaytn.com/KIPs/kip-7-fungible_token"
							},
							"fullyImplemented": false,
							"id": 720,
							"linearizedBaseContracts": [
								720
							],
							"name": "IKIP7",
							"nameLocation": "192:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "204:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 614,
									"name": "Transfer",
									"nameLocation": "373:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "398:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "382:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "420:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "404:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "432:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "424:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:57:8"
									},
									"src": "367:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "445:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 623,
									"name": "Approval",
									"nameLocation": "604:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "638:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "622:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "669:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "653:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "694:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "686:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:93:8"
									},
									"src": "598:108:8"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "712:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "792:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:2:8"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "829:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:9:8"
									},
									"scope": 720,
									"src": "783:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "844:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "930:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "948:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "940:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:17:8"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "980:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:9:8"
									},
									"scope": 720,
									"src": "921:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "995:202:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1211:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1228:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1220:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1240:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1232:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:28:8"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1266:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:8"
									},
									"scope": 720,
									"src": "1202:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "1278:285:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1577:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1595:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1587:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1610:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1602:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:32:8"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:9:8"
									},
									"scope": 720,
									"src": "1568:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "1681:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2337:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2353:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2345:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2370:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2362:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:33:8"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2396:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2396:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:6:8"
									},
									"scope": 720,
									"src": "2328:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "2408:287:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2709:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2739:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2731:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2761:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2753:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2781:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2773:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2721:72:8"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2812:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2812:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2811:6:8"
									},
									"scope": 720,
									"src": "2700:118:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "2824:201:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "eb795549",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3039:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3069:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3061:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3096:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3088:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3125:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3112:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3112:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:84:8"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:8"
									},
									"scope": 720,
									"src": "3030:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "3151:128:8",
										"text": " @dev  Moves `amount` tokens from the caller's account to `recipient`.\n Emits a {Transfer} event."
									},
									"functionSelector": "423f6cef",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3293:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3314:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3306:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3306:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3333:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3325:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3325:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3305:35:8"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:8"
									},
									"scope": 720,
									"src": "3284:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3356:221:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3591:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3625:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3617:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3649:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3641:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3676:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3668:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3705:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3692:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 705,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3607:108:8"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3724:0:8"
									},
									"scope": 720,
									"src": "3582:143:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "3731:147:8",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3892:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3926:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3918:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3950:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3942:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3977:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3969:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:81:8"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3998:0:8"
									},
									"scope": 720,
									"src": "3883:116:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 721,
							"src": "182:3819:8",
							"usedErrors": []
						}
					],
					"src": "32:3970:8"
				},
				"id": 8
			},
			"utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							865
						]
					},
					"id": 866,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 722,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 865,
							"linearizedBaseContracts": [
								865
							],
							"name": "SafeMath",
							"nameLocation": "64:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "146:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 731,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "163:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 732,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "167:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "163:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 730,
												"id": 734,
												"nodeType": "Return",
												"src": "156:12:9"
											}
										]
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "88:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "100:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "92:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "92:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "111:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "103:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "91:22:9"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "137:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:9"
									},
									"scope": 865,
									"src": "79:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "248:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 745,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "265:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 746,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "269:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "265:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 744,
												"id": 748,
												"nodeType": "Return",
												"src": "258:12:9"
											}
										]
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "190:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "202:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "194:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "213:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "205:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:22:9"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "239:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:9:9"
									},
									"scope": 865,
									"src": "181:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "350:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 759,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "367:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 760,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "371:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "367:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 758,
												"id": 762,
												"nodeType": "Return",
												"src": "360:12:9"
											}
										]
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "292:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "304:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "296:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "315:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "307:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:22:9"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "341:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:9:9"
									},
									"scope": 865,
									"src": "283:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "452:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "469:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "473:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "469:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 776,
												"nodeType": "Return",
												"src": "462:12:9"
											}
										]
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "394:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "406:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "398:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "417:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "409:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:22:9"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "443:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:9:9"
									},
									"scope": 865,
									"src": "385:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "554:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "571:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 788,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "575:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "571:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 786,
												"id": 790,
												"nodeType": "Return",
												"src": "564:12:9"
											}
										]
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "496:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "508:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "500:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "519:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "511:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:22:9"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "545:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:9:9"
									},
									"scope": 865,
									"src": "487:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "714:106:9",
										"statements": [
											{
												"id": 814,
												"nodeType": "UncheckedBlock",
												"src": "724:90:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 804,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "756:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 805,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "761:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "756:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 807,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "764:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 803,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "748:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "748:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 809,
														"nodeType": "ExpressionStatement",
														"src": "748:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "798:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 811,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "802:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "798:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 802,
														"id": 813,
														"nodeType": "Return",
														"src": "791:12:9"
													}
												]
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "598:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "619:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "611:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "638:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "630:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "663:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "649:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "649:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:80:9"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "705:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:9:9"
									},
									"scope": 865,
									"src": "589:231:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "951:105:9",
										"statements": [
											{
												"id": 838,
												"nodeType": "UncheckedBlock",
												"src": "961:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 828,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "993:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "997:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "993:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 831,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "1000:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 827,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "985:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "985:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 833,
														"nodeType": "ExpressionStatement",
														"src": "985:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "1034:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 835,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "1038:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1034:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 826,
														"id": 837,
														"nodeType": "Return",
														"src": "1027:12:9"
													}
												]
											}
										]
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "835:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "856:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "848:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "875:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "867:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "900:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "886:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "886:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:80:9"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "942:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:9:9"
									},
									"scope": 865,
									"src": "826:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "1187:105:9",
										"statements": [
											{
												"id": 862,
												"nodeType": "UncheckedBlock",
												"src": "1197:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 852,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "1229:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1233:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1229:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 855,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "1236:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 851,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1221:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1221:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 857,
														"nodeType": "ExpressionStatement",
														"src": "1221:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 858,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "1270:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 859,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "1274:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1270:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 850,
														"id": 861,
														"nodeType": "Return",
														"src": "1263:12:9"
													}
												]
											}
										]
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1071:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1092:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1084:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1111:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1103:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1136:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1122:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1122:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:80:9"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1178:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:9:9"
									},
									"scope": 865,
									"src": "1062:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 866,
							"src": "56:1238:9",
							"usedErrors": []
						}
					],
					"src": "32:1263:9"
				},
				"id": 9
			}
		}
	}
}