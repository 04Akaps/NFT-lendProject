[{"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/index.js":"1","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/App.js":"2","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/Home.js":"3","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/main.js":"4","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/MyPage/MyPage.js":"5","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/MainPage/MainPage.js":"6","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/TranscationPage/TransactionPage.js":"7","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/NavBar/NavBar.js":"8","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/LoginPage/LoginPage.js":"9","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/Mint/Mint.js":"10","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/TravelPage/TravelPage.js":"11","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/BorrowPage/BorrowFrom.js":"12","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/BorrowPage/BorrowTo.js":"13","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/MiningPage/MiningPage.js":"14","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/BorrowPage/BorrowPage.js":"15","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/Error/Error.js":"16","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/utils/utils.js":"17","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/utils/CardComponents.js":"18","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/utils/Variable.js":"19","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/contract/contract.js":"20"},{"size":313,"mtime":1667701637527,"results":"21","hashOfConfig":"22"},{"size":713,"mtime":1667701637524,"results":"23","hashOfConfig":"22"},{"size":1683,"mtime":1667701637524,"results":"24","hashOfConfig":"22"},{"size":735,"mtime":1667701637527,"results":"25","hashOfConfig":"22"},{"size":984,"mtime":1667704835474,"results":"26","hashOfConfig":"22"},{"size":5715,"mtime":1667701637526,"results":"27","hashOfConfig":"22"},{"size":162,"mtime":1667701637526,"results":"28","hashOfConfig":"22"},{"size":4815,"mtime":1667701637526,"results":"29","hashOfConfig":"22"},{"size":4362,"mtime":1667822410618,"results":"30","hashOfConfig":"22"},{"size":3204,"mtime":1667701637526,"results":"31","hashOfConfig":"22"},{"size":2531,"mtime":1667701637526,"results":"32","hashOfConfig":"22"},{"size":86,"mtime":1667701637524,"results":"33","hashOfConfig":"22"},{"size":2551,"mtime":1667704564297,"results":"34","hashOfConfig":"22"},{"size":3163,"mtime":1667704763781,"results":"35","hashOfConfig":"22"},{"size":2326,"mtime":1667701637524,"results":"36","hashOfConfig":"22"},{"size":69,"mtime":1667701637525,"results":"37","hashOfConfig":"22"},{"size":2247,"mtime":1667701637527,"results":"38","hashOfConfig":"22"},{"size":628,"mtime":1667701637527,"results":"39","hashOfConfig":"22"},{"size":197,"mtime":1667701637527,"results":"40","hashOfConfig":"22"},{"size":72,"mtime":1667822403651,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"11wgg3y",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/index.js",[],["93","94"],"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/App.js",[],"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/Home.js",["95","96"],"import React from \"react\";\n\nimport { Route, useLocation } from \"react-router-dom\";\nimport {\n  NavBar,\n  MainPage,\n  MyPage,\n  MiningPage,\n  TravelPage,\n  BorrowPage,\n  TransactionPage,\n  Error,\n  Mint,\n} from \"components/main\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst routers = [\n  {\n    path: \"/\",\n    component: MainPage,\n  },\n  {\n    path: \"/MyPage\",\n    component: MyPage,\n  },\n  {\n    path: \"/MiningPage\",\n    component: MiningPage,\n  },\n  {\n    path: \"/TravelPage\",\n    component: TravelPage,\n  },\n  {\n    path: \"/BorrowPage\",\n    component: BorrowPage,\n  },\n  {\n    path: \"/TransactionPage\",\n    component: TransactionPage,\n  },\n\n  {\n    path: \"/Mint\",\n    component: Mint,\n  },\n];\n\nfunction Home() {\n  const urlPath = useLocation();\n\n  const [checkUrl, setCheckUrl] = useState(false);\n\n  useEffect(() => {\n    let pathName = urlPath.pathname;\n\n    for (let i = 0; i < routers.length; i++) {\n      const url = routers[i].path;\n      if (url == pathName) {\n        setCheckUrl(true);\n        break;\n      }\n    }\n  }, []);\n\n  window.ethereum.on(\"accountsChanged\", async function (account) {\n    window.location.reload();\n  });\n\n  window.ethereum.on(\"networkChanged\", async function (network) {\n    window.localStorage.removeItem(\"connect\");\n    window.location.replace(\"/\");\n  });\n\n  return (\n    <di>\n      {checkUrl && <NavBar />}\n\n      <div className={`${checkUrl ? \"show-url\" : \"hide-url\"}`}>\n        {routers.map((data, i) => {\n          return (\n            <Route exact path={data.path} key={i} component={data.component} />\n          );\n        })}\n      </div>\n      {!checkUrl && <Error />}\n    </di>\n  );\n}\n\nexport default Home;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/main.js",[],"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/MyPage/MyPage.js",["97","98","99","100","101","102"],"import { imgLink } from \"components/utils/utils\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { Col, Row } from \"react-bootstrap\";\nimport \"./MyPage.scss\";\n\nconst dummy = [\n  {\n    tagName: \"MyNFT\",\n  },\n  {\n    tagName: \"Mining\",\n  },\n  {\n    tagName: \"Traveling\",\n  },\n  {\n    tagName: \"Borrow\",\n  },\n];\n\nconst cardDummy = [\n  {\n    img: imgLink.slumpOne,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpTwo,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpThree,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpFour,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpFive,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpSix,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpSeven,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n];\n\nfunction MyPage() {\n  return <div>test</div>;\n}\n\nexport default MyPage;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/MainPage/MainPage.js",["103","104"],"import { imgLink } from \"components/utils/utils\";\nimport React from \"react\";\nimport { Row, Col, Button, Card } from \"react-bootstrap\";\nimport \"./MainPage.scss\";\n\nconst contentMap = [\n  {\n    image: imgLink.game,\n    text: \"게임을 즐기고 다른 사람들과 경쟁하세요!!\",\n    title: \"Play Earn\",\n  },\n\n  {\n    image: imgLink.play,\n    text: \"Staking을 하여 코인을 투적하세요!\",\n    title: \"NFT Mining\",\n  },\n\n  {\n    image: imgLink.lend,\n    text: \"서로 NFT를 빌려줘서 보상 및 탐험을 즐기세요!\",\n    title: \"Lend NFT To Others\",\n  },\n\n  {\n    image: imgLink.exploration,\n    text: \"모험에 참여하여 또다른 NFT를 가져가세요!\",\n    title: \"Exploration Using NFT\",\n  },\n];\n\nfunction MainPage() {\n  const observer = new IntersectionObserver((e) => {\n    console.log(\"sd\");\n  });\n\n  return (\n    <div>\n      <Row lg={1} sm={1} xs={1}>\n        <Col\n          className=\"flex justify-center column align-center\"\n          style={{\n            color: \"purple\",\n            fontSize: \"2rem\",\n            fontWeight: \"1000\",\n            marginTop: \"5%\",\n          }}\n        >\n          <Button\n            style={{\n              fontWeight: \"1000\",\n              color: \"#fff\",\n              background: \"purple\",\n              border: \"none\",\n              width: \"200px\",\n            }}\n          >\n            MyPage\n          </Button>\n          Welcome To My WebSite\n        </Col>\n\n        <Col className=\"flex justify-center column align-center\">\n          <div\n            style={{\n              background: \"transparent\",\n              color: \"purple\",\n              maxWidth: \"50%\",\n              whiteSpace: \"normal\",\n              wordBreak: \"break-all\",\n              textAlign: \"center\",\n            }}\n          >\n            이곳은 MainPage 입니다. 대략적인 사이트에 대한 설명이 들어가\n            있습니다. 감사합니다.\n          </div>\n        </Col>\n\n        <div\n          style={{\n            marginTop: \"300px\",\n            marginBottom: \"300px\",\n          }}\n        >\n          <div\n            className=\"flex justify-center\"\n            style={{\n              padding: \"20px\",\n              fontWeight: \"1000\",\n              fontSize: \"3rem\",\n              color: \"purple\",\n            }}\n          >\n            Our Content\n          </div>\n\n          <Row className=\"flex justify-around w-100\" lg={4} sm={2} xs={1}>\n            {contentMap.map((result, index) => {\n              return (\n                <Col className=\"flex justify-center\">\n                  <Card\n                    id={`card${index}`}\n                    style={{\n                      margin: \"20px\",\n                      padding: \"20px\",\n                      borderRadius: \"12px\",\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    <img\n                      src={result.image}\n                      style={{\n                        borderRadius: \"12px\",\n                        width: \"100%\",\n                        height: \"90%\",\n                        objectFit: \"cover\",\n                      }}\n                      onMouseOver={(e) => {\n                        e.target.style.transition = \"all 1s\";\n                        e.target.style.opacity = 0;\n\n                        const data = document.querySelectorAll(`#test${index}`);\n                        const card = document.querySelectorAll(`#card${index}`);\n                        const title = document.querySelectorAll(\n                          `#title${index}`\n                        );\n\n                        title[0].style.color = \"#fff\";\n\n                        card[0].style.background = \"purple\";\n                        card[0].style.transition = \"all 1s\";\n\n                        data[0].style.transition = \"all 1s\";\n                        data[0].style.opacity = 1;\n                      }}\n                      onMouseOut={(e) => {\n                        e.target.style.opacity = 1;\n\n                        const card = document.querySelectorAll(`#card${index}`);\n\n                        const title = document.querySelectorAll(\n                          `#title${index}`\n                        );\n\n                        const data = document.querySelectorAll(`#test${index}`);\n\n                        title[0].style.color = \"black\";\n                        card[0].style.background = \"#fff\";\n                        data[0].style.opacity = 0;\n                      }}\n                    />\n                    <div\n                      id={`test${index}`}\n                      style={{\n                        position: \"absolute\",\n                        opacity: \"0\",\n                        top: \"20%\",\n                        width: \"90%\",\n                        marginRight: \"auto\",\n                        marginLeft: \"auto\",\n                        background: \"transparent\",\n                        color: \"#fff\",\n                      }}\n                    >\n                      {result.text}\n                    </div>\n                    <div\n                      id={`title${index}`}\n                      className=\"flex justify-center\"\n                      style={{\n                        background: \"transparent\",\n                        fontSize: \"1rem\",\n                        color: \"black\",\n                        fontWeight: \"800\",\n                        marginTop: \"15px\",\n                      }}\n                    >\n                      {result.title}\n                    </div>\n                  </Card>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </Row>\n    </div>\n  );\n}\n\nexport default MainPage;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/TranscationPage/TransactionPage.js",[],"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/NavBar/NavBar.js",["105","106"],"import \"./NavBar.scss\";\n\nimport React from \"react\";\nimport { Fragment } from \"react\";\nimport { Row, Col, Dropdown } from \"react-bootstrap\";\nimport { imgLink } from \"components/utils/utils\";\nimport { Link } from \"react-router-dom\";\n\nconst dropdown = [\n  {\n    text: \"MyPage\",\n    link: \"/MyPage\",\n  },\n  {\n    text: \"Transcation List\",\n    link: \"/TransactionPage\",\n  },\n  {\n    text: \"Logout\",\n  },\n];\n\nconst navMenu = [\n  {\n    text: \"Mint\",\n    link: \"/Mint\",\n  },\n  {\n    text: \"Exploration\",\n    link: \"/TravelPage\",\n  },\n  {\n    text: \"Mining\",\n    link: \"/MiningPage\",\n  },\n  {\n    text: \"Lend\",\n    link: \"/BorrowPage\",\n  },\n];\n\nfunction NavBar() {\n  return (\n    <Fragment>\n      <Row className=\"App\" lg={3} sm={1} xs={1}>\n        <Col className=\"d-flex justify-center\">\n          <div\n            style={{\n              width: \"100px\",\n              margin: \"10px\",\n            }}\n          >\n            <img\n              src={imgLink.dugeon}\n              alt=\"home\"\n              className=\"w-100\"\n              style={{\n                borderRadius: \"16px\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => {\n                window.location.replace(\"/\");\n              }}\n            />\n          </div>\n        </Col>\n\n        <Col>\n          <Row\n            className=\"h-100\"\n            style={{\n              margin: \"10px\",\n            }}\n          >\n            {navMenu.map((result, index) => {\n              return (\n                <Col\n                  key={index}\n                  className=\"flex justify-center align-center\"\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"900\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <Link\n                    to={result.link}\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"purple\",\n                    }}\n                    onMouseOver={(e) => {\n                      e.target.style.transform = \"scale(1.2)\";\n                      e.target.style.transition = \"0.2s ease-in-out 0s\";\n                      e.target.style.borderBottom = \"1px solid red\";\n                    }}\n                    onMouseOut={(e) => {\n                      e.target.style.transform = \"scale(1)\";\n                      e.target.style.transition = \"0.2s ease-in-out 0s\";\n                      e.target.style.borderBottom = \"none\";\n                    }}\n                  >\n                    {result.text}\n                  </Link>\n                </Col>\n              );\n            })}\n          </Row>\n        </Col>\n\n        <Col className=\"d-flex justify-center align-center\">\n          <div\n            style={{\n              width: \"50px\",\n              margin: \"10px\",\n              marginRight: \"20px\",\n            }}\n          >\n            <Dropdown>\n              <Dropdown.Toggle\n                style={{\n                  background: \"transparent\",\n                  border: \"none\",\n                  width: \"80px\",\n                }}\n                onFocus={(e) => {\n                  e.target.style.boxShadow = \"none\";\n                }}\n              >\n                <img src={imgLink.avatar} alt=\"avatar\" className=\"w-100\" />\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu\n                style={{\n                  background: \"purple\",\n                }}\n              >\n                {dropdown.map((result, index) => {\n                  return (\n                    <div\n                      key={index}\n                      className=\"flex justify-start\"\n                      style={{\n                        background: \"transparent\",\n                        color: \"#fff\",\n                        cursor: \"pointer\",\n                        padding: \"5px\",\n                        fontWeight: \"900\",\n                      }}\n                      onClick={() => {\n                        if (result.text == \"Logout\") {\n                          window.localStorage.removeItem(\"connect\");\n                          window.location.reload();\n                        }\n                      }}\n                    >\n                      <Link\n                        to={result.text != \"Logout\" ? result.link : \"\"}\n                        style={{\n                          textDecoration: \"none\",\n                          color: \"#fff\",\n                          background: \"transparent\",\n                        }}\n                      >\n                        {result.text}\n                      </Link>\n                    </div>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default NavBar;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/LoginPage/LoginPage.js",["107","108","109"],"import React, { useEffect } from \"react\";\nimport \"./LoginPage.scss\";\n\nimport { imgLink } from \"../utils/utils\";\nimport { Fragment } from \"react\";\nimport { Col, Row, Button, Badge } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { accessNetworkVersion, signmessage } from \"components/utils/Variable\";\nimport { web3 } from \"contract/contract\";\n\nfunction LoginPage(props) {\n  const [error, setError] = useState(\"\");\n\n  const loginUsingWallet = async () => {\n    const wallet = window.ethereum;\n    setError(\"\");\n\n    if (wallet) {\n      try {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      } catch (error) {\n        setError(\"연결을 진행해 주세요!\");\n        return;\n      }\n\n      const checkisUnLock = await wallet._metamask.isUnlocked();\n\n      if (!checkisUnLock) {\n        try {\n          await wallet.enable();\n        } catch (error) {\n          setError(\"Wallet 잠금을 해제해 주세요\");\n          return;\n        }\n      }\n\n      const currentNetwork = wallet.networkVersion;\n\n      if (currentNetwork != accessNetworkVersion) {\n        setError(\"networkVersion 바이낸스 테스트넷으로 진행해 주세요!\");\n\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId: `0x${Number(97).toString(16)}`,\n              chainName: \"Smart Chain - Testnet\",\n              nativeCurrency: {\n                name: \"BNB\",\n                symbol: \"BNB\",\n                decimals: 18,\n              },\n              rpcUrls: [\"https://data-seed-prebsc-1-s1.binance.org:8545/\"],\n            },\n          ],\n        });\n        return;\n      }\n\n      try {\n        await web3.eth.personal.sign(\n          web3.utils.utf8ToHex(signmessage),\n          wallet.selectedAddress\n        );\n      } catch (error) {\n        setError(\"Sign해 주세요!\");\n        return;\n      }\n\n      console.log(\"무사히 연결 완료 되었습니다.\");\n\n      localStorage.setItem(\"connect\", JSON.stringify(wallet.selectedAddress));\n      props.setAuth(wallet.selectedAddress);\n    } else {\n      setError(\"지갑을 설치해 주세요\");\n    }\n  };\n  return (\n    <Fragment>\n      <div className=\"login_App flex justify-center align-center column\">\n        <h3\n          style={{\n            color: \"#ff926e\",\n            fontWeight: \"800\",\n            marginBottom: \"20px\",\n            background: \"transparent\",\n          }}\n        >\n          Binance Network & My Simple Project\n        </h3>\n        <Row\n          lg={1}\n          xs={1}\n          sm={1}\n          style={{\n            background: \"transparent\",\n          }}\n        >\n          <Col\n            className=\"flex justify-center\"\n            style={{\n              background: \"transparent\",\n            }}\n          >\n            <img src={imgLink.zolImg} alt=\"LoginImg\" />\n          </Col>\n          <Col\n            className=\"flex justify-center\"\n            style={{\n              paddingTop: \"20px\",\n              background: \"transparent\",\n            }}\n          >\n            <div\n              className=\"imghover flex justify-center\"\n              style={{\n                width: \"300px\",\n                height: \"180px\",\n                padding: \"10px\",\n                background: \"#fff\",\n                borderRadius: \"16px\",\n              }}\n            >\n              <img\n                src={imgLink.wallet}\n                alt=\"wallet\"\n                style={{\n                  objectFit: \"contain\",\n                  width: \"90%\",\n                  height: \"100%\",\n                  cursor: \"pointer\",\n                }}\n                onClick={async () => {\n                  await loginUsingWallet();\n                }}\n              />\n            </div>\n          </Col>\n\n          {error ? (\n            <Col\n              className=\"flex justify-center\"\n              style={{\n                marginTop: \"20px\",\n              }}\n            >\n              <Button\n                style={{\n                  background: \"transparent\",\n                  border: \"none\",\n                  color: \"red\",\n                }}\n              >\n                {error}\n              </Button>\n            </Col>\n          ) : (\n            \"\"\n          )}\n        </Row>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default LoginPage;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/Mint/Mint.js",["110","111"],"import { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\n\nimport \"swiper/swiper.scss\";\nimport \"swiper/modules/navigation/navigation.scss\";\nimport \"swiper/modules/pagination/pagination.scss\";\n\nimport { imgLink } from \"components/utils/utils\";\nimport { Fragment } from \"react\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\n\nSwiperCore.use([Navigation, Pagination]);\n\nconst siperExample = [\n  {\n    img: imgLink.zolOne,\n  },\n  {\n    img: imgLink.zolTwo,\n  },\n  {\n    img: imgLink.zolThree,\n  },\n  {\n    img: imgLink.zolFour,\n  },\n  {\n    img: imgLink.zolFive,\n  },\n];\n\nfunction Mint() {\n  useEffect(() => {\n    const data = document.querySelectorAll(\".swiper-pagination\");\n\n    if (data.length >= 1) {\n      data[0].style.bottom = \"0px\";\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <Row lg={1} xs={1} sm={1}>\n        <Col className=\"flex justify-center\">\n          <div\n            style={{\n              padding: \"20px\",\n              fontSize: \"1.2rem\",\n              fontWeight: \"800\",\n              color: \"purple\",\n            }}\n          >\n            This is Example Of NFT\n          </div>\n        </Col>\n\n        <Col>\n          <Swiper\n            className=\"banner\"\n            spaceBetween={30}\n            slidesPerView={1}\n            navigation\n            pagination={{ clickable: true }}\n          >\n            {siperExample.map((data, index) => {\n              return (\n                <SwiperSlide className=\"flex justify-center\">\n                  <img\n                    src={data.img}\n                    style={{\n                      objectFit: \"cover\",\n                    }}\n                  />\n                </SwiperSlide>\n              );\n            })}\n          </Swiper>\n        </Col>\n        <Col>\n          <Row\n            lg={1}\n            xs={1}\n            sm={1}\n            style={{\n              padding: \"20px\",\n            }}\n          >\n            <Col\n              className=\"flex justify-center\"\n              style={{\n                padding: \"20px 0px 0px 0px\",\n                fontSize: \"1.2rem\",\n                fontWeight: \"800\",\n                color: \"purple\",\n              }}\n            >\n              Mint Your NFT\n            </Col>\n            <Col\n              className=\"flex justify-center\"\n              style={{\n                fontSize: \"0.8rem\",\n                fontWeight: \"300\",\n                color: \"gray\",\n              }}\n            >\n              It Will Be Created Using P5js, Math.random\n            </Col>\n            <Col\n              className=\"flex justify-center\"\n              style={{\n                paddingTop: \"20px\",\n              }}\n            >\n              <Button\n                style={{\n                  width: \"100px\",\n                  background: \"transparent\",\n                }}\n                onClick={() => {\n                  console.log(\"sdf\");\n                }}\n              >\n                <img src={imgLink.mintButtonImg} className=\"w-100\" />\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default Mint;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/TravelPage/TravelPage.js",["112","113"],"import { imgLink } from \"components/utils/utils\";\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\n\nimport \"./TravelPage.scss\";\n\nconst travelData = [\n  {\n    img: imgLink.slumpOne,\n    tokenId: 1,\n    remainTime: 100,\n  },\n  {\n    img: imgLink.slumpTwo,\n    tokenId: 1,\n    remainTime: 100,\n  },\n  {\n    img: imgLink.slumpThree,\n    tokenId: 1,\n    remainTime: 100,\n  },\n  {\n    img: imgLink.slumpFour,\n    tokenId: 1,\n    remainTime: 100,\n  },\n  {\n    img: imgLink.slumpFive,\n    tokenId: 1,\n    remainTime: 100,\n  },\n  {\n    img: imgLink.slumpSix,\n    tokenId: 1,\n    remainTime: 100,\n  },\n  {\n    img: imgLink.slumpSeven,\n    tokenId: 1,\n    remainTime: 100,\n  },\n];\n\nfunction TravelPage() {\n  const [checkButton, setCheckButton] = useState(false);\n\n  return (\n    <Fragment>\n      <Card\n        className=\"flex column align-center\"\n        style={{\n          border: \"none\",\n          margin: \"40px 20px\",\n          minHeight: \"500px\",\n          background: \"transparent\",\n        }}\n      >\n        <Button\n          style={{\n            textAlign: \"center\",\n            width: \"max-content\",\n          }}\n          onClick={() => {\n            setCheckButton(!checkButton);\n          }}\n        >\n          {checkButton ? \"여행 가능한 NFT 보기\" : \"여행 진행중 인 NFT 보기\"}\n        </Button>\n        <Card.Body className=\"flex justify-center\">\n          <img\n            src={imgLink.questionMark}\n            style={{\n              width: \"300px\",\n              height: \"300px\",\n              borderRadius: \"12px\",\n            }}\n          />\n        </Card.Body>\n      </Card>\n      <Card>\n        <Card.Body>\n          <Row xs={2} sm={3} lg={5}>\n            {travelData.map((result, i) => {\n              return (\n                <Col key={i} className=\"flex justify-center\">\n                  <div\n                    style={{\n                      padding: \"10px\",\n                      margin: \"10px\",\n                    }}\n                  >\n                    <img\n                      src={result.img}\n                      style={{\n                        width: \"200px\",\n                        height: \"200px\",\n                        borderRadius: \"16px\",\n                      }}\n                    />\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n        </Card.Body>\n      </Card>\n    </Fragment>\n  );\n}\n\nexport default TravelPage;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/BorrowPage/BorrowFrom.js",[],"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/BorrowPage/BorrowTo.js",["114"],"import { imgLink } from \"components/utils/utils\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst dummy = [\n  {\n    tokenId: 1,\n    image: imgLink.slumpOne,\n  },\n\n  {\n    tokenId: 1,\n    image: imgLink.slumpTwo,\n  },\n  {\n    tokenId: 1,\n    image: imgLink.slumpThree,\n  },\n  {\n    tokenId: 1,\n    image: imgLink.slumpFour,\n  },\n  {\n    tokenId: 1,\n    image: imgLink.slumpFour,\n  },\n  {\n    tokenId: 1,\n    image: imgLink.slumpFour,\n  },\n  {\n    tokenId: 1,\n    image: imgLink.slumpFour,\n  },\n];\n\nfunction BorrowTo() {\n  return (\n    <Row xs={2} sm={3} lg={6}>\n      {dummy.map((data, i) => {\n        return (\n          <Col key={i}>\n            <div\n              style={{\n                padding: \"10px\",\n                margin: \"10px\",\n                background: \"#fff\",\n                borderRadius: \"12px\",\n                boxShadow: \"0px 1px 1px 1px #faf7ff\",\n              }}\n            >\n              <Row lg={1} sm={1} xs={1}>\n                <Col\n                  className=\"flex justify-between\"\n                  style={{\n                    background: \"#fff\",\n                    padding: \"10px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      background: \"#fff\",\n                    }}\n                  >\n                    {data.tokenId}\n                  </div>\n                  <div\n                    style={{\n                      background: \"#fff\",\n                    }}\n                  >\n                    Common\n                  </div>\n                </Col>\n                <Col\n                  className=\"flex justify-center\"\n                  style={{\n                    background: \"#fff\",\n                  }}\n                >\n                  <div\n                    className=\"flex justify-center align-center\"\n                    style={{\n                      background: \"#fff\",\n                      border: \"1px solid black\",\n                      borderRadius: \"12px\",\n                      width: \"200px\",\n                      height: \"200px\",\n                    }}\n                  >\n                    <img\n                      src={data.image}\n                      style={{\n                        width: \"90%\",\n                        height: \"90%\",\n                        borderRadius: \"12px\",\n                      }}\n                    />\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n}\n\nexport default BorrowTo;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/MiningPage/MiningPage.js",["115","116","117"],"import CardComponents from \"components/utils/CardComponents\";\nimport { imgLink } from \"components/utils/utils\";\n\nimport React from \"react\";\nimport { Fragment } from \"react\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport \"./MiningPage.scss\";\n\nconst cardDummy = [\n  {\n    img: imgLink.slumpOne,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpTwo,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpThree,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpFour,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpFive,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpSix,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n  {\n    img: imgLink.slumpSeven,\n    tokenId: 1,\n    power: 1,\n    level: 1,\n  },\n];\n\nfunction MiningPage() {\n  return (\n    <Fragment>\n      <div\n        style={{\n          width: \"90%\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n        }}\n      >\n        <Row\n          xs={1}\n          sm={1}\n          lg={1}\n          style={{\n            backgroundColor: \"#c8732f\",\n            margin: \"30px\",\n            padding: \"20px\",\n          }}\n        >\n          <Col>마이닝 중이라면 갈색</Col>\n          <Col>아니라면 보라색으로 보입니다.</Col>\n          <Col>클릭하면 상세 정보를 볼 수 있습니다.</Col>\n        </Row>\n      </div>\n\n      <Row\n        xs={1}\n        sm={3}\n        lg={6}\n        style={{\n          marginTop: \"20px\",\n        }}\n      >\n        {cardDummy.map((result, i) => {\n          return (\n            <Col key={i} className=\"flex justify-center\">\n              <div\n                style={{\n                  background: \"#c695fa\",\n                  margin: \"5px\",\n                  padding: \"10px\",\n                  borderRadius: \"12px\",\n                }}\n              >\n                <span>Grade</span>\n\n                <div\n                  className=\"flex justify-center align-center\"\n                  style={{\n                    background: \"#fff\",\n                    border: \"1px solid #0f4651\",\n                    borderRadius: \"12px\",\n                    width: \"200px\",\n                    height: \"200px\",\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <img\n                    src={result.img}\n                    style={{\n                      width: \"90%\",\n                      height: \"90%\",\n                      borderRadius: \"12px\",\n                      cursor: \"pointer\",\n                    }}\n                    onMouseOver={(e) => {\n                      e.target.style.transform = \"scale(1.3)\";\n                      e.target.style.transition = \"all 0.5s\";\n                    }}\n                    onMouseOut={(e) => {\n                      e.target.style.transform = \"scale(1)\";\n                      e.target.style.transition = \"all 0.5s\";\n                    }}\n                  />\n                </div>\n              </div>\n            </Col>\n          );\n        })}\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default MiningPage;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/BorrowPage/BorrowPage.js",["118","119","120","121"],"import { imgLink } from \"components/utils/utils\";\nimport React from \"react\";\nimport { Fragment } from \"react\";\nimport { Col, Row, Card, ListGroup, Tab, Nav } from \"react-bootstrap\";\nimport BorrowFrom from \"./BorrowFrom\";\nimport \"./BorrowPage.scss\";\nimport BorrowTo from \"./BorrowTo\";\n\nconst dummyData = [\n  {\n    components: <BorrowFrom />,\n    filter: \"빌린 NFT List\",\n  },\n  {\n    components: <BorrowTo />,\n    filter: \"빌려준 NFT List\",\n  },\n];\n\nconst tabData = [\n  {\n    title: \"빌려준 NFT List\",\n  },\n  {\n    title: \"빌린 NFT List\",\n  },\n];\n\nfunction BorrowPage() {\n  return (\n    <Fragment>\n      <Tab.Container defaultActiveKey={tabData[0].title.toLowerCase()}>\n        <Nav className=\"flex justify-around\">\n          {tabData.map((data, i) => {\n            return (\n              <Nav.Item\n                as=\"li\"\n                key={i}\n                style={{\n                  padding: \"20px\",\n                  background: \"#fff\",\n                  borderRadius: \"12px\",\n                  boxShadow: \"1px 1px 1px 1px\",\n                }}\n              >\n                <Nav.Link\n                  eventKey={data.title.toLowerCase()}\n                  style={{\n                    background: \"transparent\",\n                    color: \"purple\",\n                    fontWeight: \"800\",\n                    fontSize: \"1.1rem\",\n                  }}\n                >\n                  {data.title}\n                </Nav.Link>\n              </Nav.Item>\n            );\n          })}\n        </Nav>\n        <Card\n          style={{\n            width: \"90%\",\n            marginTop: \"20px\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n            background: \"#fff\",\n            borderRadius: \"12px\",\n            boxShadow: \"1px 1px 1px 1px black\",\n          }}\n        >\n          <Card.Body\n            style={{\n              borderRadius: \"12px\",\n            }}\n          >\n            <Tab.Content>\n              {dummyData.map((data, i) => {\n                return (\n                  <Tab.Pane eventKey={data.filter.toLowerCase()} key={i}>\n                    {data.components}\n                  </Tab.Pane>\n                );\n              })}\n            </Tab.Content>\n          </Card.Body>\n        </Card>\n      </Tab.Container>\n    </Fragment>\n  );\n}\n\nexport default BorrowPage;\n","/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/Error/Error.js",[],"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/utils/utils.js",[],"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/utils/CardComponents.js",[],"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/components/utils/Variable.js",[],"/Users/yuhojin/Desktop/NFT-lendProject/Client/src/contract/contract.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":60,"column":15,"nodeType":"128","messageId":"129","endLine":60,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":65,"column":6,"nodeType":"132","endLine":65,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":17,"nodeType":"136","messageId":"137","endLine":2,"endColumn":25},{"ruleId":"134","severity":1,"message":"138","line":2,"column":27,"nodeType":"136","messageId":"137","endLine":2,"endColumn":36},{"ruleId":"134","severity":1,"message":"139","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":13},{"ruleId":"134","severity":1,"message":"140","line":4,"column":15,"nodeType":"136","messageId":"137","endLine":4,"endColumn":18},{"ruleId":"134","severity":1,"message":"141","line":7,"column":7,"nodeType":"136","messageId":"137","endLine":7,"endColumn":12},{"ruleId":"134","severity":1,"message":"142","line":22,"column":7,"nodeType":"136","messageId":"137","endLine":22,"endColumn":16},{"ruleId":"134","severity":1,"message":"143","line":33,"column":9,"nodeType":"136","messageId":"137","endLine":33,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":110,"column":21,"nodeType":"146","endLine":151,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":151,"column":41,"nodeType":"128","messageId":"129","endLine":151,"endColumn":43},{"ruleId":"126","severity":1,"message":"147","line":158,"column":41,"nodeType":"128","messageId":"129","endLine":158,"endColumn":43},{"ruleId":"134","severity":1,"message":"138","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"148","line":6,"column":28,"nodeType":"136","messageId":"137","endLine":6,"endColumn":33},{"ruleId":"126","severity":1,"message":"147","line":39,"column":26,"nodeType":"128","messageId":"129","endLine":39,"endColumn":28},{"ruleId":"144","severity":1,"message":"145","line":69,"column":19,"nodeType":"146","endLine":74,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":125,"column":17,"nodeType":"146","endLine":125,"endColumn":70},{"ruleId":"144","severity":1,"message":"145","line":74,"column":11,"nodeType":"146","endLine":81,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":96,"column":21,"nodeType":"146","endLine":103,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":90,"column":21,"nodeType":"146","endLine":97,"endColumn":23},{"ruleId":"134","severity":1,"message":"149","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":22},{"ruleId":"134","severity":1,"message":"150","line":6,"column":20,"nodeType":"136","messageId":"137","endLine":6,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":112,"column":19,"nodeType":"146","endLine":128,"endColumn":21},{"ruleId":"134","severity":1,"message":"151","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":17},{"ruleId":"134","severity":1,"message":"139","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":13},{"ruleId":"134","severity":1,"message":"140","line":4,"column":15,"nodeType":"136","messageId":"137","endLine":4,"endColumn":18},{"ruleId":"134","severity":1,"message":"152","line":4,"column":26,"nodeType":"136","messageId":"137","endLine":4,"endColumn":35},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlPath.pathname'. Either include it or remove the dependency array.","ArrayExpression",["155"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'dummy' is assigned a value but never used.","'cardDummy' is assigned a value but never used.","'observer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'Badge' is defined but never used.","'CardComponents' is defined but never used.","'Button' is defined but never used.","'imgLink' is defined but never used.","'ListGroup' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [urlPath.pathname]",{"range":"158","text":"159"},[1060,1062],"[urlPath.pathname]"]