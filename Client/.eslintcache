[{"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\index.js":"1","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\App.js":"2","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\Home.js":"3","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\main.js":"4","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\NavBar\\NavBar.js":"5","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\BorrowPage\\BorrowPage.js":"6","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MainPage\\MainPage.js":"7","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MiningPage\\MiningPage.js":"8","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\TravelPage\\TravelPage.js":"9","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MyPage\\MyPage.js":"10","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\LoginPage\\LoginPage.js":"11","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Error\\Error.js":"12","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\TranscationPage\\TransactionPage.js":"13","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\utils.js":"14","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\Variable.js":"15","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\CardComponents.js":"16","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Contract\\ContractCall\\BalanceCall.js":"17","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Contract\\Contract.js":"18","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Contract\\ContractData.js":"19","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Mint\\Mint.js":"20"},{"size":328,"mtime":1667450639491,"results":"21","hashOfConfig":"22"},{"size":747,"mtime":1667374671986,"results":"23","hashOfConfig":"22"},{"size":1775,"mtime":1667457228923,"results":"24","hashOfConfig":"22"},{"size":627,"mtime":1667457233378,"results":"25","hashOfConfig":"22"},{"size":4994,"mtime":1667457692045,"results":"26","hashOfConfig":"22"},{"size":782,"mtime":1667526889793,"results":"27","hashOfConfig":"22"},{"size":5906,"mtime":1667526840012,"results":"28","hashOfConfig":"22"},{"size":2266,"mtime":1667288142500,"results":"29","hashOfConfig":"22"},{"size":3519,"mtime":1667288142508,"results":"30","hashOfConfig":"22"},{"size":5155,"mtime":1667288142502,"results":"31","hashOfConfig":"22"},{"size":4539,"mtime":1667452319696,"results":"32","hashOfConfig":"22"},{"size":74,"mtime":1667375474207,"results":"33","hashOfConfig":"22"},{"size":170,"mtime":1667288142506,"results":"34","hashOfConfig":"22"},{"size":2304,"mtime":1667526620961,"results":"35","hashOfConfig":"22"},{"size":202,"mtime":1667292087498,"results":"36","hashOfConfig":"22"},{"size":655,"mtime":1667288142511,"results":"37","hashOfConfig":"22"},{"size":248,"mtime":1667288142489,"results":"38","hashOfConfig":"22"},{"size":1187,"mtime":1667288142489,"results":"39","hashOfConfig":"22"},{"size":1000,"mtime":1667288142492,"results":"40","hashOfConfig":"22"},{"size":3339,"mtime":1667526775625,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ki9nqy",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\index.js",[],["88","89"],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\App.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\Home.js",["90","91","92"],"import React from \"react\";\r\n\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport {\r\n  NavBar,\r\n  MainPage,\r\n  MyPage,\r\n  MiningPage,\r\n  TravelPage,\r\n  BorrowPage,\r\n  TransactionPage,\r\n  Error,\r\n  Mint,\r\n} from \"components/main\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst routers = [\r\n  {\r\n    path: \"/\",\r\n    component: MainPage,\r\n  },\r\n  {\r\n    path: \"/MyPage\",\r\n    component: MyPage,\r\n  },\r\n  {\r\n    path: \"/MiningPage\",\r\n    component: MiningPage,\r\n  },\r\n  {\r\n    path: \"/TravelPage\",\r\n    component: TravelPage,\r\n  },\r\n  {\r\n    path: \"/BorrowPage\",\r\n    component: BorrowPage,\r\n  },\r\n  {\r\n    path: \"/TransactionPage\",\r\n    component: TransactionPage,\r\n  },\r\n\r\n  {\r\n    path: \"/Mint\",\r\n    component: Mint,\r\n  },\r\n];\r\n\r\nfunction Home() {\r\n  const urlPath = useLocation();\r\n\r\n  const [checkUrl, setCheckUrl] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let pathName = urlPath.pathname;\r\n\r\n    for (let i = 0; i < routers.length; i++) {\r\n      const url = routers[i].path;\r\n      if (url == pathName) {\r\n        setCheckUrl(true);\r\n        break;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  window.ethereum.on(\"accountsChanged\", async function (account) {\r\n    window.location.reload();\r\n  });\r\n\r\n  window.ethereum.on(\"networkChanged\", async function (network) {\r\n    window.localStorage.removeItem(\"connect\");\r\n    window.location.replace(\"/\");\r\n  });\r\n\r\n  return (\r\n    <di>\r\n      {checkUrl && <NavBar />}\r\n\r\n      <div className={`${checkUrl ? \"show-url\" : \"hide-url\"}`}>\r\n        {routers.map((data, i) => {\r\n          return (\r\n            <Route exact path={data.path} key={i} component={data.component} />\r\n          );\r\n        })}\r\n      </div>\r\n      {!checkUrl && <Error />}\r\n    </di>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\main.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\NavBar\\NavBar.js",["93","94"],"import \"./NavBar.scss\";\r\n\r\nimport React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Row, Col, Dropdown } from \"react-bootstrap\";\r\nimport { imgLink } from \"components/utils/utils\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst dropdown = [\r\n  {\r\n    text: \"MyPage\",\r\n    link: \"/MyPage\",\r\n  },\r\n  {\r\n    text: \"Transcation List\",\r\n    link: \"/TransactionPage\",\r\n  },\r\n  {\r\n    text: \"Logout\",\r\n  },\r\n];\r\n\r\nconst navMenu = [\r\n  {\r\n    text: \"Mint\",\r\n    link: \"/Mint\",\r\n  },\r\n  {\r\n    text: \"Exploration\",\r\n    link: \"/TravelPage\",\r\n  },\r\n  {\r\n    text: \"Mining\",\r\n    link: \"/MiningPage\",\r\n  },\r\n  {\r\n    text: \"Lend\",\r\n    link: \"/BorrowPage\",\r\n  },\r\n];\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"App\" lg={3} sm={1} xs={1}>\r\n        <Col className=\"d-flex justify-center\">\r\n          <div\r\n            style={{\r\n              width: \"100px\",\r\n              margin: \"10px\",\r\n            }}\r\n          >\r\n            <img\r\n              src={imgLink.dugeon}\r\n              alt=\"home\"\r\n              className=\"w-100\"\r\n              style={{\r\n                borderRadius: \"16px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                window.location.replace(\"/\");\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Row\r\n            className=\"h-100\"\r\n            style={{\r\n              margin: \"10px\",\r\n            }}\r\n          >\r\n            {navMenu.map((result, index) => {\r\n              return (\r\n                <Col\r\n                  key={index}\r\n                  className=\"flex justify-center align-center\"\r\n                  style={{\r\n                    fontSize: \"1.4rem\",\r\n                    fontWeight: \"900\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <Link\r\n                    to={result.link}\r\n                    style={{\r\n                      textDecoration: \"none\",\r\n                      color: \"purple\",\r\n                    }}\r\n                    onMouseOver={(e) => {\r\n                      e.target.style.transform = \"scale(1.2)\";\r\n                      e.target.style.transition = \"0.2s ease-in-out 0s\";\r\n                      e.target.style.borderBottom = \"1px solid red\";\r\n                    }}\r\n                    onMouseOut={(e) => {\r\n                      e.target.style.transform = \"scale(1)\";\r\n                      e.target.style.transition = \"0.2s ease-in-out 0s\";\r\n                      e.target.style.borderBottom = \"none\";\r\n                    }}\r\n                  >\r\n                    {result.text}\r\n                  </Link>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col className=\"d-flex justify-center align-center\">\r\n          <div\r\n            style={{\r\n              width: \"50px\",\r\n              margin: \"10px\",\r\n              marginRight: \"20px\",\r\n            }}\r\n          >\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                style={{\r\n                  background: \"transparent\",\r\n                  border: \"none\",\r\n                  width: \"80px\",\r\n                }}\r\n                onFocus={(e) => {\r\n                  e.target.style.boxShadow = \"none\";\r\n                }}\r\n              >\r\n                <img src={imgLink.avatar} alt=\"avatar\" className=\"w-100\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu\r\n                style={{\r\n                  background: \"purple\",\r\n                }}\r\n              >\r\n                {dropdown.map((result, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className=\"flex justify-start\"\r\n                      style={{\r\n                        background: \"transparent\",\r\n                        color: \"#fff\",\r\n                        cursor: \"pointer\",\r\n                        padding: \"5px\",\r\n                        fontWeight: \"900\",\r\n                      }}\r\n                      onClick={() => {\r\n                        if (result.text == \"Logout\") {\r\n                          window.localStorage.removeItem(\"connect\");\r\n                          window.location.reload();\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Link\r\n                        to={result.text != \"Logout\" ? result.link : \"\"}\r\n                        style={{\r\n                          textDecoration: \"none\",\r\n                          color: \"#fff\",\r\n                          background: \"transparent\",\r\n                        }}\r\n                      >\r\n                        {result.text}\r\n                      </Link>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\BorrowPage\\BorrowPage.js",["95","96","97","98","99"],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MainPage\\MainPage.js",["100","101"],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MiningPage\\MiningPage.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\TravelPage\\TravelPage.js",["102","103","104","105"],"import { imgLink } from \"components/utils/utils\";\r\nimport CardComponents from \"components/utils/CardComponents\";\r\nimport { Col, Row, Button, ListGroup, Tab } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\n// import dugeonImage from \"/img/dugeon.webp\";\r\n\r\nimport \"./TravelPage.scss\";\r\n\r\nconst travelData = [\r\n  {\r\n    img: imgLink.slumpOne,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpTwo,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpThree,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpFour,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpFive,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpSix,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpSeven,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n];\r\n\r\nfunction TravelPage() {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"Travelpage_container\"\r\n        style={{\r\n          backgroundImage: `url(/img/dugeon.webp)`,\r\n        }}\r\n      >\r\n        <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n          <Row>\r\n            <Col sm={4}>\r\n              <ListGroup horizontal>\r\n                <ListGroup.Item action href=\"#link1\">\r\n                  Traveling NFT\r\n                </ListGroup.Item>\r\n                <ListGroup.Item action href=\"#link2\">\r\n                  Do Travel\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col sm={8}>\r\n              <Tab.Content>\r\n                <Tab.Pane eventKey=\"#link1\">\r\n                  <div className=\"Travelpage_app\">\r\n                    {travelData.map((result, index) => {\r\n                      return (\r\n                        <>\r\n                          <div className=\"TravelPage_map\" key={index}>\r\n                            <img\r\n                              src={result.img}\r\n                              style={{\r\n                                width: \"100%\",\r\n                                height: \"100px\",\r\n                                objectFit: \"contain\",\r\n                              }}\r\n                            />\r\n                            <p>tokenId : {result.tokenId}</p>\r\n                            <p>remain Time : {result.remainTime}</p>\r\n                          </div>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"#link2\">\r\n                  <div className=\"Travelpage_app\">\r\n                    {travelData.map((result, index) => {\r\n                      return (\r\n                        <>\r\n                          <div className=\"TravelPage_map\" key={index}>\r\n                            <img\r\n                              src={result.img}\r\n                              style={{\r\n                                width: \"100%\",\r\n                                height: \"100px\",\r\n                                objectFit: \"contain\",\r\n                              }}\r\n                            />\r\n                            <p>tokenId : {result.tokenId}</p>\r\n                          </div>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TravelPage;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MyPage\\MyPage.js",["106","107","108","109"],"import { getNFTBalanceOf } from \"components/Contract/ContractCall/BalanceCall\";\r\nimport { imgLink } from \"components/utils/utils\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./MyPage.scss\";\r\n\r\nconst dummy = [\r\n  {\r\n    tagName: \"MyNFT\",\r\n  },\r\n  {\r\n    tagName: \"Mining\",\r\n  },\r\n  {\r\n    tagName: \"Traveling\",\r\n  },\r\n  {\r\n    tagName: \"Borrow\",\r\n  },\r\n];\r\n\r\nconst cardDummy = [\r\n  {\r\n    img: imgLink.slumpOne,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpTwo,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpThree,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpFour,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpFive,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpSix,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpSeven,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n];\r\n\r\nfunction MyPage() {\r\n  const [notStakedNFTBalance, setNotStakedNFTBalance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getNFTAmount();\r\n  }, []);\r\n\r\n  const getNFTAmount = async () => {\r\n    await getNFTBalanceOf();\r\n  };\r\n\r\n  return (\r\n    <div className=\"MyPageTotal\">\r\n      <div className=\"MyPageContainer\">\r\n        <div className=\"MyPageTitleContainer\">\r\n          <div className=\"MyPageTitle\">\r\n            <img\r\n              src={imgLink.slumpFive}\r\n              style={{\r\n                width: \"100%\",\r\n                maxHeight: \"200px\",\r\n                opacity: \"0.8\",\r\n              }}\r\n            />\r\n            <div\r\n              className=\"MyPageTitle_Circle\"\r\n              style={{\r\n                backgroundImage: `url(${imgLink.slumpSeven})`,\r\n                backgroundSize: \"100% 100%\",\r\n                backgroundRepeat: \"no-repeat\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n\r\n          <Row xs={2} lg={4}>\r\n            {dummy.map((result, index) => {\r\n              return (\r\n                <Col className=\"TagList\">\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#323C73\",\r\n                      width: \"100%\",\r\n                      borderRadius: \"10px 10px 0px 0px\",\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      cursor: \"pointer\",\r\n                      color: \"#fff\",\r\n                    }}\r\n                  >\r\n                    {result.tagName}\r\n                  </div>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n          <div className=\"MyPageNFTListContainer\">\r\n            <Row xs={2} md={3} lg={4}>\r\n              {cardDummy.map((result, index) => {\r\n                return (\r\n                  <Col\r\n                    className=\"TagList\"\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <div className=\"MyPageListDiv\">\r\n                      <img\r\n                        id=\"listImg\"\r\n                        src={result.img}\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"100px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onMouseOver={(event) => {\r\n                          event.target.style.opacity = 0;\r\n                        }}\r\n                        onMouseLeave={(event) => {\r\n                          event.target.style.opacity = 1;\r\n                        }}\r\n                      />\r\n                      <div\r\n                        className=\"MyPageImgData\"\r\n                        onMouseOver={() => {\r\n                          const data = document.querySelectorAll(\"#listImg\");\r\n                          data[index].style.opacity = 0;\r\n                        }}\r\n                        onMouseLeave={() => {\r\n                          const data = document.querySelectorAll(\"#listImg\");\r\n                          data[index].style.opacity = 1;\r\n                        }}\r\n                      >\r\n                        <div>\r\n                          <span className=\"span\">tokenId</span> : 1\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"span\">level</span> : 1\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"span\">grade</span> : hojin\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"span\">reward</span> : 100\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPage;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\LoginPage\\LoginPage.js",["110","111","112"],"import React, { useEffect } from \"react\";\r\nimport \"./LoginPage.scss\";\r\n\r\nimport { imgLink } from \"../utils/utils\";\r\nimport { Fragment } from \"react\";\r\nimport { Col, Row, Button, Badge } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { accessNetworkVersion, signmessage } from \"components/utils/Variable\";\r\nimport { web3 } from \"components/Contract/Contract\";\r\n\r\nfunction LoginPage(props) {\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const loginUsingWallet = async () => {\r\n    const wallet = window.ethereum;\r\n    setError(\"\");\r\n\r\n    if (wallet) {\r\n      try {\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      } catch (error) {\r\n        setError(\"연결을 진행해 주세요!\");\r\n        return;\r\n      }\r\n\r\n      const checkisUnLock = await wallet._metamask.isUnlocked();\r\n\r\n      if (!checkisUnLock) {\r\n        try {\r\n          await wallet.enable();\r\n        } catch (error) {\r\n          setError(\"Wallet 잠금을 해제해 주세요\");\r\n          return;\r\n        }\r\n      }\r\n\r\n      const currentNetwork = wallet.networkVersion;\r\n\r\n      if (currentNetwork != accessNetworkVersion) {\r\n        setError(\"networkVersion 바이낸스 테스트넷으로 진행해 주세요!\");\r\n\r\n        await window.ethereum.request({\r\n          method: \"wallet_addEthereumChain\",\r\n          params: [\r\n            {\r\n              chainId: `0x${Number(97).toString(16)}`,\r\n              chainName: \"Smart Chain - Testnet\",\r\n              nativeCurrency: {\r\n                name: \"BNB\",\r\n                symbol: \"BNB\",\r\n                decimals: 18,\r\n              },\r\n              rpcUrls: [\"https://data-seed-prebsc-1-s1.binance.org:8545/\"],\r\n            },\r\n          ],\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await web3.eth.personal.sign(\r\n          web3.utils.utf8ToHex(signmessage),\r\n          wallet.selectedAddress\r\n        );\r\n      } catch (error) {\r\n        setError(\"Sign해 주세요!\");\r\n        return;\r\n      }\r\n\r\n      console.log(\"무사히 연결 완료 되었습니다.\");\r\n\r\n      localStorage.setItem(\"connect\", JSON.stringify(wallet.selectedAddress));\r\n      props.setAuth(wallet.selectedAddress);\r\n    } else {\r\n      setError(\"지갑을 설치해 주세요\");\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"login_App flex justify-center align-center column\">\r\n        <h3\r\n          style={{\r\n            color: \"#ff926e\",\r\n            fontWeight: \"800\",\r\n            marginBottom: \"20px\",\r\n            background: \"transparent\",\r\n          }}\r\n        >\r\n          Binance Network & My Simple Project\r\n        </h3>\r\n        <Row\r\n          lg={1}\r\n          xs={1}\r\n          sm={1}\r\n          style={{\r\n            background: \"transparent\",\r\n          }}\r\n        >\r\n          <Col\r\n            className=\"flex justify-center\"\r\n            style={{\r\n              background: \"transparent\",\r\n            }}\r\n          >\r\n            <img src={imgLink.zolImg} alt=\"LoginImg\" />\r\n          </Col>\r\n          <Col\r\n            className=\"flex justify-center\"\r\n            style={{\r\n              paddingTop: \"20px\",\r\n              background: \"transparent\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"imghover flex justify-center\"\r\n              style={{\r\n                width: \"300px\",\r\n                height: \"180px\",\r\n                padding: \"10px\",\r\n                background: \"#fff\",\r\n                borderRadius: \"16px\",\r\n              }}\r\n            >\r\n              <img\r\n                src={imgLink.wallet}\r\n                alt=\"wallet\"\r\n                style={{\r\n                  objectFit: \"contain\",\r\n                  width: \"90%\",\r\n                  height: \"100%\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={async () => {\r\n                  await loginUsingWallet();\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n          {error ? (\r\n            <Col\r\n              className=\"flex justify-center\"\r\n              style={{\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  background: \"transparent\",\r\n                  border: \"none\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                {error}\r\n              </Button>\r\n            </Col>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Row>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Error\\Error.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\TranscationPage\\TransactionPage.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\utils.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\Variable.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\CardComponents.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Contract\\ContractCall\\BalanceCall.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Contract\\Contract.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Contract\\ContractData.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Mint\\Mint.js",["113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":13,"column":3,"nodeType":"121","messageId":"122","endLine":13,"endColumn":9},{"ruleId":"123","severity":1,"message":"124","line":61,"column":15,"nodeType":"125","messageId":"126","endLine":61,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":66,"column":6,"nodeType":"129","endLine":66,"endColumn":8,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"124","line":151,"column":41,"nodeType":"125","messageId":"126","endLine":151,"endColumn":43},{"ruleId":"123","severity":1,"message":"131","line":158,"column":41,"nodeType":"125","messageId":"126","endLine":158,"endColumn":43},{"ruleId":"119","severity":1,"message":"132","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":13},{"ruleId":"119","severity":1,"message":"133","line":3,"column":15,"nodeType":"121","messageId":"122","endLine":3,"endColumn":18},{"ruleId":"119","severity":1,"message":"134","line":3,"column":20,"nodeType":"121","messageId":"122","endLine":3,"endColumn":24},{"ruleId":"119","severity":1,"message":"135","line":3,"column":26,"nodeType":"121","messageId":"122","endLine":3,"endColumn":35},{"ruleId":"119","severity":1,"message":"136","line":6,"column":7,"nodeType":"121","messageId":"122","endLine":6,"endColumn":16},{"ruleId":"119","severity":1,"message":"137","line":33,"column":9,"nodeType":"121","messageId":"122","endLine":33,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":110,"column":21,"nodeType":"140","endLine":151,"endColumn":23},{"ruleId":"119","severity":1,"message":"141","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":22},{"ruleId":"119","severity":1,"message":"142","line":3,"column":20,"nodeType":"121","messageId":"122","endLine":3,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":77,"column":29,"nodeType":"140","endLine":84,"endColumn":31},{"ruleId":"138","severity":1,"message":"139","line":99,"column":29,"nodeType":"140","endLine":106,"endColumn":31},{"ruleId":"119","severity":1,"message":"143","line":69,"column":10,"nodeType":"121","messageId":"122","endLine":69,"endColumn":29},{"ruleId":"119","severity":1,"message":"144","line":69,"column":31,"nodeType":"121","messageId":"122","endLine":69,"endColumn":53},{"ruleId":"138","severity":1,"message":"139","line":84,"column":13,"nodeType":"140","endLine":91,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":138,"column":23,"nodeType":"140","endLine":152,"endColumn":25},{"ruleId":"119","severity":1,"message":"145","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"146","line":6,"column":28,"nodeType":"121","messageId":"122","endLine":6,"endColumn":33},{"ruleId":"123","severity":1,"message":"131","line":39,"column":26,"nodeType":"125","messageId":"126","endLine":39,"endColumn":28},{"ruleId":"138","severity":1,"message":"139","line":69,"column":19,"nodeType":"140","endLine":74,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":125,"column":17,"nodeType":"140","endLine":125,"endColumn":70},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlPath.pathname'. Either include it or remove the dependency array.","ArrayExpression",["149"],"Expected '!==' and instead saw '!='.","'Col' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'ListGroup' is defined but never used.","'dummyData' is assigned a value but never used.","'observer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardComponents' is defined but never used.","'Button' is defined but never used.","'notStakedNFTBalance' is assigned a value but never used.","'setNotStakedNFTBalance' is assigned a value but never used.","'useEffect' is defined but never used.","'Badge' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [urlPath.pathname]",{"range":"152","text":"153"},[1135,1137],"[urlPath.pathname]"]