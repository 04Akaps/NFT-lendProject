[{"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\index.js":"1","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\App.js":"2","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\Home.js":"3","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\main.js":"4","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MyPage\\MyPage.js":"5","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\NavBar\\NavBar.js":"6","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\BorrowPage\\BorrowFrom.js":"7","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\BorrowPage\\BorrowTo.js":"8","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MiningPage\\MiningPage.js":"9","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\TravelPage\\TravelPage.js":"10","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Mint\\Mint.js":"11","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Error\\Error.js":"12","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\LoginPage\\LoginPage.js":"13","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\BorrowPage\\BorrowPage.js":"14","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\TranscationPage\\TransactionPage.js":"15","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MainPage\\MainPage.js":"16","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\utils.js":"17","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\Variable.js":"18","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\contract\\JSON\\contract.js":"19","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\contract\\zolTokenCall.js":"20","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\contract\\MetaMask\\MetaMask.js":"21"},{"size":328,"mtime":1667866676329,"results":"22","hashOfConfig":"23"},{"size":747,"mtime":1668402180063,"results":"24","hashOfConfig":"23"},{"size":3626,"mtime":1668495202138,"results":"25","hashOfConfig":"23"},{"size":757,"mtime":1667866676322,"results":"26","hashOfConfig":"23"},{"size":1055,"mtime":1667866676316,"results":"27","hashOfConfig":"23"},{"size":5024,"mtime":1668495202141,"results":"28","hashOfConfig":"23"},{"size":91,"mtime":1667866676307,"results":"29","hashOfConfig":"23"},{"size":2660,"mtime":1667866676308,"results":"30","hashOfConfig":"23"},{"size":3239,"mtime":1668499340343,"results":"31","hashOfConfig":"23"},{"size":2646,"mtime":1667866676321,"results":"32","hashOfConfig":"23"},{"size":3339,"mtime":1667866676315,"results":"33","hashOfConfig":"23"},{"size":74,"mtime":1667866676309,"results":"34","hashOfConfig":"23"},{"size":7318,"mtime":1668500681992,"results":"35","hashOfConfig":"23"},{"size":2419,"mtime":1667866676307,"results":"36","hashOfConfig":"23"},{"size":170,"mtime":1667866676320,"results":"37","hashOfConfig":"23"},{"size":5906,"mtime":1667866676312,"results":"38","hashOfConfig":"23"},{"size":2375,"mtime":1668500875222,"results":"39","hashOfConfig":"23"},{"size":202,"mtime":1667866676326,"results":"40","hashOfConfig":"23"},{"size":1233,"mtime":1668495202144,"results":"41","hashOfConfig":"23"},{"size":293,"mtime":1668499224612,"results":"42","hashOfConfig":"23"},{"size":145,"mtime":1668499438555,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ki9nqy",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\index.js",[],["93","94"],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\App.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\Home.js",["95","96"],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\main.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MyPage\\MyPage.js",["97","98","99","100","101","102"],"import { imgLink } from \"components/utils/utils\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./MyPage.scss\";\r\n\r\nconst dummy = [\r\n  {\r\n    tagName: \"MyNFT\",\r\n  },\r\n  {\r\n    tagName: \"Mining\",\r\n  },\r\n  {\r\n    tagName: \"Traveling\",\r\n  },\r\n  {\r\n    tagName: \"Borrow\",\r\n  },\r\n];\r\n\r\nconst cardDummy = [\r\n  {\r\n    img: imgLink.slumpOne,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpTwo,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpThree,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpFour,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpFive,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpSix,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n  {\r\n    img: imgLink.slumpSeven,\r\n    tokenId: 1,\r\n    power: 1,\r\n    level: 1,\r\n  },\r\n];\r\n\r\nfunction MyPage() {\r\n  return <div>test</div>;\r\n}\r\n\r\nexport default MyPage;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\NavBar\\NavBar.js",["103","104"],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\BorrowPage\\BorrowFrom.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\BorrowPage\\BorrowTo.js",["105"],"import { imgLink } from \"components/utils/utils\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst dummy = [\r\n  {\r\n    tokenId: 1,\r\n    image: imgLink.slumpOne,\r\n  },\r\n\r\n  {\r\n    tokenId: 1,\r\n    image: imgLink.slumpTwo,\r\n  },\r\n  {\r\n    tokenId: 1,\r\n    image: imgLink.slumpThree,\r\n  },\r\n  {\r\n    tokenId: 1,\r\n    image: imgLink.slumpFour,\r\n  },\r\n  {\r\n    tokenId: 1,\r\n    image: imgLink.slumpFour,\r\n  },\r\n  {\r\n    tokenId: 1,\r\n    image: imgLink.slumpFour,\r\n  },\r\n  {\r\n    tokenId: 1,\r\n    image: imgLink.slumpFour,\r\n  },\r\n];\r\n\r\nfunction BorrowTo() {\r\n  return (\r\n    <Row xs={2} sm={3} lg={6}>\r\n      {dummy.map((data, i) => {\r\n        return (\r\n          <Col key={i}>\r\n            <div\r\n              style={{\r\n                padding: \"10px\",\r\n                margin: \"10px\",\r\n                background: \"#fff\",\r\n                borderRadius: \"12px\",\r\n                boxShadow: \"0px 1px 1px 1px #faf7ff\",\r\n              }}\r\n            >\r\n              <Row lg={1} sm={1} xs={1}>\r\n                <Col\r\n                  className=\"flex justify-between\"\r\n                  style={{\r\n                    background: \"#fff\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      background: \"#fff\",\r\n                    }}\r\n                  >\r\n                    {data.tokenId}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      background: \"#fff\",\r\n                    }}\r\n                  >\r\n                    Common\r\n                  </div>\r\n                </Col>\r\n                <Col\r\n                  className=\"flex justify-center\"\r\n                  style={{\r\n                    background: \"#fff\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"flex justify-center align-center\"\r\n                    style={{\r\n                      background: \"#fff\",\r\n                      border: \"1px solid black\",\r\n                      borderRadius: \"12px\",\r\n                      width: \"200px\",\r\n                      height: \"200px\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={data.image}\r\n                      style={{\r\n                        width: \"90%\",\r\n                        height: \"90%\",\r\n                        borderRadius: \"12px\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default BorrowTo;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MiningPage\\MiningPage.js",["106","107"],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\TravelPage\\TravelPage.js",["108","109"],"import { imgLink } from \"components/utils/utils\";\r\n\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"./TravelPage.scss\";\r\n\r\nconst travelData = [\r\n  {\r\n    img: imgLink.slumpOne,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpTwo,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpThree,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpFour,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpFive,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpSix,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n  {\r\n    img: imgLink.slumpSeven,\r\n    tokenId: 1,\r\n    remainTime: 100,\r\n  },\r\n];\r\n\r\nfunction TravelPage() {\r\n  const [checkButton, setCheckButton] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card\r\n        className=\"flex column align-center\"\r\n        style={{\r\n          border: \"none\",\r\n          margin: \"40px 20px\",\r\n          minHeight: \"500px\",\r\n          background: \"transparent\",\r\n        }}\r\n      >\r\n        <Button\r\n          style={{\r\n            textAlign: \"center\",\r\n            width: \"max-content\",\r\n          }}\r\n          onClick={() => {\r\n            setCheckButton(!checkButton);\r\n          }}\r\n        >\r\n          {checkButton ? \"여행 가능한 NFT 보기\" : \"여행 진행중 인 NFT 보기\"}\r\n        </Button>\r\n        <Card.Body className=\"flex justify-center\">\r\n          <img\r\n            src={imgLink.questionMark}\r\n            style={{\r\n              width: \"300px\",\r\n              height: \"300px\",\r\n              borderRadius: \"12px\",\r\n            }}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n        <Card.Body>\r\n          <Row xs={2} sm={3} lg={5}>\r\n            {travelData.map((result, i) => {\r\n              return (\r\n                <Col key={i} className=\"flex justify-center\">\r\n                  <div\r\n                    style={{\r\n                      padding: \"10px\",\r\n                      margin: \"10px\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={result.img}\r\n                      style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        borderRadius: \"16px\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default TravelPage;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Mint\\Mint.js",["110","111"],"import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\r\n\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/modules/navigation/navigation.scss\";\r\nimport \"swiper/modules/pagination/pagination.scss\";\r\n\r\nimport { imgLink } from \"components/utils/utils\";\r\nimport { Fragment } from \"react\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport { useEffect } from \"react\";\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nconst siperExample = [\r\n  {\r\n    img: imgLink.zolOne,\r\n  },\r\n  {\r\n    img: imgLink.zolTwo,\r\n  },\r\n  {\r\n    img: imgLink.zolThree,\r\n  },\r\n  {\r\n    img: imgLink.zolFour,\r\n  },\r\n  {\r\n    img: imgLink.zolFive,\r\n  },\r\n];\r\n\r\nfunction Mint() {\r\n  useEffect(() => {\r\n    const data = document.querySelectorAll(\".swiper-pagination\");\r\n\r\n    if (data.length >= 1) {\r\n      data[0].style.bottom = \"0px\";\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row lg={1} xs={1} sm={1}>\r\n        <Col className=\"flex justify-center\">\r\n          <div\r\n            style={{\r\n              padding: \"20px\",\r\n              fontSize: \"1.2rem\",\r\n              fontWeight: \"800\",\r\n              color: \"purple\",\r\n            }}\r\n          >\r\n            This is Example Of NFT\r\n          </div>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Swiper\r\n            className=\"banner\"\r\n            spaceBetween={30}\r\n            slidesPerView={1}\r\n            navigation\r\n            pagination={{ clickable: true }}\r\n          >\r\n            {siperExample.map((data, index) => {\r\n              return (\r\n                <SwiperSlide className=\"flex justify-center\">\r\n                  <img\r\n                    src={data.img}\r\n                    style={{\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                </SwiperSlide>\r\n              );\r\n            })}\r\n          </Swiper>\r\n        </Col>\r\n        <Col>\r\n          <Row\r\n            lg={1}\r\n            xs={1}\r\n            sm={1}\r\n            style={{\r\n              padding: \"20px\",\r\n            }}\r\n          >\r\n            <Col\r\n              className=\"flex justify-center\"\r\n              style={{\r\n                padding: \"20px 0px 0px 0px\",\r\n                fontSize: \"1.2rem\",\r\n                fontWeight: \"800\",\r\n                color: \"purple\",\r\n              }}\r\n            >\r\n              Mint Your NFT\r\n            </Col>\r\n            <Col\r\n              className=\"flex justify-center\"\r\n              style={{\r\n                fontSize: \"0.8rem\",\r\n                fontWeight: \"300\",\r\n                color: \"gray\",\r\n              }}\r\n            >\r\n              It Will Be Created Using P5js, Math.random\r\n            </Col>\r\n            <Col\r\n              className=\"flex justify-center\"\r\n              style={{\r\n                paddingTop: \"20px\",\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  width: \"100px\",\r\n                  background: \"transparent\",\r\n                }}\r\n                onClick={() => {\r\n                  console.log(\"sdf\");\r\n                }}\r\n              >\r\n                <img src={imgLink.mintButtonImg} className=\"w-100\" />\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Mint;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\Error\\Error.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\LoginPage\\LoginPage.js",["112","113","114","115","116","117"],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\BorrowPage\\BorrowPage.js",["118","119","120","121"],"import { imgLink } from \"components/utils/utils\";\r\nimport React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Col, Row, Card, ListGroup, Tab, Nav } from \"react-bootstrap\";\r\nimport BorrowFrom from \"./BorrowFrom\";\r\nimport \"./BorrowPage.scss\";\r\nimport BorrowTo from \"./BorrowTo\";\r\n\r\nconst dummyData = [\r\n  {\r\n    components: <BorrowFrom />,\r\n    filter: \"빌린 NFT List\",\r\n  },\r\n  {\r\n    components: <BorrowTo />,\r\n    filter: \"빌려준 NFT List\",\r\n  },\r\n];\r\n\r\nconst tabData = [\r\n  {\r\n    title: \"빌려준 NFT List\",\r\n  },\r\n  {\r\n    title: \"빌린 NFT List\",\r\n  },\r\n];\r\n\r\nfunction BorrowPage() {\r\n  return (\r\n    <Fragment>\r\n      <Tab.Container defaultActiveKey={tabData[0].title.toLowerCase()}>\r\n        <Nav className=\"flex justify-around\">\r\n          {tabData.map((data, i) => {\r\n            return (\r\n              <Nav.Item\r\n                as=\"li\"\r\n                key={i}\r\n                style={{\r\n                  padding: \"20px\",\r\n                  background: \"#fff\",\r\n                  borderRadius: \"12px\",\r\n                  boxShadow: \"1px 1px 1px 1px\",\r\n                }}\r\n              >\r\n                <Nav.Link\r\n                  eventKey={data.title.toLowerCase()}\r\n                  style={{\r\n                    background: \"transparent\",\r\n                    color: \"purple\",\r\n                    fontWeight: \"800\",\r\n                    fontSize: \"1.1rem\",\r\n                  }}\r\n                >\r\n                  {data.title}\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            );\r\n          })}\r\n        </Nav>\r\n        <Card\r\n          style={{\r\n            width: \"90%\",\r\n            marginTop: \"20px\",\r\n            marginRight: \"auto\",\r\n            marginLeft: \"auto\",\r\n            background: \"#fff\",\r\n            borderRadius: \"12px\",\r\n            boxShadow: \"1px 1px 1px 1px black\",\r\n          }}\r\n        >\r\n          <Card.Body\r\n            style={{\r\n              borderRadius: \"12px\",\r\n            }}\r\n          >\r\n            <Tab.Content>\r\n              {dummyData.map((data, i) => {\r\n                return (\r\n                  <Tab.Pane eventKey={data.filter.toLowerCase()} key={i}>\r\n                    {data.components}\r\n                  </Tab.Pane>\r\n                );\r\n              })}\r\n            </Tab.Content>\r\n          </Card.Body>\r\n        </Card>\r\n      </Tab.Container>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default BorrowPage;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\TranscationPage\\TransactionPage.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\MainPage\\MainPage.js",["122","123"],"import { imgLink } from \"components/utils/utils\";\r\nimport React from \"react\";\r\nimport { Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport \"./MainPage.scss\";\r\n\r\nconst contentMap = [\r\n  {\r\n    image: imgLink.game,\r\n    text: \"게임을 즐기고 다른 사람들과 경쟁하세요!!\",\r\n    title: \"Play Earn\",\r\n  },\r\n\r\n  {\r\n    image: imgLink.play,\r\n    text: \"Staking을 하여 코인을 투적하세요!\",\r\n    title: \"NFT Mining\",\r\n  },\r\n\r\n  {\r\n    image: imgLink.lend,\r\n    text: \"서로 NFT를 빌려줘서 보상 및 탐험을 즐기세요!\",\r\n    title: \"Lend NFT To Others\",\r\n  },\r\n\r\n  {\r\n    image: imgLink.exploration,\r\n    text: \"모험에 참여하여 또다른 NFT를 가져가세요!\",\r\n    title: \"Exploration Using NFT\",\r\n  },\r\n];\r\n\r\nfunction MainPage() {\r\n  const observer = new IntersectionObserver((e) => {\r\n    console.log(\"sd\");\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Row lg={1} sm={1} xs={1}>\r\n        <Col\r\n          className=\"flex justify-center column align-center\"\r\n          style={{\r\n            color: \"purple\",\r\n            fontSize: \"2rem\",\r\n            fontWeight: \"1000\",\r\n            marginTop: \"5%\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{\r\n              fontWeight: \"1000\",\r\n              color: \"#fff\",\r\n              background: \"purple\",\r\n              border: \"none\",\r\n              width: \"200px\",\r\n            }}\r\n          >\r\n            MyPage\r\n          </Button>\r\n          Welcome To My WebSite\r\n        </Col>\r\n\r\n        <Col className=\"flex justify-center column align-center\">\r\n          <div\r\n            style={{\r\n              background: \"transparent\",\r\n              color: \"purple\",\r\n              maxWidth: \"50%\",\r\n              whiteSpace: \"normal\",\r\n              wordBreak: \"break-all\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            이곳은 MainPage 입니다. 대략적인 사이트에 대한 설명이 들어가\r\n            있습니다. 감사합니다.\r\n          </div>\r\n        </Col>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"300px\",\r\n            marginBottom: \"300px\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"flex justify-center\"\r\n            style={{\r\n              padding: \"20px\",\r\n              fontWeight: \"1000\",\r\n              fontSize: \"3rem\",\r\n              color: \"purple\",\r\n            }}\r\n          >\r\n            Our Content\r\n          </div>\r\n\r\n          <Row className=\"flex justify-around w-100\" lg={4} sm={2} xs={1}>\r\n            {contentMap.map((result, index) => {\r\n              return (\r\n                <Col className=\"flex justify-center\">\r\n                  <Card\r\n                    id={`card${index}`}\r\n                    style={{\r\n                      margin: \"20px\",\r\n                      padding: \"20px\",\r\n                      borderRadius: \"12px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={result.image}\r\n                      style={{\r\n                        borderRadius: \"12px\",\r\n                        width: \"100%\",\r\n                        height: \"90%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      onMouseOver={(e) => {\r\n                        e.target.style.transition = \"all 1s\";\r\n                        e.target.style.opacity = 0;\r\n\r\n                        const data = document.querySelectorAll(`#test${index}`);\r\n                        const card = document.querySelectorAll(`#card${index}`);\r\n                        const title = document.querySelectorAll(\r\n                          `#title${index}`\r\n                        );\r\n\r\n                        title[0].style.color = \"#fff\";\r\n\r\n                        card[0].style.background = \"purple\";\r\n                        card[0].style.transition = \"all 1s\";\r\n\r\n                        data[0].style.transition = \"all 1s\";\r\n                        data[0].style.opacity = 1;\r\n                      }}\r\n                      onMouseOut={(e) => {\r\n                        e.target.style.opacity = 1;\r\n\r\n                        const card = document.querySelectorAll(`#card${index}`);\r\n\r\n                        const title = document.querySelectorAll(\r\n                          `#title${index}`\r\n                        );\r\n\r\n                        const data = document.querySelectorAll(`#test${index}`);\r\n\r\n                        title[0].style.color = \"black\";\r\n                        card[0].style.background = \"#fff\";\r\n                        data[0].style.opacity = 0;\r\n                      }}\r\n                    />\r\n                    <div\r\n                      id={`test${index}`}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        opacity: \"0\",\r\n                        top: \"20%\",\r\n                        width: \"90%\",\r\n                        marginRight: \"auto\",\r\n                        marginLeft: \"auto\",\r\n                        background: \"transparent\",\r\n                        color: \"#fff\",\r\n                      }}\r\n                    >\r\n                      {result.text}\r\n                    </div>\r\n                    <div\r\n                      id={`title${index}`}\r\n                      className=\"flex justify-center\"\r\n                      style={{\r\n                        background: \"transparent\",\r\n                        fontSize: \"1rem\",\r\n                        color: \"black\",\r\n                        fontWeight: \"800\",\r\n                        marginTop: \"15px\",\r\n                      }}\r\n                    >\r\n                      {result.title}\r\n                    </div>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </div>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\utils.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\components\\utils\\Variable.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\contract\\JSON\\contract.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\contract\\zolTokenCall.js",[],"C:\\Users\\BaekJunHong\\Desktop\\NFT-lendProject\\Client\\src\\contract\\MetaMask\\MetaMask.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":67,"column":15,"nodeType":"130","messageId":"131","endLine":67,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":77,"column":6,"nodeType":"134","endLine":77,"endColumn":8,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":17,"nodeType":"138","messageId":"139","endLine":2,"endColumn":25},{"ruleId":"136","severity":1,"message":"140","line":2,"column":27,"nodeType":"138","messageId":"139","endLine":2,"endColumn":36},{"ruleId":"136","severity":1,"message":"141","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":13},{"ruleId":"136","severity":1,"message":"142","line":4,"column":15,"nodeType":"138","messageId":"139","endLine":4,"endColumn":18},{"ruleId":"136","severity":1,"message":"143","line":7,"column":7,"nodeType":"138","messageId":"139","endLine":7,"endColumn":12},{"ruleId":"136","severity":1,"message":"144","line":22,"column":7,"nodeType":"138","messageId":"139","endLine":22,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":147,"column":41,"nodeType":"130","messageId":"131","endLine":147,"endColumn":43},{"ruleId":"128","severity":1,"message":"145","line":154,"column":41,"nodeType":"130","messageId":"131","endLine":154,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":90,"column":21,"nodeType":"148","endLine":97,"endColumn":23},{"ruleId":"136","severity":1,"message":"149","line":5,"column":20,"nodeType":"138","messageId":"139","endLine":5,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":111,"column":19,"nodeType":"148","endLine":127,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":74,"column":11,"nodeType":"148","endLine":81,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":96,"column":21,"nodeType":"148","endLine":103,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":69,"column":19,"nodeType":"148","endLine":74,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":125,"column":17,"nodeType":"148","endLine":125,"endColumn":70},{"ruleId":"136","severity":1,"message":"150","line":17,"column":27,"nodeType":"138","messageId":"139","endLine":17,"endColumn":45},{"ruleId":"132","severity":1,"message":"151","line":24,"column":13,"nodeType":"152","endLine":28,"endColumn":4},{"ruleId":"128","severity":1,"message":"145","line":55,"column":26,"nodeType":"130","messageId":"131","endLine":55,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":68,"column":26,"nodeType":"130","messageId":"131","endLine":68,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":86,"column":26,"nodeType":"130","messageId":"131","endLine":86,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":91,"column":26,"nodeType":"130","messageId":"131","endLine":91,"endColumn":28},{"ruleId":"136","severity":1,"message":"153","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":17},{"ruleId":"136","severity":1,"message":"141","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":13},{"ruleId":"136","severity":1,"message":"142","line":4,"column":15,"nodeType":"138","messageId":"139","endLine":4,"endColumn":18},{"ruleId":"136","severity":1,"message":"154","line":4,"column":26,"nodeType":"138","messageId":"139","endLine":4,"endColumn":35},{"ruleId":"136","severity":1,"message":"155","line":33,"column":9,"nodeType":"138","messageId":"139","endLine":33,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":110,"column":21,"nodeType":"148","endLine":151,"endColumn":23},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlPath.pathname'. Either include it or remove the dependency array.","ArrayExpression",["158"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'dummy' is assigned a value but never used.","'cardDummy' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'setZolTokenApprove' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'imgLink' is defined but never used.","'ListGroup' is defined but never used.","'observer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [urlPath.pathname]",{"range":"161","text":"162"},[1456,1458],"[urlPath.pathname]"]